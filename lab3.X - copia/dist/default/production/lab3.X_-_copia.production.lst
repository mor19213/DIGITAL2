

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 15:35:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0001                     _TMR0	set	1
   455  0006                     _PORTB	set	6
   456  0005                     _PORTA	set	5
   457  0019                     _TXREG	set	25
   458  001A                     _RCREG	set	26
   459  000C                     _PIR1bits	set	12
   460  001F                     _ADCON0bits	set	31
   461  001E                     _ADRESH	set	30
   462  000B                     _INTCONbits	set	11
   463  0018                     _RCSTAbits	set	24
   464  0008                     _PORTD	set	8
   465  001F                     _ADCON0	set	31
   466  0064                     _TXIF	set	100
   467  002F                     _RA7	set	47
   468  0066                     _ADIF	set	102
   469  0049                     _RE1	set	73
   470  0048                     _RE0	set	72
   471  0081                     _OPTION_REGbits	set	129
   472  0086                     _TRISB	set	134
   473  0089                     _TRISE	set	137
   474  0088                     _TRISD	set	136
   475  0085                     _TRISA	set	133
   476  009A                     _SPBRGH	set	154
   477  0098                     _TXSTAbits	set	152
   478  0099                     _SPBRG	set	153
   479  0087                     _TRISCbits	set	135
   480  0089                     _TRISEbits	set	137
   481  0085                     _TRISAbits	set	133
   482  008C                     _PIE1bits	set	140
   483  009F                     _ADCON1	set	159
   484  0464                     _TXIE	set	1124
   485  0188                     _ANSEL	set	392
   486  0187                     _BAUDCTLbits	set	391
   487  0188                     _ANSELbits	set	392
   488                           
   489                           	psect	strings
   490  0713                     __pstrings:
   491  0713                     stringtab:
   492  0713                     __stringtab:
   493  0713                     stringcode:	
   494                           ;	String table - string pointers are 1 byte each
   495                           
   496  0713                     stringdir:
   497  0713  3007               	movlw	high stringdir
   498  0714  008A               	movwf	10
   499  0715  0804               	movf	4,w
   500  0716  0A84               	incf	4,f
   501  0717  0782               	addwf	2,f
   502  0718                     __stringbase:
   503  0718  3400               	retlw	0
   504  0719                     __end_of__stringtab:
   505  0719                     STR_2:
   506  0719  3430               	retlw	48	;'0'
   507  071A  342E               	retlw	46	;'.'
   508  071B  3430               	retlw	48	;'0'
   509  071C  3430               	retlw	48	;'0'
   510  071D  3400               	retlw	0
   511  071E                     STR_1:
   512  071E  3453               	retlw	83	;'S'
   513  071F  3431               	retlw	49	;'1'
   514  0720  3400               	retlw	0
   515  0721                     STR_3:
   516  0721  3453               	retlw	83	;'S'
   517  0722  3432               	retlw	50	;'2'
   518  0723  3400               	retlw	0
   519  0724                     STR_5:
   520  0724  3453               	retlw	83	;'S'
   521  0725  3433               	retlw	51	;'3'
   522  0726  3400               	retlw	0
   523  0719                     
   524                           	psect	cinit
   525  000F                     start_initialization:	
   526                           ; #config settings
   527                           
   528  000F                     __initialization:
   529                           
   530                           ; Clear objects allocated to COMMON
   531  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   532  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   533  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   534                           
   535                           ; Clear objects allocated to BANK0
   536  0012  1383               	bcf	3,7	;select IRP bank0
   537  0013  3036               	movlw	low __pbssBANK0
   538  0014  0084               	movwf	4
   539  0015  304B               	movlw	low (__pbssBANK0+21)
   540  0016  120A  118A  2727  120A  118A  	fcall	clear_ram0
   541  001B                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  001B                     __end_of__initialization:
   545  001B  0183               	clrf	3
   546  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMMON
   549  0078                     __pbssCOMMON:
   550  0078                     _bandera1:
   551  0078                     	ds	1
   552  0079                     _RC_temp:
   553  0079                     	ds	1
   554  007A                     _bandera:
   555  007A                     	ds	1
   556                           
   557                           	psect	bssBANK0
   558  0036                     __pbssBANK0:
   559  0036                     _contador:
   560  0036                     	ds	2
   561  0038                     _a:
   562  0038                     	ds	2
   563  003A                     _C33:
   564  003A                     	ds	1
   565  003B                     _C32:
   566  003B                     	ds	1
   567  003C                     _C31:
   568  003C                     	ds	1
   569  003D                     _C23:
   570  003D                     	ds	1
   571  003E                     _C22:
   572  003E                     	ds	1
   573  003F                     _C21:
   574  003F                     	ds	1
   575  0040                     _C13:
   576  0040                     	ds	1
   577  0041                     _C12:
   578  0041                     	ds	1
   579  0042                     _C11:
   580  0042                     	ds	1
   581  0043                     _banderaTX:
   582  0043                     	ds	1
   583  0044                     _CONTX:
   584  0044                     	ds	1
   585  0045                     _ughh:
   586  0045                     	ds	1
   587  0046                     _cont2:
   588  0046                     	ds	1
   589  0047                     _cont1:
   590  0047                     	ds	1
   591  0048                     _var_contador:
   592  0048                     	ds	1
   593  0049                     _ADC2:
   594  0049                     	ds	1
   595  004A                     _ADC1:
   596  004A                     	ds	1
   597                           
   598                           	psect	clrtext
   599  0727                     clear_ram0:	
   600                           ;	Called with FSR containing the base address, and
   601                           ;	W with the last address+1
   602                           
   603  0727  0064               	clrwdt	;clear the watchdog before getting into this loop
   604  0728                     clrloop0:
   605  0728  0180               	clrf	0	;clear RAM location pointed to by FSR
   606  0729  0A84               	incf	4,f	;increment pointer
   607  072A  0604               	xorwf	4,w	;XOR with final address
   608  072B  1903               	btfsc	3,2	;have we reached the end yet?
   609  072C  3400               	retlw	0	;all done for this memory range, return
   610  072D  0604               	xorwf	4,w	;XOR again to restore value
   611  072E  2F28               	goto	clrloop0	;do the next byte
   612                           
   613                           	psect	cstackCOMMON
   614  0070                     __pcstackCOMMON:
   615  0070                     ?_Setup:
   616  0070                     ?_initADC:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_Lcd_Port:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_Lcd_Cmd:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_Lcd_Init:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_Lcd_Write_Char:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_Lcd_Write_String:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_initUSART:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_isr:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_isr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_main:	
   644                           ; 1 bytes @ 0x0
   645                           
   646                           
   647                           ; 1 bytes @ 0x0
   648  0070                     	ds	3
   649  0073                     ??_initADC:
   650  0073                     ??_Lcd_Port:	
   651                           ; 1 bytes @ 0x3
   652                           
   653  0073                     ??_initUSART:	
   654                           ; 1 bytes @ 0x3
   655                           
   656  0073                     ?___bmul:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     ?___wmul:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     Lcd_Port@a:	
   663                           ; 2 bytes @ 0x3
   664                           
   665  0073                     ___bmul@multiplicand:	
   666                           ; 1 bytes @ 0x3
   667                           
   668  0073                     ___wmul@multiplier:	
   669                           ; 1 bytes @ 0x3
   670                           
   671                           
   672                           ; 2 bytes @ 0x3
   673  0073                     	ds	1
   674  0074                     ??_Lcd_Cmd:
   675  0074                     ??_Lcd_Write_Char:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     ??___bmul:	
   679                           ; 1 bytes @ 0x4
   680                           
   681                           
   682                           ; 1 bytes @ 0x4
   683  0074                     	ds	1
   684  0075                     initADC@IRCF:
   685  0075                     Lcd_Write_Char@a:	
   686                           ; 1 bytes @ 0x5
   687                           
   688  0075                     ___bmul@product:	
   689                           ; 1 bytes @ 0x5
   690                           
   691  0075                     ___wmul@multiplicand:	
   692                           ; 1 bytes @ 0x5
   693                           
   694                           
   695                           ; 2 bytes @ 0x5
   696  0075                     	ds	1
   697  0076                     ??_Lcd_Write_String:
   698  0076                     Lcd_Cmd@a:	
   699                           ; 1 bytes @ 0x6
   700                           
   701  0076                     ___bmul@multiplier:	
   702                           ; 1 bytes @ 0x6
   703                           
   704                           
   705                           ; 1 bytes @ 0x6
   706  0076                     	ds	1
   707  0077                     ?_Lcd_Set_Cursor:
   708  0077                     ??___wmul:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     ??___awdiv:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0077                     ??___lwdiv:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0077                     Lcd_Set_Cursor@b:	
   718                           ; 1 bytes @ 0x7
   719                           
   720                           
   721                           ; 1 bytes @ 0x7
   722  0077                     	ds	1
   723                           
   724                           	psect	cstackBANK0
   725  0020                     __pcstackBANK0:
   726  0020                     ??_Lcd_Set_Cursor:
   727  0020                     ??_Lcd_Init:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     Lcd_Write_String@i:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ___wmul@product:	
   734                           ; 2 bytes @ 0x0
   735                           
   736                           
   737                           ; 2 bytes @ 0x0
   738  0020                     	ds	1
   739  0021                     Lcd_Set_Cursor@a:
   740                           
   741                           ; 1 bytes @ 0x1
   742  0021                     	ds	1
   743  0022                     ?___awdiv:
   744  0022                     ?___lwdiv:	
   745                           ; 2 bytes @ 0x2
   746                           
   747  0022                     Lcd_Set_Cursor@temp:	
   748                           ; 2 bytes @ 0x2
   749                           
   750  0022                     Lcd_Write_String@a:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0022                     ___awdiv@divisor:	
   754                           ; 1 bytes @ 0x2
   755                           
   756  0022                     ___lwdiv@divisor:	
   757                           ; 2 bytes @ 0x2
   758                           
   759                           
   760                           ; 2 bytes @ 0x2
   761  0022                     	ds	1
   762  0023                     ??_Setup:
   763                           
   764                           ; 1 bytes @ 0x3
   765  0023                     	ds	1
   766  0024                     ___awdiv@dividend:
   767  0024                     ___lwdiv@dividend:	
   768                           ; 2 bytes @ 0x4
   769                           
   770                           
   771                           ; 2 bytes @ 0x4
   772  0024                     	ds	2
   773  0026                     ___awdiv@counter:
   774  0026                     ___lwdiv@quotient:	
   775                           ; 1 bytes @ 0x6
   776                           
   777                           
   778                           ; 2 bytes @ 0x6
   779  0026                     	ds	1
   780  0027                     ___awdiv@sign:
   781                           
   782                           ; 1 bytes @ 0x7
   783  0027                     	ds	1
   784  0028                     ___lwdiv@counter:
   785  0028                     ___awdiv@quotient:	
   786                           ; 1 bytes @ 0x8
   787                           
   788                           
   789                           ; 2 bytes @ 0x8
   790  0028                     	ds	2
   791  002A                     ??_main:
   792                           
   793                           ; 1 bytes @ 0xA
   794  002A                     	ds	8
   795  0032                     _main$1183:
   796                           
   797                           ; 2 bytes @ 0x12
   798  0032                     	ds	2
   799  0034                     _main$1182:
   800                           
   801                           ; 2 bytes @ 0x14
   802  0034                     	ds	2
   803                           
   804                           	psect	maintext
   805  001F                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 156 in file "lab3.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : B00/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       4       0       0       0
   827 ;;      Temps:          0       8       0       0       0
   828 ;;      Totals:         0      12       0       0       0
   829 ;;Total ram usage:       12 bytes
   830 ;; Hardware stack levels required when called:    5
   831 ;; This function calls:
   832 ;;		_Lcd_Set_Cursor
   833 ;;		_Lcd_Write_Char
   834 ;;		_Setup
   835 ;;		___awdiv
   836 ;;		___bmul
   837 ;;		___lwdiv
   838 ;;		___wmul
   839 ;; This function is called by:
   840 ;;		Startup code after reset
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _main
   846  001F                     _main:
   847  001F                     l1913:	
   848                           ;incstack = 0
   849                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   850                           
   851                           
   852                           ;lab3.c: 157:         C11 = 5;
   853  001F  120A  118A  241E  120A  118A  	fcall	_Setup
   854  0024                     l1915:
   855                           
   856                           ;lab3.c: 159:     if (C31 > 5){
   857  0024  3010               	movlw	16
   858  0025  1283               	bcf	3,5	;RP0=0, select bank0
   859  0026  1303               	bcf	3,6	;RP1=0, select bank0
   860  0027  0244               	subwf	_CONTX,w
   861  0028  1C03               	skipc
   862  0029  282B               	goto	u1161
   863  002A  282C               	goto	u1160
   864  002B                     u1161:
   865  002B  2830               	goto	l1921
   866  002C                     u1160:
   867  002C                     l1917:
   868                           
   869                           ;lab3.c: 160:         C11 = 5;
   870  002C  01C4               	clrf	_CONTX
   871  002D                     l1919:
   872                           
   873                           ;lab3.c: 161:     }
   874  002D  1683               	bsf	3,5	;RP0=1, select bank1
   875  002E  1303               	bcf	3,6	;RP1=0, select bank1
   876  002F  160C               	bsf	12,4	;volatile
   877  0030                     l1921:
   878                           
   879                           ;lab3.c: 165:     Lcd_Set_Cursor(2,1);
   880  0030  3033               	movlw	51
   881  0031  1283               	bcf	3,5	;RP0=0, select bank0
   882  0032  00A2               	movwf	___awdiv@divisor
   883  0033  3000               	movlw	0
   884  0034  00A3               	movwf	___awdiv@divisor+1
   885  0035  084A               	movf	_ADC1,w
   886  0036  00AA               	movwf	??_main
   887  0037  01AB               	clrf	??_main+1
   888  0038  082A               	movf	??_main,w
   889  0039  00A4               	movwf	___awdiv@dividend
   890  003A  082B               	movf	??_main+1,w
   891  003B  00A5               	movwf	___awdiv@dividend+1
   892  003C  120A  118A  24D1  120A  118A  	fcall	___awdiv
   893  0041  1283               	bcf	3,5	;RP0=0, select bank0
   894  0042  1303               	bcf	3,6	;RP1=0, select bank0
   895  0043  0822               	movf	?___awdiv,w
   896  0044  00AC               	movwf	??_main+2
   897  0045  082C               	movf	??_main+2,w
   898  0046  00C2               	movwf	_C11
   899  0047                     l1923:
   900                           
   901                           ;lab3.c: 166:     Lcd_Write_Char(C11 +48);
   902  0047  3033               	movlw	51
   903  0048  00A2               	movwf	___awdiv@divisor
   904  0049  3000               	movlw	0
   905  004A  00A3               	movwf	___awdiv@divisor+1
   906  004B  084A               	movf	_ADC1,w
   907  004C  00AA               	movwf	??_main
   908  004D  01AB               	clrf	??_main+1
   909  004E  082A               	movf	??_main,w
   910  004F  00F3               	movwf	___wmul@multiplier
   911  0050  082B               	movf	??_main+1,w
   912  0051  00F4               	movwf	___wmul@multiplier+1
   913  0052  3064               	movlw	100
   914  0053  00F5               	movwf	___wmul@multiplicand
   915  0054  3000               	movlw	0
   916  0055  00F6               	movwf	___wmul@multiplicand+1
   917  0056  120A  118A  2637  120A  118A  	fcall	___wmul
   918  005B  0874               	movf	?___wmul+1,w
   919  005C  1283               	bcf	3,5	;RP0=0, select bank0
   920  005D  1303               	bcf	3,6	;RP1=0, select bank0
   921  005E  00A5               	movwf	___awdiv@dividend+1
   922  005F  0873               	movf	?___wmul,w
   923  0060  00A4               	movwf	___awdiv@dividend
   924  0061  120A  118A  24D1  120A  118A  	fcall	___awdiv
   925  0066  1283               	bcf	3,5	;RP0=0, select bank0
   926  0067  1303               	bcf	3,6	;RP1=0, select bank0
   927  0068  0822               	movf	?___awdiv,w
   928  0069  00AC               	movwf	??_main+2
   929  006A  0823               	movf	?___awdiv+1,w
   930  006B  00AD               	movwf	??_main+3
   931  006C  0842               	movf	_C11,w
   932  006D  00AE               	movwf	??_main+4
   933  006E  01AF               	clrf	??_main+5
   934  006F  082E               	movf	??_main+4,w
   935  0070  00F3               	movwf	___wmul@multiplier
   936  0071  082F               	movf	??_main+5,w
   937  0072  00F4               	movwf	___wmul@multiplier+1
   938  0073  309C               	movlw	156
   939  0074  00F5               	movwf	___wmul@multiplicand
   940  0075  30FF               	movlw	255
   941  0076  00F6               	movwf	___wmul@multiplicand+1
   942  0077  120A  118A  2637  120A  118A  	fcall	___wmul
   943  007C  0873               	movf	?___wmul,w
   944  007D  1283               	bcf	3,5	;RP0=0, select bank0
   945  007E  1303               	bcf	3,6	;RP1=0, select bank0
   946  007F  072C               	addwf	??_main+2,w
   947  0080  00B4               	movwf	_main$1182
   948  0081  0874               	movf	?___wmul+1,w
   949  0082  1803               	skipnc
   950  0083  0A74               	incf	?___wmul+1,w
   951  0084  072D               	addwf	??_main+3,w
   952  0085  00B5               	movwf	_main$1182+1
   953  0086                     l1925:
   954                           
   955                           ;lab3.c: 166:     Lcd_Write_Char(C11 +48);
   956  0086  300A               	movlw	10
   957  0087  00A2               	movwf	___awdiv@divisor
   958  0088  3000               	movlw	0
   959  0089  00A3               	movwf	___awdiv@divisor+1
   960  008A  0835               	movf	_main$1182+1,w
   961  008B  00A5               	movwf	___awdiv@dividend+1
   962  008C  0834               	movf	_main$1182,w
   963  008D  00A4               	movwf	___awdiv@dividend
   964  008E  120A  118A  24D1  120A  118A  	fcall	___awdiv
   965  0093  1283               	bcf	3,5	;RP0=0, select bank0
   966  0094  1303               	bcf	3,6	;RP1=0, select bank0
   967  0095  0822               	movf	?___awdiv,w
   968  0096  00AA               	movwf	??_main
   969  0097  082A               	movf	??_main,w
   970  0098  00C1               	movwf	_C12
   971  0099                     l1927:
   972                           
   973                           ;lab3.c: 167:     Lcd_Set_Cursor(2,3);
   974  0099  3033               	movlw	51
   975  009A  00A2               	movwf	___awdiv@divisor
   976  009B  3000               	movlw	0
   977  009C  00A3               	movwf	___awdiv@divisor+1
   978  009D  084A               	movf	_ADC1,w
   979  009E  00AA               	movwf	??_main
   980  009F  01AB               	clrf	??_main+1
   981  00A0  082A               	movf	??_main,w
   982  00A1  00F3               	movwf	___wmul@multiplier
   983  00A2  082B               	movf	??_main+1,w
   984  00A3  00F4               	movwf	___wmul@multiplier+1
   985  00A4  3064               	movlw	100
   986  00A5  00F5               	movwf	___wmul@multiplicand
   987  00A6  3000               	movlw	0
   988  00A7  00F6               	movwf	___wmul@multiplicand+1
   989  00A8  120A  118A  2637  120A  118A  	fcall	___wmul
   990  00AD  0874               	movf	?___wmul+1,w
   991  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   992  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   993  00B0  00A5               	movwf	___awdiv@dividend+1
   994  00B1  0873               	movf	?___wmul,w
   995  00B2  00A4               	movwf	___awdiv@dividend
   996  00B3  120A  118A  24D1  120A  118A  	fcall	___awdiv
   997  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   998  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   999  00BA  0822               	movf	?___awdiv,w
  1000  00BB  00AC               	movwf	??_main+2
  1001  00BC  0823               	movf	?___awdiv+1,w
  1002  00BD  00AD               	movwf	??_main+3
  1003  00BE  309C               	movlw	156
  1004  00BF  00AE               	movwf	??_main+4
  1005  00C0  082E               	movf	??_main+4,w
  1006  00C1  00F3               	movwf	___bmul@multiplicand
  1007  00C2  0842               	movf	_C11,w
  1008  00C3  120A  118A  26FE  120A  118A  	fcall	___bmul
  1009  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1010  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1011  00CA  00AF               	movwf	??_main+5
  1012  00CB  30F6               	movlw	246
  1013  00CC  00B0               	movwf	??_main+6
  1014  00CD  0830               	movf	??_main+6,w
  1015  00CE  00F3               	movwf	___bmul@multiplicand
  1016  00CF  0841               	movf	_C12,w
  1017  00D0  120A  118A  26FE  120A  118A  	fcall	___bmul
  1018  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1019  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1020  00D7  072F               	addwf	??_main+5,w
  1021  00D8  072C               	addwf	??_main+2,w
  1022  00D9  00B1               	movwf	??_main+7
  1023  00DA  0831               	movf	??_main+7,w
  1024  00DB  00C0               	movwf	_C13
  1025  00DC                     l1929:
  1026                           
  1027                           ;lab3.c: 169:     Lcd_Set_Cursor(2,4);
  1028  00DC  3033               	movlw	51
  1029  00DD  00A2               	movwf	___awdiv@divisor
  1030  00DE  3000               	movlw	0
  1031  00DF  00A3               	movwf	___awdiv@divisor+1
  1032  00E0  0849               	movf	_ADC2,w
  1033  00E1  00AA               	movwf	??_main
  1034  00E2  01AB               	clrf	??_main+1
  1035  00E3  082A               	movf	??_main,w
  1036  00E4  00A4               	movwf	___awdiv@dividend
  1037  00E5  082B               	movf	??_main+1,w
  1038  00E6  00A5               	movwf	___awdiv@dividend+1
  1039  00E7  120A  118A  24D1  120A  118A  	fcall	___awdiv
  1040  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1041  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1042  00EE  0822               	movf	?___awdiv,w
  1043  00EF  00AC               	movwf	??_main+2
  1044  00F0  082C               	movf	??_main+2,w
  1045  00F1  00BF               	movwf	_C21
  1046  00F2                     l1931:
  1047                           
  1048                           ;lab3.c: 170:     Lcd_Write_Char(C13 + 48);
  1049  00F2  3033               	movlw	51
  1050  00F3  00A2               	movwf	___awdiv@divisor
  1051  00F4  3000               	movlw	0
  1052  00F5  00A3               	movwf	___awdiv@divisor+1
  1053  00F6  0849               	movf	_ADC2,w
  1054  00F7  00AA               	movwf	??_main
  1055  00F8  01AB               	clrf	??_main+1
  1056  00F9  082A               	movf	??_main,w
  1057  00FA  00F3               	movwf	___wmul@multiplier
  1058  00FB  082B               	movf	??_main+1,w
  1059  00FC  00F4               	movwf	___wmul@multiplier+1
  1060  00FD  3064               	movlw	100
  1061  00FE  00F5               	movwf	___wmul@multiplicand
  1062  00FF  3000               	movlw	0
  1063  0100  00F6               	movwf	___wmul@multiplicand+1
  1064  0101  120A  118A  2637  120A  118A  	fcall	___wmul
  1065  0106  0874               	movf	?___wmul+1,w
  1066  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0109  00A5               	movwf	___awdiv@dividend+1
  1069  010A  0873               	movf	?___wmul,w
  1070  010B  00A4               	movwf	___awdiv@dividend
  1071  010C  120A  118A  24D1  120A  118A  	fcall	___awdiv
  1072  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0113  0822               	movf	?___awdiv,w
  1075  0114  00AC               	movwf	??_main+2
  1076  0115  0823               	movf	?___awdiv+1,w
  1077  0116  00AD               	movwf	??_main+3
  1078  0117  083F               	movf	_C21,w
  1079  0118  00AE               	movwf	??_main+4
  1080  0119  01AF               	clrf	??_main+5
  1081  011A  082E               	movf	??_main+4,w
  1082  011B  00F3               	movwf	___wmul@multiplier
  1083  011C  082F               	movf	??_main+5,w
  1084  011D  00F4               	movwf	___wmul@multiplier+1
  1085  011E  309C               	movlw	156
  1086  011F  00F5               	movwf	___wmul@multiplicand
  1087  0120  30FF               	movlw	255
  1088  0121  00F6               	movwf	___wmul@multiplicand+1
  1089  0122  120A  118A  2637  120A  118A  	fcall	___wmul
  1090  0127  0873               	movf	?___wmul,w
  1091  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1093  012A  072C               	addwf	??_main+2,w
  1094  012B  00B4               	movwf	_main$1182
  1095  012C  0874               	movf	?___wmul+1,w
  1096  012D  1803               	skipnc
  1097  012E  0A74               	incf	?___wmul+1,w
  1098  012F  072D               	addwf	??_main+3,w
  1099  0130  00B5               	movwf	_main$1182+1
  1100  0131                     l1933:
  1101                           
  1102                           ;lab3.c: 170:     Lcd_Write_Char(C13 + 48);
  1103  0131  300A               	movlw	10
  1104  0132  00A2               	movwf	___awdiv@divisor
  1105  0133  3000               	movlw	0
  1106  0134  00A3               	movwf	___awdiv@divisor+1
  1107  0135  0835               	movf	_main$1182+1,w
  1108  0136  00A5               	movwf	___awdiv@dividend+1
  1109  0137  0834               	movf	_main$1182,w
  1110  0138  00A4               	movwf	___awdiv@dividend
  1111  0139  120A  118A  24D1  120A  118A  	fcall	___awdiv
  1112  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1113  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0140  0822               	movf	?___awdiv,w
  1115  0141  00AA               	movwf	??_main
  1116  0142  082A               	movf	??_main,w
  1117  0143  00BE               	movwf	_C22
  1118  0144                     l1935:
  1119                           
  1120                           ;lab3.c: 171: 
  1121  0144  3033               	movlw	51
  1122  0145  00A2               	movwf	___awdiv@divisor
  1123  0146  3000               	movlw	0
  1124  0147  00A3               	movwf	___awdiv@divisor+1
  1125  0148  0849               	movf	_ADC2,w
  1126  0149  00AA               	movwf	??_main
  1127  014A  01AB               	clrf	??_main+1
  1128  014B  082A               	movf	??_main,w
  1129  014C  00F3               	movwf	___wmul@multiplier
  1130  014D  082B               	movf	??_main+1,w
  1131  014E  00F4               	movwf	___wmul@multiplier+1
  1132  014F  3064               	movlw	100
  1133  0150  00F5               	movwf	___wmul@multiplicand
  1134  0151  3000               	movlw	0
  1135  0152  00F6               	movwf	___wmul@multiplicand+1
  1136  0153  120A  118A  2637  120A  118A  	fcall	___wmul
  1137  0158  0874               	movf	?___wmul+1,w
  1138  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1139  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1140  015B  00A5               	movwf	___awdiv@dividend+1
  1141  015C  0873               	movf	?___wmul,w
  1142  015D  00A4               	movwf	___awdiv@dividend
  1143  015E  120A  118A  24D1  120A  118A  	fcall	___awdiv
  1144  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0165  0822               	movf	?___awdiv,w
  1147  0166  00AC               	movwf	??_main+2
  1148  0167  0823               	movf	?___awdiv+1,w
  1149  0168  00AD               	movwf	??_main+3
  1150  0169  309C               	movlw	156
  1151  016A  00AE               	movwf	??_main+4
  1152  016B  082E               	movf	??_main+4,w
  1153  016C  00F3               	movwf	___bmul@multiplicand
  1154  016D  083F               	movf	_C21,w
  1155  016E  120A  118A  26FE  120A  118A  	fcall	___bmul
  1156  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0175  00AF               	movwf	??_main+5
  1159  0176  30F6               	movlw	246
  1160  0177  00B0               	movwf	??_main+6
  1161  0178  0830               	movf	??_main+6,w
  1162  0179  00F3               	movwf	___bmul@multiplicand
  1163  017A  083E               	movf	_C22,w
  1164  017B  120A  118A  26FE  120A  118A  	fcall	___bmul
  1165  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0182  072F               	addwf	??_main+5,w
  1168  0183  072C               	addwf	??_main+2,w
  1169  0184  00B1               	movwf	??_main+7
  1170  0185  0831               	movf	??_main+7,w
  1171  0186  00BD               	movwf	_C23
  1172  0187                     l1937:
  1173                           
  1174                           ;lab3.c: 173:     Lcd_Set_Cursor(2,7);
  1175  0187  3033               	movlw	51
  1176  0188  00A2               	movwf	___lwdiv@divisor
  1177  0189  3000               	movlw	0
  1178  018A  00A3               	movwf	___lwdiv@divisor+1
  1179  018B  0837               	movf	_contador+1,w
  1180  018C  00A5               	movwf	___lwdiv@dividend+1
  1181  018D  0836               	movf	_contador,w
  1182  018E  00A4               	movwf	___lwdiv@dividend
  1183  018F  120A  118A  25F1  120A  118A  	fcall	___lwdiv
  1184  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0196  0822               	movf	?___lwdiv,w
  1187  0197  00AA               	movwf	??_main
  1188  0198  082A               	movf	??_main,w
  1189  0199  00BC               	movwf	_C31
  1190  019A                     l1939:
  1191                           
  1192                           ;lab3.c: 174:     Lcd_Write_Char(C21 +48);
  1193  019A  3033               	movlw	51
  1194  019B  00A2               	movwf	___lwdiv@divisor
  1195  019C  3000               	movlw	0
  1196  019D  00A3               	movwf	___lwdiv@divisor+1
  1197  019E  0837               	movf	_contador+1,w
  1198  019F  00F4               	movwf	___wmul@multiplier+1
  1199  01A0  0836               	movf	_contador,w
  1200  01A1  00F3               	movwf	___wmul@multiplier
  1201  01A2  3064               	movlw	100
  1202  01A3  00F5               	movwf	___wmul@multiplicand
  1203  01A4  3000               	movlw	0
  1204  01A5  00F6               	movwf	___wmul@multiplicand+1
  1205  01A6  120A  118A  2637  120A  118A  	fcall	___wmul
  1206  01AB  0874               	movf	?___wmul+1,w
  1207  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1208  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1209  01AE  00A5               	movwf	___lwdiv@dividend+1
  1210  01AF  0873               	movf	?___wmul,w
  1211  01B0  00A4               	movwf	___lwdiv@dividend
  1212  01B1  120A  118A  25F1  120A  118A  	fcall	___lwdiv
  1213  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01B8  0822               	movf	?___lwdiv,w
  1216  01B9  00AA               	movwf	??_main
  1217  01BA  0823               	movf	?___lwdiv+1,w
  1218  01BB  00AB               	movwf	??_main+1
  1219  01BC  083C               	movf	_C31,w
  1220  01BD  00AC               	movwf	??_main+2
  1221  01BE  01AD               	clrf	??_main+3
  1222  01BF  082C               	movf	??_main+2,w
  1223  01C0  00F3               	movwf	___wmul@multiplier
  1224  01C1  082D               	movf	??_main+3,w
  1225  01C2  00F4               	movwf	___wmul@multiplier+1
  1226  01C3  309C               	movlw	156
  1227  01C4  00F5               	movwf	___wmul@multiplicand
  1228  01C5  30FF               	movlw	255
  1229  01C6  00F6               	movwf	___wmul@multiplicand+1
  1230  01C7  120A  118A  2637  120A  118A  	fcall	___wmul
  1231  01CC  0873               	movf	?___wmul,w
  1232  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1233  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1234  01CF  072A               	addwf	??_main,w
  1235  01D0  00B2               	movwf	_main$1183
  1236  01D1  0874               	movf	?___wmul+1,w
  1237  01D2  1803               	skipnc
  1238  01D3  0A74               	incf	?___wmul+1,w
  1239  01D4  072B               	addwf	??_main+1,w
  1240  01D5  00B3               	movwf	_main$1183+1
  1241  01D6                     l1941:
  1242                           
  1243                           ;lab3.c: 174:     Lcd_Write_Char(C21 +48);
  1244  01D6  300A               	movlw	10
  1245  01D7  00A2               	movwf	___lwdiv@divisor
  1246  01D8  3000               	movlw	0
  1247  01D9  00A3               	movwf	___lwdiv@divisor+1
  1248  01DA  0833               	movf	_main$1183+1,w
  1249  01DB  00A5               	movwf	___lwdiv@dividend+1
  1250  01DC  0832               	movf	_main$1183,w
  1251  01DD  00A4               	movwf	___lwdiv@dividend
  1252  01DE  120A  118A  25F1  120A  118A  	fcall	___lwdiv
  1253  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01E5  0822               	movf	?___lwdiv,w
  1256  01E6  00AA               	movwf	??_main
  1257  01E7  082A               	movf	??_main,w
  1258  01E8  00BB               	movwf	_C32
  1259  01E9                     l1943:
  1260                           
  1261                           ;lab3.c: 175:     Lcd_Set_Cursor(2,9);
  1262  01E9  3033               	movlw	51
  1263  01EA  00A2               	movwf	___lwdiv@divisor
  1264  01EB  3000               	movlw	0
  1265  01EC  00A3               	movwf	___lwdiv@divisor+1
  1266  01ED  0837               	movf	_contador+1,w
  1267  01EE  00F4               	movwf	___wmul@multiplier+1
  1268  01EF  0836               	movf	_contador,w
  1269  01F0  00F3               	movwf	___wmul@multiplier
  1270  01F1  3064               	movlw	100
  1271  01F2  00F5               	movwf	___wmul@multiplicand
  1272  01F3  3000               	movlw	0
  1273  01F4  00F6               	movwf	___wmul@multiplicand+1
  1274  01F5  120A  118A  2637  120A  118A  	fcall	___wmul
  1275  01FA  0874               	movf	?___wmul+1,w
  1276  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1277  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1278  01FD  00A5               	movwf	___lwdiv@dividend+1
  1279  01FE  0873               	movf	?___wmul,w
  1280  01FF  00A4               	movwf	___lwdiv@dividend
  1281  0200  120A  118A  25F1  120A  118A  	fcall	___lwdiv
  1282  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0207  0822               	movf	?___lwdiv,w
  1285  0208  00AA               	movwf	??_main
  1286  0209  0823               	movf	?___lwdiv+1,w
  1287  020A  00AB               	movwf	??_main+1
  1288  020B  309C               	movlw	156
  1289  020C  00AC               	movwf	??_main+2
  1290  020D  082C               	movf	??_main+2,w
  1291  020E  00F3               	movwf	___bmul@multiplicand
  1292  020F  083C               	movf	_C31,w
  1293  0210  120A  118A  26FE  120A  118A  	fcall	___bmul
  1294  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0217  00AD               	movwf	??_main+3
  1297  0218  30F6               	movlw	246
  1298  0219  00AE               	movwf	??_main+4
  1299  021A  082E               	movf	??_main+4,w
  1300  021B  00F3               	movwf	___bmul@multiplicand
  1301  021C  083B               	movf	_C32,w
  1302  021D  120A  118A  26FE  120A  118A  	fcall	___bmul
  1303  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0224  072D               	addwf	??_main+3,w
  1306  0225  072A               	addwf	??_main,w
  1307  0226  00AF               	movwf	??_main+5
  1308  0227  082F               	movf	??_main+5,w
  1309  0228  00BA               	movwf	_C33
  1310  0229                     l1945:
  1311                           
  1312                           ;lab3.c: 178:     Lcd_Write_Char(C23 + 48);
  1313  0229  300A               	movlw	10
  1314  022A  0241               	subwf	_C12,w
  1315  022B  1C03               	skipc
  1316  022C  2A2E               	goto	u1171
  1317  022D  2A2F               	goto	u1170
  1318  022E                     u1171:
  1319  022E  2A33               	goto	l231
  1320  022F                     u1170:
  1321  022F                     l1947:
  1322                           
  1323                           ;lab3.c: 179: 
  1324  022F  3009               	movlw	9
  1325  0230  00AA               	movwf	??_main
  1326  0231  082A               	movf	??_main,w
  1327  0232  00C1               	movwf	_C12
  1328  0233                     l231:	
  1329                           ;lab3.c: 180: 
  1330                           
  1331                           
  1332                           ;lab3.c: 181:     Lcd_Set_Cursor(2,13);
  1333  0233  300A               	movlw	10
  1334  0234  0240               	subwf	_C13,w
  1335  0235  1C03               	skipc
  1336  0236  2A38               	goto	u1181
  1337  0237  2A39               	goto	u1180
  1338  0238                     u1181:
  1339  0238  2A3D               	goto	l232
  1340  0239                     u1180:
  1341  0239                     l1949:
  1342                           
  1343                           ;lab3.c: 182:     Lcd_Write_Char(C31 +48);
  1344  0239  3009               	movlw	9
  1345  023A  00AA               	movwf	??_main
  1346  023B  082A               	movf	??_main,w
  1347  023C  00C0               	movwf	_C13
  1348  023D                     l232:	
  1349                           ;lab3.c: 183:     Lcd_Set_Cursor(2,15);
  1350                           
  1351                           
  1352                           ;lab3.c: 184:     Lcd_Write_Char(C32 + 48);
  1353  023D  300A               	movlw	10
  1354  023E  023E               	subwf	_C22,w
  1355  023F  1C03               	skipc
  1356  0240  2A42               	goto	u1191
  1357  0241  2A43               	goto	u1190
  1358  0242                     u1191:
  1359  0242  2A47               	goto	l233
  1360  0243                     u1190:
  1361  0243                     l1951:
  1362                           
  1363                           ;lab3.c: 185:     Lcd_Set_Cursor(2,16);
  1364  0243  3009               	movlw	9
  1365  0244  00AA               	movwf	??_main
  1366  0245  082A               	movf	??_main,w
  1367  0246  00BE               	movwf	_C22
  1368  0247                     l233:	
  1369                           ;lab3.c: 186:     Lcd_Write_Char(C33 + 48);
  1370                           
  1371                           
  1372                           ;lab3.c: 187: 
  1373  0247  300A               	movlw	10
  1374  0248  023D               	subwf	_C23,w
  1375  0249  1C03               	skipc
  1376  024A  2A4C               	goto	u1201
  1377  024B  2A4D               	goto	u1200
  1378  024C                     u1201:
  1379  024C  2A51               	goto	l234
  1380  024D                     u1200:
  1381  024D                     l1953:
  1382                           
  1383                           ;lab3.c: 188:   }
  1384  024D  3009               	movlw	9
  1385  024E  00AA               	movwf	??_main
  1386  024F  082A               	movf	??_main,w
  1387  0250  00BD               	movwf	_C23
  1388  0251                     l234:	
  1389                           ;lab3.c: 189: }
  1390                           
  1391                           
  1392                           ;lab3.c: 191: void Setup(void){
  1393  0251  3006               	movlw	6
  1394  0252  0242               	subwf	_C11,w
  1395  0253  1C03               	skipc
  1396  0254  2A56               	goto	u1211
  1397  0255  2A57               	goto	u1210
  1398  0256                     u1211:
  1399  0256  2A5B               	goto	l235
  1400  0257                     u1210:
  1401  0257                     l1955:
  1402                           
  1403                           ;lab3.c: 192: 
  1404  0257  3005               	movlw	5
  1405  0258  00AA               	movwf	??_main
  1406  0259  082A               	movf	??_main,w
  1407  025A  00C2               	movwf	_C11
  1408  025B                     l235:	
  1409                           ;lab3.c: 193:     TRISA = 0;
  1410                           
  1411                           
  1412                           ;lab3.c: 194:     TRISD = 0;
  1413  025B  3006               	movlw	6
  1414  025C  023F               	subwf	_C21,w
  1415  025D  1C03               	skipc
  1416  025E  2A60               	goto	u1221
  1417  025F  2A61               	goto	u1220
  1418  0260                     u1221:
  1419  0260  2A65               	goto	l236
  1420  0261                     u1220:
  1421  0261                     l1957:
  1422                           
  1423                           ;lab3.c: 195:     PORTD = 0;
  1424  0261  3005               	movlw	5
  1425  0262  00AA               	movwf	??_main
  1426  0263  082A               	movf	??_main,w
  1427  0264  00C2               	movwf	_C11
  1428  0265                     l236:	
  1429                           ;lab3.c: 196:     TRISE = 0;
  1430                           
  1431                           
  1432                           ;lab3.c: 197:     TRISB = 0;
  1433  0265  3006               	movlw	6
  1434  0266  023C               	subwf	_C31,w
  1435  0267  1C03               	skipc
  1436  0268  2A6A               	goto	u1231
  1437  0269  2A6B               	goto	u1230
  1438  026A                     u1231:
  1439  026A  2A6F               	goto	l1961
  1440  026B                     u1230:
  1441  026B                     l1959:
  1442                           
  1443                           ;lab3.c: 198: 
  1444  026B  3005               	movlw	5
  1445  026C  00AA               	movwf	??_main
  1446  026D  082A               	movf	??_main,w
  1447  026E  00C2               	movwf	_C11
  1448  026F                     l1961:
  1449                           
  1450                           ;lab3.c: 203:     ADCON1 = 0;
  1451  026F  01F7               	clrf	Lcd_Set_Cursor@b
  1452  0270  0AF7               	incf	Lcd_Set_Cursor@b,f
  1453  0271  3002               	movlw	2
  1454  0272  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1455  0277                     l1963:
  1456                           
  1457                           ;lab3.c: 204:     PORTA = 0;
  1458  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0279  0842               	movf	_C11,w
  1461  027A  3E30               	addlw	48
  1462  027B  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1463  0280                     l1965:
  1464                           
  1465                           ;lab3.c: 205:     PORTB = 0;
  1466  0280  3003               	movlw	3
  1467  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0283  00AA               	movwf	??_main
  1470  0284  082A               	movf	??_main,w
  1471  0285  00F7               	movwf	Lcd_Set_Cursor@b
  1472  0286  3002               	movlw	2
  1473  0287  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1474  028C                     l1967:
  1475                           
  1476                           ;lab3.c: 206:     ANSEL = 0;
  1477  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1478  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1479  028E  0841               	movf	_C12,w
  1480  028F  3E30               	addlw	48
  1481  0290  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1482  0295                     l1969:
  1483                           
  1484                           ;lab3.c: 207: 
  1485  0295  3004               	movlw	4
  1486  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0298  00AA               	movwf	??_main
  1489  0299  082A               	movf	??_main,w
  1490  029A  00F7               	movwf	Lcd_Set_Cursor@b
  1491  029B  3002               	movlw	2
  1492  029C  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1493  02A1                     l1971:
  1494                           
  1495                           ;lab3.c: 208:     Lcd_Init();
  1496  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1497  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1498  02A3  0840               	movf	_C13,w
  1499  02A4  3E30               	addlw	48
  1500  02A5  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1501  02AA                     l1973:
  1502                           
  1503                           ;lab3.c: 211:     initADC(0);
  1504  02AA  3007               	movlw	7
  1505  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1506  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1507  02AD  00AA               	movwf	??_main
  1508  02AE  082A               	movf	??_main,w
  1509  02AF  00F7               	movwf	Lcd_Set_Cursor@b
  1510  02B0  3002               	movlw	2
  1511  02B1  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1512  02B6                     l1975:
  1513                           
  1514                           ;lab3.c: 212:     initADC(1);
  1515  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1516  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1517  02B8  083F               	movf	_C21,w
  1518  02B9  3E30               	addlw	48
  1519  02BA  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1520  02BF                     l1977:
  1521                           
  1522                           ;lab3.c: 213: 
  1523  02BF  3009               	movlw	9
  1524  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1525  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1526  02C2  00AA               	movwf	??_main
  1527  02C3  082A               	movf	??_main,w
  1528  02C4  00F7               	movwf	Lcd_Set_Cursor@b
  1529  02C5  3002               	movlw	2
  1530  02C6  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1531  02CB                     l1979:
  1532                           
  1533                           ;lab3.c: 214: 
  1534  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1535  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1536  02CD  083E               	movf	_C22,w
  1537  02CE  3E30               	addlw	48
  1538  02CF  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1539  02D4                     l1981:
  1540                           
  1541                           ;lab3.c: 215: 
  1542  02D4  300A               	movlw	10
  1543  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1544  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1545  02D7  00AA               	movwf	??_main
  1546  02D8  082A               	movf	??_main,w
  1547  02D9  00F7               	movwf	Lcd_Set_Cursor@b
  1548  02DA  3002               	movlw	2
  1549  02DB  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1550  02E0                     l1983:
  1551                           
  1552                           ;lab3.c: 216:     OPTION_REGbits.T0CS = 0;
  1553  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1554  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1555  02E2  083D               	movf	_C23,w
  1556  02E3  3E30               	addlw	48
  1557  02E4  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1558  02E9                     l1985:
  1559                           
  1560                           ;lab3.c: 219:     TMR0 = 10;
  1561  02E9  300D               	movlw	13
  1562  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1563  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1564  02EC  00AA               	movwf	??_main
  1565  02ED  082A               	movf	??_main,w
  1566  02EE  00F7               	movwf	Lcd_Set_Cursor@b
  1567  02EF  3002               	movlw	2
  1568  02F0  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1569  02F5                     l1987:
  1570                           
  1571                           ;lab3.c: 220: 
  1572  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1573  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1574  02F7  083C               	movf	_C31,w
  1575  02F8  3E30               	addlw	48
  1576  02F9  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1577  02FE                     l1989:
  1578                           
  1579                           ;lab3.c: 221: 
  1580  02FE  300F               	movlw	15
  1581  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0301  00AA               	movwf	??_main
  1584  0302  082A               	movf	??_main,w
  1585  0303  00F7               	movwf	Lcd_Set_Cursor@b
  1586  0304  3002               	movlw	2
  1587  0305  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1588  030A                     l1991:
  1589                           
  1590                           ;lab3.c: 222:     INTCONbits.GIE = 1;
  1591  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1592  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1593  030C  083B               	movf	_C32,w
  1594  030D  3E30               	addlw	48
  1595  030E  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1596  0313                     l1993:
  1597                           
  1598                           ;lab3.c: 223:     INTCONbits.T0IE = 1;
  1599  0313  3010               	movlw	16
  1600  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0316  00AA               	movwf	??_main
  1603  0317  082A               	movf	??_main,w
  1604  0318  00F7               	movwf	Lcd_Set_Cursor@b
  1605  0319  3002               	movlw	2
  1606  031A  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  1607  031F                     l1995:
  1608                           
  1609                           ;lab3.c: 224:     INTCONbits.T0IF = 0;
  1610  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0321  083A               	movf	_C33,w
  1613  0322  3E30               	addlw	48
  1614  0323  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  1615  0328  2824               	goto	l1915
  1616  0329  120A  118A  280C   	ljmp	start
  1617  032C                     __end_of_main:
  1618                           
  1619                           	psect	text1
  1620  0637                     __ptext1:	
  1621 ;; *************** function ___wmul *****************
  1622 ;; Defined at:
  1623 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  multiplier      2    3[COMMON] unsigned int 
  1626 ;;  multiplicand    2    5[COMMON] unsigned int 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  product         2    0[BANK0 ] unsigned int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2    3[COMMON] unsigned int 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         4       0       0       0       0
  1639 ;;      Locals:         0       2       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         4       2       0       0       0
  1642 ;;Total ram usage:        6 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function ___wmul
  1654  0637                     ___wmul:
  1655  0637                     l1895:	
  1656                           ;incstack = 0
  1657                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1658                           
  1659  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0639  01A0               	clrf	___wmul@product
  1662  063A  01A1               	clrf	___wmul@product+1
  1663  063B                     l1897:
  1664  063B  1C73               	btfss	___wmul@multiplier,0
  1665  063C  2E3E               	goto	u1121
  1666  063D  2E3F               	goto	u1120
  1667  063E                     u1121:
  1668  063E  2E47               	goto	l329
  1669  063F                     u1120:
  1670  063F                     l1899:
  1671  063F  0875               	movf	___wmul@multiplicand,w
  1672  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0642  07A0               	addwf	___wmul@product,f
  1675  0643  1803               	skipnc
  1676  0644  0AA1               	incf	___wmul@product+1,f
  1677  0645  0876               	movf	___wmul@multiplicand+1,w
  1678  0646  07A1               	addwf	___wmul@product+1,f
  1679  0647                     l329:
  1680  0647  3001               	movlw	1
  1681  0648                     u1135:
  1682  0648  1003               	clrc
  1683  0649  0DF5               	rlf	___wmul@multiplicand,f
  1684  064A  0DF6               	rlf	___wmul@multiplicand+1,f
  1685  064B  3EFF               	addlw	-1
  1686  064C  1D03               	skipz
  1687  064D  2E48               	goto	u1135
  1688  064E                     l1901:
  1689  064E  3001               	movlw	1
  1690  064F                     u1145:
  1691  064F  1003               	clrc
  1692  0650  0CF4               	rrf	___wmul@multiplier+1,f
  1693  0651  0CF3               	rrf	___wmul@multiplier,f
  1694  0652  3EFF               	addlw	-1
  1695  0653  1D03               	skipz
  1696  0654  2E4F               	goto	u1145
  1697  0655                     l1903:
  1698  0655  0873               	movf	___wmul@multiplier,w
  1699  0656  0474               	iorwf	___wmul@multiplier+1,w
  1700  0657  1D03               	btfss	3,2
  1701  0658  2E5A               	goto	u1151
  1702  0659  2E5B               	goto	u1150
  1703  065A                     u1151:
  1704  065A  2E3B               	goto	l1897
  1705  065B                     u1150:
  1706  065B                     l1905:
  1707  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1708  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1709  065D  0821               	movf	___wmul@product+1,w
  1710  065E  00F4               	movwf	?___wmul+1
  1711  065F  0820               	movf	___wmul@product,w
  1712  0660  00F3               	movwf	?___wmul
  1713  0661                     l331:
  1714  0661  0008               	return
  1715  0662                     __end_of___wmul:
  1716                           
  1717                           	psect	text2
  1718  05F1                     __ptext2:	
  1719 ;; *************** function ___lwdiv *****************
  1720 ;; Defined at:
  1721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  divisor         2    2[BANK0 ] unsigned int 
  1724 ;;  dividend        2    4[BANK0 ] unsigned int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  quotient        2    6[BANK0 ] unsigned int 
  1727 ;;  counter         1    8[BANK0 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    2[BANK0 ] unsigned int 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       4       0       0       0
  1738 ;;      Locals:         0       3       0       0       0
  1739 ;;      Temps:          1       0       0       0       0
  1740 ;;      Totals:         1       7       0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function ___lwdiv
  1753  05F1                     ___lwdiv:
  1754  05F1                     l1541:	
  1755                           ;incstack = 0
  1756                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1757                           
  1758  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1759  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1760  05F3  01A6               	clrf	___lwdiv@quotient
  1761  05F4  01A7               	clrf	___lwdiv@quotient+1
  1762  05F5                     l1543:
  1763  05F5  0822               	movf	___lwdiv@divisor,w
  1764  05F6  0423               	iorwf	___lwdiv@divisor+1,w
  1765  05F7  1903               	btfsc	3,2
  1766  05F8  2DFA               	goto	u741
  1767  05F9  2DFB               	goto	u740
  1768  05FA                     u741:
  1769  05FA  2E32               	goto	l1563
  1770  05FB                     u740:
  1771  05FB                     l1545:
  1772  05FB  01A8               	clrf	___lwdiv@counter
  1773  05FC  0AA8               	incf	___lwdiv@counter,f
  1774  05FD  2E09               	goto	l1551
  1775  05FE                     l1547:
  1776  05FE  3001               	movlw	1
  1777  05FF                     u755:
  1778  05FF  1003               	clrc
  1779  0600  0DA2               	rlf	___lwdiv@divisor,f
  1780  0601  0DA3               	rlf	___lwdiv@divisor+1,f
  1781  0602  3EFF               	addlw	-1
  1782  0603  1D03               	skipz
  1783  0604  2DFF               	goto	u755
  1784  0605                     l1549:
  1785  0605  3001               	movlw	1
  1786  0606  00F7               	movwf	??___lwdiv
  1787  0607  0877               	movf	??___lwdiv,w
  1788  0608  07A8               	addwf	___lwdiv@counter,f
  1789  0609                     l1551:
  1790  0609  1FA3               	btfss	___lwdiv@divisor+1,7
  1791  060A  2E0C               	goto	u761
  1792  060B  2E0D               	goto	u760
  1793  060C                     u761:
  1794  060C  2DFE               	goto	l1547
  1795  060D                     u760:
  1796  060D                     l1553:
  1797  060D  3001               	movlw	1
  1798  060E                     u775:
  1799  060E  1003               	clrc
  1800  060F  0DA6               	rlf	___lwdiv@quotient,f
  1801  0610  0DA7               	rlf	___lwdiv@quotient+1,f
  1802  0611  3EFF               	addlw	-1
  1803  0612  1D03               	skipz
  1804  0613  2E0E               	goto	u775
  1805  0614  0823               	movf	___lwdiv@divisor+1,w
  1806  0615  0225               	subwf	___lwdiv@dividend+1,w
  1807  0616  1D03               	skipz
  1808  0617  2E1A               	goto	u785
  1809  0618  0822               	movf	___lwdiv@divisor,w
  1810  0619  0224               	subwf	___lwdiv@dividend,w
  1811  061A                     u785:
  1812  061A  1C03               	skipc
  1813  061B  2E1D               	goto	u781
  1814  061C  2E1E               	goto	u780
  1815  061D                     u781:
  1816  061D  2E25               	goto	l1559
  1817  061E                     u780:
  1818  061E                     l1555:
  1819  061E  0822               	movf	___lwdiv@divisor,w
  1820  061F  02A4               	subwf	___lwdiv@dividend,f
  1821  0620  0823               	movf	___lwdiv@divisor+1,w
  1822  0621  1C03               	skipc
  1823  0622  03A5               	decf	___lwdiv@dividend+1,f
  1824  0623  02A5               	subwf	___lwdiv@dividend+1,f
  1825  0624                     l1557:
  1826  0624  1426               	bsf	___lwdiv@quotient,0
  1827  0625                     l1559:
  1828  0625  3001               	movlw	1
  1829  0626                     u795:
  1830  0626  1003               	clrc
  1831  0627  0CA3               	rrf	___lwdiv@divisor+1,f
  1832  0628  0CA2               	rrf	___lwdiv@divisor,f
  1833  0629  3EFF               	addlw	-1
  1834  062A  1D03               	skipz
  1835  062B  2E26               	goto	u795
  1836  062C                     l1561:
  1837  062C  3001               	movlw	1
  1838  062D  02A8               	subwf	___lwdiv@counter,f
  1839  062E  1D03               	btfss	3,2
  1840  062F  2E31               	goto	u801
  1841  0630  2E32               	goto	u800
  1842  0631                     u801:
  1843  0631  2E0D               	goto	l1553
  1844  0632                     u800:
  1845  0632                     l1563:
  1846  0632  0827               	movf	___lwdiv@quotient+1,w
  1847  0633  00A3               	movwf	?___lwdiv+1
  1848  0634  0826               	movf	___lwdiv@quotient,w
  1849  0635  00A2               	movwf	?___lwdiv
  1850  0636                     l601:
  1851  0636  0008               	return
  1852  0637                     __end_of___lwdiv:
  1853                           
  1854                           	psect	text3
  1855  06FE                     __ptext3:	
  1856 ;; *************** function ___bmul *****************
  1857 ;; Defined at:
  1858 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  multiplier      1    wreg     unsigned char 
  1861 ;;  multiplicand    1    3[COMMON] unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  multiplier      1    6[COMMON] unsigned char 
  1864 ;;  product         1    5[COMMON] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      unsigned char 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         1       0       0       0       0
  1875 ;;      Locals:         2       0       0       0       0
  1876 ;;      Temps:          1       0       0       0       0
  1877 ;;      Totals:         4       0       0       0       0
  1878 ;;Total ram usage:        4 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function ___bmul
  1890  06FE                     ___bmul:
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1894                           ;___bmul@multiplier stored from wreg
  1895  06FE  00F6               	movwf	___bmul@multiplier
  1896  06FF                     l1483:
  1897  06FF  01F5               	clrf	___bmul@product
  1898  0700                     l1485:
  1899  0700  1C76               	btfss	___bmul@multiplier,0
  1900  0701  2F03               	goto	u621
  1901  0702  2F04               	goto	u620
  1902  0703                     u621:
  1903  0703  2F08               	goto	l1489
  1904  0704                     u620:
  1905  0704                     l1487:
  1906  0704  0873               	movf	___bmul@multiplicand,w
  1907  0705  00F4               	movwf	??___bmul
  1908  0706  0874               	movf	??___bmul,w
  1909  0707  07F5               	addwf	___bmul@product,f
  1910  0708                     l1489:
  1911  0708  1003               	clrc
  1912  0709  0DF3               	rlf	___bmul@multiplicand,f
  1913  070A                     l1491:
  1914  070A  1003               	clrc
  1915  070B  0CF6               	rrf	___bmul@multiplier,f
  1916  070C  0876               	movf	___bmul@multiplier,w
  1917  070D  1D03               	btfss	3,2
  1918  070E  2F10               	goto	u631
  1919  070F  2F11               	goto	u630
  1920  0710                     u631:
  1921  0710  2F00               	goto	l1485
  1922  0711                     u630:
  1923  0711                     l1493:
  1924  0711  0875               	movf	___bmul@product,w
  1925  0712                     l355:
  1926  0712  0008               	return
  1927  0713                     __end_of___bmul:
  1928                           
  1929                           	psect	text4
  1930  04D1                     __ptext4:	
  1931 ;; *************** function ___awdiv *****************
  1932 ;; Defined at:
  1933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  divisor         2    2[BANK0 ] int 
  1936 ;;  dividend        2    4[BANK0 ] int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  quotient        2    8[BANK0 ] int 
  1939 ;;  sign            1    7[BANK0 ] unsigned char 
  1940 ;;  counter         1    6[BANK0 ] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  2    2[BANK0 ] int 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1950 ;;      Params:         0       4       0       0       0
  1951 ;;      Locals:         0       4       0       0       0
  1952 ;;      Temps:          1       0       0       0       0
  1953 ;;      Totals:         1       8       0       0       0
  1954 ;;Total ram usage:        9 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function ___awdiv
  1966  04D1                     ___awdiv:
  1967  04D1                     l1497:	
  1968                           ;incstack = 0
  1969                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1970                           
  1971  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1972  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1973  04D3  01A7               	clrf	___awdiv@sign
  1974  04D4                     l1499:
  1975  04D4  1FA3               	btfss	___awdiv@divisor+1,7
  1976  04D5  2CD7               	goto	u641
  1977  04D6  2CD8               	goto	u640
  1978  04D7                     u641:
  1979  04D7  2CDF               	goto	l1505
  1980  04D8                     u640:
  1981  04D8                     l1501:
  1982  04D8  09A2               	comf	___awdiv@divisor,f
  1983  04D9  09A3               	comf	___awdiv@divisor+1,f
  1984  04DA  0AA2               	incf	___awdiv@divisor,f
  1985  04DB  1903               	skipnz
  1986  04DC  0AA3               	incf	___awdiv@divisor+1,f
  1987  04DD                     l1503:
  1988  04DD  01A7               	clrf	___awdiv@sign
  1989  04DE  0AA7               	incf	___awdiv@sign,f
  1990  04DF                     l1505:
  1991  04DF  1FA5               	btfss	___awdiv@dividend+1,7
  1992  04E0  2CE2               	goto	u651
  1993  04E1  2CE3               	goto	u650
  1994  04E2                     u651:
  1995  04E2  2CEC               	goto	l1511
  1996  04E3                     u650:
  1997  04E3                     l1507:
  1998  04E3  09A4               	comf	___awdiv@dividend,f
  1999  04E4  09A5               	comf	___awdiv@dividend+1,f
  2000  04E5  0AA4               	incf	___awdiv@dividend,f
  2001  04E6  1903               	skipnz
  2002  04E7  0AA5               	incf	___awdiv@dividend+1,f
  2003  04E8                     l1509:
  2004  04E8  3001               	movlw	1
  2005  04E9  00F7               	movwf	??___awdiv
  2006  04EA  0877               	movf	??___awdiv,w
  2007  04EB  06A7               	xorwf	___awdiv@sign,f
  2008  04EC                     l1511:
  2009  04EC  01A8               	clrf	___awdiv@quotient
  2010  04ED  01A9               	clrf	___awdiv@quotient+1
  2011  04EE                     l1513:
  2012  04EE  0822               	movf	___awdiv@divisor,w
  2013  04EF  0423               	iorwf	___awdiv@divisor+1,w
  2014  04F0  1903               	btfsc	3,2
  2015  04F1  2CF3               	goto	u661
  2016  04F2  2CF4               	goto	u660
  2017  04F3                     u661:
  2018  04F3  2D2B               	goto	l1533
  2019  04F4                     u660:
  2020  04F4                     l1515:
  2021  04F4  01A6               	clrf	___awdiv@counter
  2022  04F5  0AA6               	incf	___awdiv@counter,f
  2023  04F6  2D02               	goto	l1521
  2024  04F7                     l1517:
  2025  04F7  3001               	movlw	1
  2026  04F8                     u675:
  2027  04F8  1003               	clrc
  2028  04F9  0DA2               	rlf	___awdiv@divisor,f
  2029  04FA  0DA3               	rlf	___awdiv@divisor+1,f
  2030  04FB  3EFF               	addlw	-1
  2031  04FC  1D03               	skipz
  2032  04FD  2CF8               	goto	u675
  2033  04FE                     l1519:
  2034  04FE  3001               	movlw	1
  2035  04FF  00F7               	movwf	??___awdiv
  2036  0500  0877               	movf	??___awdiv,w
  2037  0501  07A6               	addwf	___awdiv@counter,f
  2038  0502                     l1521:
  2039  0502  1FA3               	btfss	___awdiv@divisor+1,7
  2040  0503  2D05               	goto	u681
  2041  0504  2D06               	goto	u680
  2042  0505                     u681:
  2043  0505  2CF7               	goto	l1517
  2044  0506                     u680:
  2045  0506                     l1523:
  2046  0506  3001               	movlw	1
  2047  0507                     u695:
  2048  0507  1003               	clrc
  2049  0508  0DA8               	rlf	___awdiv@quotient,f
  2050  0509  0DA9               	rlf	___awdiv@quotient+1,f
  2051  050A  3EFF               	addlw	-1
  2052  050B  1D03               	skipz
  2053  050C  2D07               	goto	u695
  2054  050D  0823               	movf	___awdiv@divisor+1,w
  2055  050E  0225               	subwf	___awdiv@dividend+1,w
  2056  050F  1D03               	skipz
  2057  0510  2D13               	goto	u705
  2058  0511  0822               	movf	___awdiv@divisor,w
  2059  0512  0224               	subwf	___awdiv@dividend,w
  2060  0513                     u705:
  2061  0513  1C03               	skipc
  2062  0514  2D16               	goto	u701
  2063  0515  2D17               	goto	u700
  2064  0516                     u701:
  2065  0516  2D1E               	goto	l1529
  2066  0517                     u700:
  2067  0517                     l1525:
  2068  0517  0822               	movf	___awdiv@divisor,w
  2069  0518  02A4               	subwf	___awdiv@dividend,f
  2070  0519  0823               	movf	___awdiv@divisor+1,w
  2071  051A  1C03               	skipc
  2072  051B  03A5               	decf	___awdiv@dividend+1,f
  2073  051C  02A5               	subwf	___awdiv@dividend+1,f
  2074  051D                     l1527:
  2075  051D  1428               	bsf	___awdiv@quotient,0
  2076  051E                     l1529:
  2077  051E  3001               	movlw	1
  2078  051F                     u715:
  2079  051F  1003               	clrc
  2080  0520  0CA3               	rrf	___awdiv@divisor+1,f
  2081  0521  0CA2               	rrf	___awdiv@divisor,f
  2082  0522  3EFF               	addlw	-1
  2083  0523  1D03               	skipz
  2084  0524  2D1F               	goto	u715
  2085  0525                     l1531:
  2086  0525  3001               	movlw	1
  2087  0526  02A6               	subwf	___awdiv@counter,f
  2088  0527  1D03               	btfss	3,2
  2089  0528  2D2A               	goto	u721
  2090  0529  2D2B               	goto	u720
  2091  052A                     u721:
  2092  052A  2D06               	goto	l1523
  2093  052B                     u720:
  2094  052B                     l1533:
  2095  052B  0827               	movf	___awdiv@sign,w
  2096  052C  1903               	btfsc	3,2
  2097  052D  2D2F               	goto	u731
  2098  052E  2D30               	goto	u730
  2099  052F                     u731:
  2100  052F  2D35               	goto	l1537
  2101  0530                     u730:
  2102  0530                     l1535:
  2103  0530  09A8               	comf	___awdiv@quotient,f
  2104  0531  09A9               	comf	___awdiv@quotient+1,f
  2105  0532  0AA8               	incf	___awdiv@quotient,f
  2106  0533  1903               	skipnz
  2107  0534  0AA9               	incf	___awdiv@quotient+1,f
  2108  0535                     l1537:
  2109  0535  0829               	movf	___awdiv@quotient+1,w
  2110  0536  00A3               	movwf	?___awdiv+1
  2111  0537  0828               	movf	___awdiv@quotient,w
  2112  0538  00A2               	movwf	?___awdiv
  2113  0539                     l482:
  2114  0539  0008               	return
  2115  053A                     __end_of___awdiv:
  2116                           
  2117                           	psect	text5
  2118  041E                     __ptext5:	
  2119 ;; *************** function _Setup *****************
  2120 ;; Defined at:
  2121 ;;		line 229 in file "lab3.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          0       1       0       0       0
  2138 ;;      Totals:         0       1       0       0       0
  2139 ;;Total ram usage:        1 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    4
  2142 ;; This function calls:
  2143 ;;		_Lcd_Init
  2144 ;;		_Lcd_Set_Cursor
  2145 ;;		_Lcd_Write_String
  2146 ;;		_initADC
  2147 ;;		_initUSART
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _Setup
  2155  041E                     _Setup:
  2156  041E                     l1835:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2159                           
  2160                           
  2161                           ;lab3.c: 231:     Lcd_Write_String("S1");
  2162  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2163  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2164  0420  0185               	clrf	5	;volatile
  2165                           
  2166                           ;lab3.c: 232:     Lcd_Set_Cursor(2,1);
  2167  0421  0188               	clrf	8	;volatile
  2168                           
  2169                           ;lab3.c: 233:     Lcd_Write_String("0.00");
  2170  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0424  0188               	clrf	8	;volatile
  2173                           
  2174                           ;lab3.c: 234:     Lcd_Set_Cursor(1,8);
  2175  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2177  0427  0189               	clrf	9	;volatile
  2178                           
  2179                           ;lab3.c: 235:     Lcd_Write_String("S2");
  2180  0428  0186               	clrf	6	;volatile
  2181  0429                     l1837:
  2182                           
  2183                           ;lab3.c: 237:     Lcd_Write_String("0.00");
  2184  0429  3083               	movlw	131
  2185  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2186  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2187  042C  009F               	movwf	31	;volatile
  2188  042D                     l1839:
  2189                           
  2190                           ;lab3.c: 238:     Lcd_Set_Cursor(1,14);
  2191  042D  1683               	bsf	3,5	;RP0=1, select bank1
  2192  042E  1303               	bcf	3,6	;RP1=0, select bank1
  2193  042F  019F               	clrf	31	;volatile
  2194  0430                     l1841:
  2195                           
  2196                           ;lab3.c: 239:     Lcd_Write_String("S3");
  2197  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0432  0185               	clrf	5	;volatile
  2200  0433                     l1843:
  2201                           
  2202                           ;lab3.c: 240:     Lcd_Set_Cursor(2,13);
  2203  0433  3083               	movlw	131
  2204  0434  009F               	movwf	31	;volatile
  2205                           
  2206                           ;lab3.c: 241:     Lcd_Write_String("0.00");
  2207  0435  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0436  1303               	bcf	3,6	;RP1=0, select bank1
  2209  0437  019F               	clrf	31	;volatile
  2210                           
  2211                           ;lab3.c: 242: 
  2212  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2214  043A  0185               	clrf	5	;volatile
  2215                           
  2216                           ;lab3.c: 243: }
  2217  043B  0186               	clrf	6	;volatile
  2218  043C  1683               	bsf	3,5	;RP0=1, select bank3
  2219  043D  1703               	bsf	3,6	;RP1=1, select bank3
  2220  043E  0188               	clrf	8	;volatile
  2221  043F                     l1845:
  2222  043F  120A  118A  253A  120A  118A  	fcall	_Lcd_Init
  2223  0444                     l1847:
  2224  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0446  01C8               	clrf	_var_contador
  2227  0447                     l1849:
  2228  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0449  170C               	bsf	12,6	;volatile
  2231  044A                     l1851:
  2232  044A  3000               	movlw	0
  2233  044B  120A  118A  2597  120A  118A  	fcall	_initADC
  2234  0450                     l1853:
  2235  0450  3001               	movlw	1
  2236  0451  120A  118A  2597  120A  118A  	fcall	_initADC
  2237  0456                     l1855:
  2238  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0458  1281               	bcf	1,5	;volatile
  2241  0459                     l1857:
  2242  0459  1181               	bcf	1,3	;volatile
  2243  045A                     l1859:
  2244  045A  3007               	movlw	7
  2245  045B  0481               	iorwf	1,f	;volatile
  2246  045C                     l1861:
  2247  045C  300A               	movlw	10
  2248  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2249  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2250  045F  0081               	movwf	1	;volatile
  2251  0460                     l1863:
  2252  0460  178B               	bsf	11,7	;volatile
  2253  0461                     l1865:
  2254  0461  168B               	bsf	11,5	;volatile
  2255  0462                     l1867:
  2256  0462  110B               	bcf	11,2	;volatile
  2257  0463                     l1869:
  2258  0463  120A  118A  26B1  120A  118A  	fcall	_initUSART
  2259  0468                     l1871:
  2260  0468  3003               	movlw	3
  2261  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2262  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2263  046B  00A3               	movwf	??_Setup
  2264  046C  0823               	movf	??_Setup,w
  2265  046D  00F7               	movwf	Lcd_Set_Cursor@b
  2266  046E  3001               	movlw	1
  2267  046F  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  2268  0474                     l1873:
  2269  0474  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2270  0475  120A  118A  2662  120A  118A  	fcall	_Lcd_Write_String
  2271  047A                     l1875:
  2272  047A  01F7               	clrf	Lcd_Set_Cursor@b
  2273  047B  0AF7               	incf	Lcd_Set_Cursor@b,f
  2274  047C  3002               	movlw	2
  2275  047D  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  2276  0482                     l1877:
  2277  0482  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2278  0483  120A  118A  2662  120A  118A  	fcall	_Lcd_Write_String
  2279  0488                     l1879:
  2280  0488  3008               	movlw	8
  2281  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2282  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2283  048B  00A3               	movwf	??_Setup
  2284  048C  0823               	movf	??_Setup,w
  2285  048D  00F7               	movwf	Lcd_Set_Cursor@b
  2286  048E  3001               	movlw	1
  2287  048F  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  2288  0494                     l1881:
  2289  0494  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2290  0495  120A  118A  2662  120A  118A  	fcall	_Lcd_Write_String
  2291  049A                     l1883:
  2292  049A  3007               	movlw	7
  2293  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2294  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2295  049D  00A3               	movwf	??_Setup
  2296  049E  0823               	movf	??_Setup,w
  2297  049F  00F7               	movwf	Lcd_Set_Cursor@b
  2298  04A0  3002               	movlw	2
  2299  04A1  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  2300  04A6                     l1885:
  2301  04A6  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2302  04A7  120A  118A  2662  120A  118A  	fcall	_Lcd_Write_String
  2303  04AC                     l1887:
  2304  04AC  300E               	movlw	14
  2305  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2306  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2307  04AF  00A3               	movwf	??_Setup
  2308  04B0  0823               	movf	??_Setup,w
  2309  04B1  00F7               	movwf	Lcd_Set_Cursor@b
  2310  04B2  3001               	movlw	1
  2311  04B3  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  2312  04B8                     l1889:
  2313  04B8  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2314  04B9  120A  118A  2662  120A  118A  	fcall	_Lcd_Write_String
  2315  04BE                     l1891:
  2316  04BE  300D               	movlw	13
  2317  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2318  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2319  04C1  00A3               	movwf	??_Setup
  2320  04C2  0823               	movf	??_Setup,w
  2321  04C3  00F7               	movwf	Lcd_Set_Cursor@b
  2322  04C4  3002               	movlw	2
  2323  04C5  120A  118A  268B  120A  118A  	fcall	_Lcd_Set_Cursor
  2324  04CA                     l1893:
  2325  04CA  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2326  04CB  120A  118A  2662  120A  118A  	fcall	_Lcd_Write_String
  2327  04D0                     l243:
  2328  04D0  0008               	return
  2329  04D1                     __end_of_Setup:
  2330                           
  2331                           	psect	text6
  2332  06B1                     __ptext6:	
  2333 ;; *************** function _initUSART *****************
  2334 ;; Defined at:
  2335 ;;		line 3 in file "USART.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0
  2352 ;;      Totals:         0       0       0       0       0
  2353 ;;Total ram usage:        0 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    1
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_Setup
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _initUSART
  2365  06B1                     _initUSART:
  2366  06B1                     l1381:	
  2367                           ;incstack = 0
  2368                           ; Regs used in _initUSART: [wreg+status,2]
  2369                           
  2370                           
  2371                           ;USART.c: 5:     TRISCbits.TRISC6 = 0;
  2372  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  2373  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  2374  06B3  1307               	bcf	7,6	;volatile
  2375                           
  2376                           ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  2377  06B4  1787               	bsf	7,7	;volatile
  2378  06B5                     l1383:
  2379                           
  2380                           ;USART.c: 9:     SPBRG = 25;
  2381  06B5  3019               	movlw	25
  2382  06B6  0099               	movwf	25	;volatile
  2383  06B7                     l1385:
  2384                           
  2385                           ;USART.c: 10:     TXSTAbits.BRGH = 1;
  2386  06B7  1518               	bsf	24,2	;volatile
  2387  06B8                     l1387:
  2388                           
  2389                           ;USART.c: 11:     BAUDCTLbits.BRG16 = 0;
  2390  06B8  1683               	bsf	3,5	;RP0=1, select bank3
  2391  06B9  1703               	bsf	3,6	;RP1=1, select bank3
  2392  06BA  1187               	bcf	7,3	;volatile
  2393  06BB                     l1389:
  2394                           
  2395                           ;USART.c: 12:     SPBRGH = 0;
  2396  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  2397  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  2398  06BD  019A               	clrf	26	;volatile
  2399  06BE                     l1391:
  2400                           
  2401                           ;USART.c: 15:     TXSTAbits.SYNC = 0;
  2402  06BE  1218               	bcf	24,4	;volatile
  2403  06BF                     l1393:
  2404                           
  2405                           ;USART.c: 16:     RCSTAbits.SPEN = 1;
  2406  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2407  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2408  06C1  1798               	bsf	24,7	;volatile
  2409  06C2                     l1395:
  2410                           
  2411                           ;USART.c: 17:     TXSTAbits.TX9 = 0;
  2412  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  2413  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  2414  06C4  1318               	bcf	24,6	;volatile
  2415  06C5                     l1397:
  2416                           
  2417                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  2418  06C5  1698               	bsf	24,5	;volatile
  2419  06C6                     l1399:
  2420                           
  2421                           ;USART.c: 21:     PIE1bits.RCIE = 1;
  2422  06C6  168C               	bsf	12,5	;volatile
  2423  06C7                     l1401:
  2424                           
  2425                           ;USART.c: 22:     RCSTAbits.RX9 = 0;
  2426  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  2427  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  2428  06C9  1318               	bcf	24,6	;volatile
  2429  06CA                     l1403:
  2430                           
  2431                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  2432  06CA  1618               	bsf	24,4	;volatile
  2433  06CB                     l1405:
  2434                           
  2435                           ;USART.c: 26:     INTCONbits.GIE = 1;
  2436  06CB  178B               	bsf	11,7	;volatile
  2437  06CC                     l1407:
  2438                           
  2439                           ;USART.c: 27:     INTCONbits.PEIE = 1;
  2440  06CC  170B               	bsf	11,6	;volatile
  2441  06CD                     l83:
  2442  06CD  0008               	return
  2443  06CE                     __end_of_initUSART:
  2444                           
  2445                           	psect	text7
  2446  0597                     __ptext7:	
  2447 ;; *************** function _initADC *****************
  2448 ;; Defined at:
  2449 ;;		line 4 in file "ADC.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  IRCF            1    wreg     unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  IRCF            1    5[COMMON] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2463 ;;      Params:         0       0       0       0       0
  2464 ;;      Locals:         1       0       0       0       0
  2465 ;;      Temps:          2       0       0       0       0
  2466 ;;      Totals:         3       0       0       0       0
  2467 ;;Total ram usage:        3 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_Setup
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function _initADC
  2479  0597                     _initADC:
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  2483                           ;initADC@IRCF stored from wreg
  2484  0597  00F5               	movwf	initADC@IRCF
  2485  0598                     l1325:
  2486                           
  2487                           ;ADC.c: 6:     ADCON0 = 0b10000011;
  2488  0598  3083               	movlw	131
  2489  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2490  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2491  059B  009F               	movwf	31	;volatile
  2492  059C                     l1327:
  2493                           
  2494                           ;ADC.c: 7:     ADCON1 = 0;
  2495  059C  1683               	bsf	3,5	;RP0=1, select bank1
  2496  059D  1303               	bcf	3,6	;RP1=0, select bank1
  2497  059E  019F               	clrf	31	;volatile
  2498  059F                     l1329:
  2499                           
  2500                           ;ADC.c: 8:     PIE1bits.ADIE = 1;
  2501  059F  170C               	bsf	12,6	;volatile
  2502                           
  2503                           ;ADC.c: 9:     switch(IRCF){
  2504  05A0  2DCE               	goto	l1333
  2505  05A1                     l16:	
  2506                           ;ADC.c: 10:         case 0:
  2507                           
  2508                           
  2509                           ;ADC.c: 11:             TRISAbits.TRISA0 = 1;
  2510  05A1  1405               	bsf	5,0	;volatile
  2511                           
  2512                           ;ADC.c: 12:             ANSELbits.ANS0 = 1;
  2513  05A2  1683               	bsf	3,5	;RP0=1, select bank3
  2514  05A3  1703               	bsf	3,6	;RP1=1, select bank3
  2515  05A4  1408               	bsf	8,0	;volatile
  2516                           
  2517                           ;ADC.c: 13:             break;
  2518  05A5  2DF0               	goto	l26
  2519  05A6                     l18:	
  2520                           ;ADC.c: 14:         case 1:
  2521                           
  2522                           
  2523                           ;ADC.c: 15:             TRISAbits.TRISA1 = 1;
  2524  05A6  1485               	bsf	5,1	;volatile
  2525                           
  2526                           ;ADC.c: 16:             ANSELbits.ANS1 = 1;
  2527  05A7  1683               	bsf	3,5	;RP0=1, select bank3
  2528  05A8  1703               	bsf	3,6	;RP1=1, select bank3
  2529  05A9  1488               	bsf	8,1	;volatile
  2530                           
  2531                           ;ADC.c: 17:             break;
  2532  05AA  2DF0               	goto	l26
  2533  05AB                     l19:	
  2534                           ;ADC.c: 18:         case 2:
  2535                           
  2536                           
  2537                           ;ADC.c: 19:             TRISAbits.TRISA2 = 1;
  2538  05AB  1505               	bsf	5,2	;volatile
  2539                           
  2540                           ;ADC.c: 20:             ANSELbits.ANS2 = 1;
  2541  05AC  1683               	bsf	3,5	;RP0=1, select bank3
  2542  05AD  1703               	bsf	3,6	;RP1=1, select bank3
  2543  05AE  1508               	bsf	8,2	;volatile
  2544                           
  2545                           ;ADC.c: 21:             break;
  2546  05AF  2DF0               	goto	l26
  2547  05B0                     l20:	
  2548                           ;ADC.c: 22:         case 3:
  2549                           
  2550                           
  2551                           ;ADC.c: 23:             TRISAbits.TRISA3 = 1;
  2552  05B0  1585               	bsf	5,3	;volatile
  2553                           
  2554                           ;ADC.c: 24:             ANSELbits.ANS3 = 1;
  2555  05B1  1683               	bsf	3,5	;RP0=1, select bank3
  2556  05B2  1703               	bsf	3,6	;RP1=1, select bank3
  2557  05B3  1588               	bsf	8,3	;volatile
  2558                           
  2559                           ;ADC.c: 25:             break;
  2560  05B4  2DF0               	goto	l26
  2561  05B5                     l21:	
  2562                           ;ADC.c: 26:         case 4:
  2563                           
  2564                           
  2565                           ;ADC.c: 27:             TRISAbits.TRISA5 = 1;
  2566  05B5  1685               	bsf	5,5	;volatile
  2567                           
  2568                           ;ADC.c: 28:             ANSELbits.ANS4 = 1;
  2569  05B6  1683               	bsf	3,5	;RP0=1, select bank3
  2570  05B7  1703               	bsf	3,6	;RP1=1, select bank3
  2571  05B8  1608               	bsf	8,4	;volatile
  2572                           
  2573                           ;ADC.c: 29:             break;
  2574  05B9  2DF0               	goto	l26
  2575  05BA                     l22:	
  2576                           ;ADC.c: 30:         case 5:
  2577                           
  2578                           
  2579                           ;ADC.c: 31:             TRISEbits.TRISE0 = 1;
  2580  05BA  1409               	bsf	9,0	;volatile
  2581                           
  2582                           ;ADC.c: 32:             ANSELbits.ANS5 = 1;
  2583  05BB  1683               	bsf	3,5	;RP0=1, select bank3
  2584  05BC  1703               	bsf	3,6	;RP1=1, select bank3
  2585  05BD  1688               	bsf	8,5	;volatile
  2586                           
  2587                           ;ADC.c: 33:             break;
  2588  05BE  2DF0               	goto	l26
  2589  05BF                     l23:	
  2590                           ;ADC.c: 34:         case 6:
  2591                           
  2592                           
  2593                           ;ADC.c: 35:             TRISEbits.TRISE1 = 1;
  2594  05BF  1489               	bsf	9,1	;volatile
  2595                           
  2596                           ;ADC.c: 36:             ANSELbits.ANS6 = 1;
  2597  05C0  1683               	bsf	3,5	;RP0=1, select bank3
  2598  05C1  1703               	bsf	3,6	;RP1=1, select bank3
  2599  05C2  1708               	bsf	8,6	;volatile
  2600                           
  2601                           ;ADC.c: 37:             break;
  2602  05C3  2DF0               	goto	l26
  2603  05C4                     l24:	
  2604                           ;ADC.c: 38:         case 7:
  2605                           
  2606                           
  2607                           ;ADC.c: 39:             TRISEbits.TRISE2 = 1;
  2608  05C4  1509               	bsf	9,2	;volatile
  2609                           
  2610                           ;ADC.c: 40:             ANSELbits.ANS7 = 1;
  2611  05C5  1683               	bsf	3,5	;RP0=1, select bank3
  2612  05C6  1703               	bsf	3,6	;RP1=1, select bank3
  2613  05C7  1788               	bsf	8,7	;volatile
  2614                           
  2615                           ;ADC.c: 41:             break;
  2616  05C8  2DF0               	goto	l26
  2617  05C9                     l25:	
  2618                           ;ADC.c: 42:         default:
  2619                           
  2620                           
  2621                           ;ADC.c: 43:             TRISAbits.TRISA0 = 1;
  2622  05C9  1405               	bsf	5,0	;volatile
  2623                           
  2624                           ;ADC.c: 44:             ANSELbits.ANS0 = 1;
  2625  05CA  1683               	bsf	3,5	;RP0=1, select bank3
  2626  05CB  1703               	bsf	3,6	;RP1=1, select bank3
  2627  05CC  1408               	bsf	8,0	;volatile
  2628                           
  2629                           ;ADC.c: 45:             break;
  2630  05CD  2DF0               	goto	l26
  2631  05CE                     l1333:
  2632  05CE  0875               	movf	initADC@IRCF,w
  2633  05CF  00F3               	movwf	??_initADC
  2634  05D0  01F4               	clrf	??_initADC+1
  2635                           
  2636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2637                           ; Switch size 1, requested type "simple"
  2638                           ; Number of cases is 1, Range of values is 0 to 0
  2639                           ; switch strategies available:
  2640                           ; Name         Instructions Cycles
  2641                           ; simple_byte            4     3 (average)
  2642                           ; direct_byte           11     8 (fixed)
  2643                           ; jumptable            260     6 (fixed)
  2644                           ;	Chosen strategy is simple_byte
  2645  05D1  0874               	movf	??_initADC+1,w
  2646  05D2  3A00               	xorlw	0	; case 0
  2647  05D3  1903               	skipnz
  2648  05D4  2DD6               	goto	l2017
  2649  05D5  2DC9               	goto	l25
  2650  05D6                     l2017:
  2651                           
  2652                           ; Switch size 1, requested type "simple"
  2653                           ; Number of cases is 8, Range of values is 0 to 7
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte           25    13 (average)
  2657                           ; direct_byte           32     8 (fixed)
  2658                           ; jumptable            260     6 (fixed)
  2659                           ;	Chosen strategy is simple_byte
  2660  05D6  0873               	movf	??_initADC,w
  2661  05D7  3A00               	xorlw	0	; case 0
  2662  05D8  1903               	skipnz
  2663  05D9  2DA1               	goto	l16
  2664  05DA  3A01               	xorlw	1	; case 1
  2665  05DB  1903               	skipnz
  2666  05DC  2DA6               	goto	l18
  2667  05DD  3A03               	xorlw	3	; case 2
  2668  05DE  1903               	skipnz
  2669  05DF  2DAB               	goto	l19
  2670  05E0  3A01               	xorlw	1	; case 3
  2671  05E1  1903               	skipnz
  2672  05E2  2DB0               	goto	l20
  2673  05E3  3A07               	xorlw	7	; case 4
  2674  05E4  1903               	skipnz
  2675  05E5  2DB5               	goto	l21
  2676  05E6  3A01               	xorlw	1	; case 5
  2677  05E7  1903               	skipnz
  2678  05E8  2DBA               	goto	l22
  2679  05E9  3A03               	xorlw	3	; case 6
  2680  05EA  1903               	skipnz
  2681  05EB  2DBF               	goto	l23
  2682  05EC  3A01               	xorlw	1	; case 7
  2683  05ED  1903               	skipnz
  2684  05EE  2DC4               	goto	l24
  2685  05EF  2DC9               	goto	l25
  2686  05F0                     l26:
  2687  05F0  0008               	return
  2688  05F1                     __end_of_initADC:
  2689                           
  2690                           	psect	text8
  2691  0662                     __ptext8:	
  2692 ;; *************** function _Lcd_Write_String *****************
  2693 ;; Defined at:
  2694 ;;		line 72 in file "lcd.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  a               1    wreg     PTR unsigned char 
  2697 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  2698 ;;		 -> STR_2(5), STR_1(3), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2701 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  2702 ;;		 -> STR_2(5), STR_1(3), 
  2703 ;;  i               2    0[BANK0 ] int 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       3       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         0       3       0       0       0
  2717 ;;Total ram usage:        3 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    3
  2720 ;; This function calls:
  2721 ;;		_Lcd_Write_Char
  2722 ;; This function is called by:
  2723 ;;		_Setup
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           
  2728                           ;psect for function _Lcd_Write_String
  2729  0662                     _Lcd_Write_String:
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2733                           ;Lcd_Write_String@a stored from wreg
  2734  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0664  00A2               	movwf	Lcd_Write_String@a
  2737  0665                     l1827:
  2738                           
  2739                           ;lcd.c: 72: void Lcd_Write_String(char *a);lcd.c: 73: {;lcd.c: 74:  int i;;lcd.c: 75:  f
      +                          or(i=0;a[i]!='\0';i++)
  2740  0665  01A0               	clrf	Lcd_Write_String@i
  2741  0666  01A1               	clrf	Lcd_Write_String@i+1
  2742  0667  2E7D               	goto	l1833
  2743  0668                     l1829:
  2744                           
  2745                           ;lcd.c: 76:     Lcd_Write_Char(a[i]);
  2746  0668  0820               	movf	Lcd_Write_String@i,w
  2747  0669  0722               	addwf	Lcd_Write_String@a,w
  2748  066A  0084               	movwf	4
  2749  066B  120A  118A  2713  120A  118A  	fcall	stringdir
  2750  0670  120A  118A  26E8  120A  118A  	fcall	_Lcd_Write_Char
  2751  0675                     l1831:
  2752  0675  3001               	movlw	1
  2753  0676  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0677  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0678  07A0               	addwf	Lcd_Write_String@i,f
  2756  0679  1803               	skipnc
  2757  067A  0AA1               	incf	Lcd_Write_String@i+1,f
  2758  067B  3000               	movlw	0
  2759  067C  07A1               	addwf	Lcd_Write_String@i+1,f
  2760  067D                     l1833:
  2761  067D  0820               	movf	Lcd_Write_String@i,w
  2762  067E  0722               	addwf	Lcd_Write_String@a,w
  2763  067F  0084               	movwf	4
  2764  0680  120A  118A  2713  120A  118A  	fcall	stringdir
  2765  0685  3A00               	xorlw	0
  2766  0686  1D03               	skipz
  2767  0687  2E89               	goto	u1111
  2768  0688  2E8A               	goto	u1110
  2769  0689                     u1111:
  2770  0689  2E68               	goto	l1829
  2771  068A                     u1110:
  2772  068A                     l58:
  2773  068A  0008               	return
  2774  068B                     __end_of_Lcd_Write_String:
  2775                           
  2776                           	psect	text9
  2777  06E8                     __ptext9:	
  2778 ;; *************** function _Lcd_Write_Char *****************
  2779 ;; Defined at:
  2780 ;;		line 63 in file "lcd.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  a               1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  a               1    5[COMMON] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, pclath, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2794 ;;      Params:         0       0       0       0       0
  2795 ;;      Locals:         1       0       0       0       0
  2796 ;;      Temps:          1       0       0       0       0
  2797 ;;      Totals:         2       0       0       0       0
  2798 ;;Total ram usage:        2 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    2
  2801 ;; This function calls:
  2802 ;;		_Lcd_Port
  2803 ;; This function is called by:
  2804 ;;		_Lcd_Write_String
  2805 ;;		_main
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function _Lcd_Write_Char
  2811  06E8                     _Lcd_Write_Char:
  2812                           
  2813                           ;incstack = 0
  2814                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2815                           ;Lcd_Write_Char@a stored from wreg
  2816  06E8  00F5               	movwf	Lcd_Write_Char@a
  2817  06E9                     l1783:
  2818                           
  2819                           ;lcd.c: 63: void Lcd_Write_Char(char a);lcd.c: 64: {;lcd.c: 65:     RE0 = 1;
  2820  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  2821  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  2822  06EB  1409               	bsf	9,0	;volatile
  2823  06EC                     l1785:
  2824                           
  2825                           ;lcd.c: 66:    Lcd_Port(a);
  2826  06EC  0875               	movf	Lcd_Write_Char@a,w
  2827  06ED  120A  118A  272F  120A  118A  	fcall	_Lcd_Port
  2828  06F2                     l1787:
  2829                           
  2830                           ;lcd.c: 67:    RE1 = 1;
  2831  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2832  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2833  06F4  1489               	bsf	9,1	;volatile
  2834  06F5                     l1789:
  2835                           
  2836                           ;lcd.c: 68:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2837  06F5  301A               	movlw	26
  2838  06F6  00F4               	movwf	??_Lcd_Write_Char
  2839  06F7                     u1247:
  2840  06F7  0BF4               	decfsz	??_Lcd_Write_Char,f
  2841  06F8  2EF7               	goto	u1247
  2842  06F9  0000               	nop
  2843  06FA                     l1791:
  2844                           
  2845                           ;lcd.c: 69:    RE1 = 0;
  2846  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  2847  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  2848  06FC  1089               	bcf	9,1	;volatile
  2849  06FD                     l52:
  2850  06FD  0008               	return
  2851  06FE                     __end_of_Lcd_Write_Char:
  2852                           
  2853                           	psect	text10
  2854  068B                     __ptext10:	
  2855 ;; *************** function _Lcd_Set_Cursor *****************
  2856 ;; Defined at:
  2857 ;;		line 30 in file "lcd.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  a               1    wreg     unsigned char 
  2860 ;;  b               1    7[COMMON] unsigned char 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  a               1    1[BANK0 ] unsigned char 
  2863 ;;  temp            1    2[BANK0 ] unsigned char 
  2864 ;;  y               1    0        unsigned char 
  2865 ;;  z               1    0        unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, pclath, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         1       0       0       0       0
  2876 ;;      Locals:         0       2       0       0       0
  2877 ;;      Temps:          0       1       0       0       0
  2878 ;;      Totals:         1       3       0       0       0
  2879 ;;Total ram usage:        4 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    3
  2882 ;; This function calls:
  2883 ;;		_Lcd_Cmd
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;;		_Setup
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           
  2891                           ;psect for function _Lcd_Set_Cursor
  2892  068B                     _Lcd_Set_Cursor:
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2896                           ;Lcd_Set_Cursor@a stored from wreg
  2897  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2898  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2899  068D  00A1               	movwf	Lcd_Set_Cursor@a
  2900  068E                     l1793:
  2901                           
  2902                           ;lcd.c: 30: void Lcd_Set_Cursor(char a, char b);lcd.c: 31: {;lcd.c: 32:  char temp,z,y;;
      +                          lcd.c: 33:  if(a == 1)
  2903  068E  0321               	decf	Lcd_Set_Cursor@a,w
  2904  068F  1D03               	btfss	3,2
  2905  0690  2E92               	goto	u1091
  2906  0691  2E93               	goto	u1090
  2907  0692                     u1091:
  2908  0692  2E9F               	goto	l1799
  2909  0693                     u1090:
  2910  0693                     l1795:
  2911                           
  2912                           ;lcd.c: 34:  {;lcd.c: 35:    temp = 0x80 + b - 1;
  2913  0693  0877               	movf	Lcd_Set_Cursor@b,w
  2914  0694  3E7F               	addlw	127
  2915  0695  00A0               	movwf	??_Lcd_Set_Cursor
  2916  0696  0820               	movf	??_Lcd_Set_Cursor,w
  2917  0697  00A2               	movwf	Lcd_Set_Cursor@temp
  2918  0698                     l1797:
  2919                           
  2920                           ;lcd.c: 36:   Lcd_Cmd(temp);
  2921  0698  0822               	movf	Lcd_Set_Cursor@temp,w
  2922  0699  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  2923                           
  2924                           ;lcd.c: 37:  }
  2925  069E  2EB0               	goto	l46
  2926  069F                     l1799:
  2927  069F  3002               	movlw	2
  2928  06A0  0621               	xorwf	Lcd_Set_Cursor@a,w
  2929  06A1  1D03               	btfss	3,2
  2930  06A2  2EA4               	goto	u1101
  2931  06A3  2EA5               	goto	u1100
  2932  06A4                     u1101:
  2933  06A4  2EB0               	goto	l46
  2934  06A5                     u1100:
  2935  06A5                     l1801:
  2936                           
  2937                           ;lcd.c: 39:  {;lcd.c: 40:   temp = 0xC0 + b - 1;
  2938  06A5  0877               	movf	Lcd_Set_Cursor@b,w
  2939  06A6  3EBF               	addlw	191
  2940  06A7  00A0               	movwf	??_Lcd_Set_Cursor
  2941  06A8  0820               	movf	??_Lcd_Set_Cursor,w
  2942  06A9  00A2               	movwf	Lcd_Set_Cursor@temp
  2943  06AA                     l1803:
  2944                           
  2945                           ;lcd.c: 41:   Lcd_Cmd(temp);
  2946  06AA  0822               	movf	Lcd_Set_Cursor@temp,w
  2947  06AB  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  2948  06B0                     l46:
  2949  06B0  0008               	return
  2950  06B1                     __end_of_Lcd_Set_Cursor:
  2951                           
  2952                           	psect	text11
  2953  053A                     __ptext11:	
  2954 ;; *************** function _Lcd_Init *****************
  2955 ;; Defined at:
  2956 ;;		line 45 in file "lcd.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0
  2972 ;;      Temps:          0       2       0       0       0
  2973 ;;      Totals:         0       2       0       0       0
  2974 ;;Total ram usage:        2 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    3
  2977 ;; This function calls:
  2978 ;;		_Lcd_Cmd
  2979 ;;		_Lcd_Port
  2980 ;; This function is called by:
  2981 ;;		_Setup
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function _Lcd_Init
  2987  053A                     _Lcd_Init:
  2988  053A                     l1805:	
  2989                           ;incstack = 0
  2990                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2991                           
  2992                           
  2993                           ;lcd.c: 46:    _delay((unsigned long)((15)*(8000000/4000.0)));
  2994  053A  3027               	movlw	39
  2995  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2996  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2997  053D  00A1               	movwf	??_Lcd_Init+1
  2998  053E  30F4               	movlw	244
  2999  053F  00A0               	movwf	??_Lcd_Init
  3000  0540                     u1257:
  3001  0540  0BA0               	decfsz	??_Lcd_Init,f
  3002  0541  2D40               	goto	u1257
  3003  0542  0BA1               	decfsz	??_Lcd_Init+1,f
  3004  0543  2D40               	goto	u1257
  3005  0544  0000               	nop
  3006  0545                     l1807:
  3007                           
  3008                           ;lcd.c: 47:   Lcd_Port(0x00);
  3009  0545  3000               	movlw	0
  3010  0546  120A  118A  272F  120A  118A  	fcall	_Lcd_Port
  3011  054B                     l1809:
  3012                           
  3013                           ;lcd.c: 48:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3014  054B  3034               	movlw	52
  3015  054C  1283               	bcf	3,5	;RP0=0, select bank0
  3016  054D  1303               	bcf	3,6	;RP1=0, select bank0
  3017  054E  00A1               	movwf	??_Lcd_Init+1
  3018  054F  30F1               	movlw	241
  3019  0550  00A0               	movwf	??_Lcd_Init
  3020  0551                     u1267:
  3021  0551  0BA0               	decfsz	??_Lcd_Init,f
  3022  0552  2D51               	goto	u1267
  3023  0553  0BA1               	decfsz	??_Lcd_Init+1,f
  3024  0554  2D51               	goto	u1267
  3025                           
  3026                           ;lcd.c: 49:   Lcd_Cmd(0x030);
  3027  0555  3030               	movlw	48
  3028  0556  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  3029  055B                     l1811:
  3030                           
  3031                           ;lcd.c: 50:  _delay((unsigned long)((5)*(8000000/4000.0)));
  3032  055B  300D               	movlw	13
  3033  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3034  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3035  055E  00A1               	movwf	??_Lcd_Init+1
  3036  055F  30FB               	movlw	251
  3037  0560  00A0               	movwf	??_Lcd_Init
  3038  0561                     u1277:
  3039  0561  0BA0               	decfsz	??_Lcd_Init,f
  3040  0562  2D61               	goto	u1277
  3041  0563  0BA1               	decfsz	??_Lcd_Init+1,f
  3042  0564  2D61               	goto	u1277
  3043  0565                     l1813:
  3044                           
  3045                           ;lcd.c: 51:   Lcd_Cmd(0x030);
  3046  0565  3030               	movlw	48
  3047  0566  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  3048                           
  3049                           ;lcd.c: 52:  _delay((unsigned long)((160)*(8000000/4000000.0)));
  3050  056B  3069               	movlw	105
  3051  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3052  056D  1303               	bcf	3,6	;RP1=0, select bank0
  3053  056E  00A0               	movwf	??_Lcd_Init
  3054  056F                     u1287:
  3055  056F  0BA0               	decfsz	??_Lcd_Init,f
  3056  0570  2D6F               	goto	u1287
  3057  0571  2D72               	nop2
  3058  0572                     l1815:
  3059                           
  3060                           ;lcd.c: 53:   Lcd_Cmd(0x030);
  3061  0572  3030               	movlw	48
  3062  0573  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  3063  0578                     l1817:
  3064                           
  3065                           ;lcd.c: 55:   Lcd_Cmd(0x038);
  3066  0578  3038               	movlw	56
  3067  0579  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  3068  057E                     l1819:
  3069                           
  3070                           ;lcd.c: 56:   Lcd_Cmd(0x010);
  3071  057E  3010               	movlw	16
  3072  057F  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  3073  0584                     l1821:
  3074                           
  3075                           ;lcd.c: 57:   Lcd_Cmd(0x001);
  3076  0584  3001               	movlw	1
  3077  0585  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  3078  058A                     l1823:
  3079                           
  3080                           ;lcd.c: 58:   Lcd_Cmd(0x006);
  3081  058A  3006               	movlw	6
  3082  058B  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  3083  0590                     l1825:
  3084                           
  3085                           ;lcd.c: 60:   Lcd_Cmd(0x0C);
  3086  0590  300C               	movlw	12
  3087  0591  120A  118A  26CE  120A  118A  	fcall	_Lcd_Cmd
  3088  0596                     l49:
  3089  0596  0008               	return
  3090  0597                     __end_of_Lcd_Init:
  3091                           
  3092                           	psect	text12
  3093  06CE                     __ptext12:	
  3094 ;; *************** function _Lcd_Cmd *****************
  3095 ;; Defined at:
  3096 ;;		line 16 in file "lcd.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  a               1    wreg     unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  a               1    6[COMMON] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         0       0       0       0       0
  3111 ;;      Locals:         1       0       0       0       0
  3112 ;;      Temps:          2       0       0       0       0
  3113 ;;      Totals:         3       0       0       0       0
  3114 ;;Total ram usage:        3 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    2
  3117 ;; This function calls:
  3118 ;;		_Lcd_Port
  3119 ;; This function is called by:
  3120 ;;		_Lcd_Set_Cursor
  3121 ;;		_Lcd_Init
  3122 ;;		_Lcd_Shift_Right
  3123 ;;		_Lcd_Shift_Left
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           
  3128                           ;psect for function _Lcd_Cmd
  3129  06CE                     _Lcd_Cmd:
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3133                           ;Lcd_Cmd@a stored from wreg
  3134  06CE  00F6               	movwf	Lcd_Cmd@a
  3135  06CF                     l1773:
  3136                           
  3137                           ;lcd.c: 16: void Lcd_Cmd(char a);lcd.c: 17: {;lcd.c: 18:  RE0 = 0;
  3138  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3139  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3140  06D1  1009               	bcf	9,0	;volatile
  3141  06D2                     l1775:
  3142                           
  3143                           ;lcd.c: 19:  Lcd_Port(a);
  3144  06D2  0876               	movf	Lcd_Cmd@a,w
  3145  06D3  120A  118A  272F  120A  118A  	fcall	_Lcd_Port
  3146  06D8                     l1777:
  3147                           
  3148                           ;lcd.c: 20:  RE1 = 1;
  3149  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3150  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3151  06DA  1489               	bsf	9,1	;volatile
  3152  06DB                     l1779:
  3153                           
  3154                           ;lcd.c: 21:         _delay((unsigned long)((10)*(8000000/4000.0)));
  3155  06DB  301A               	movlw	26
  3156  06DC  00F5               	movwf	??_Lcd_Cmd+1
  3157  06DD  30F8               	movlw	248
  3158  06DE  00F4               	movwf	??_Lcd_Cmd
  3159  06DF                     u1297:
  3160  06DF  0BF4               	decfsz	??_Lcd_Cmd,f
  3161  06E0  2EDF               	goto	u1297
  3162  06E1  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3163  06E2  2EDF               	goto	u1297
  3164  06E3  0000               	nop
  3165  06E4                     l1781:
  3166                           
  3167                           ;lcd.c: 22:         RE1 = 0;
  3168  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3169  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3170  06E6  1089               	bcf	9,1	;volatile
  3171  06E7                     l40:
  3172  06E7  0008               	return
  3173  06E8                     __end_of_Lcd_Cmd:
  3174                           
  3175                           	psect	text13
  3176  072F                     __ptext13:	
  3177 ;; *************** function _Lcd_Port *****************
  3178 ;; Defined at:
  3179 ;;		line 12 in file "lcd.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  a               1    wreg     unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  a               1    3[COMMON] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         0       0       0       0       0
  3194 ;;      Locals:         1       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0
  3196 ;;      Totals:         1       0       0       0       0
  3197 ;;Total ram usage:        1 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_Lcd_Cmd
  3204 ;;		_Lcd_Init
  3205 ;;		_Lcd_Write_Char
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function _Lcd_Port
  3211  072F                     _Lcd_Port:
  3212                           
  3213                           ;incstack = 0
  3214                           ; Regs used in _Lcd_Port: [wreg]
  3215                           ;Lcd_Port@a stored from wreg
  3216  072F  00F3               	movwf	Lcd_Port@a
  3217  0730                     l1771:
  3218                           
  3219                           ;lcd.c: 12: void Lcd_Port(char a);lcd.c: 13: {;lcd.c: 14:  PORTD = a;
  3220  0730  0873               	movf	Lcd_Port@a,w
  3221  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0732  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0733  0088               	movwf	8	;volatile
  3224  0734                     l37:
  3225  0734  0008               	return
  3226  0735                     __end_of_Lcd_Port:
  3227                           
  3228                           	psect	text14
  3229  032C                     __ptext14:	
  3230 ;; *************** function _isr *****************
  3231 ;; Defined at:
  3232 ;;		line 71 in file "lab3.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         0       0       0       0       0
  3247 ;;      Locals:         0       0       0       0       0
  3248 ;;      Temps:          3       0       0       0       0
  3249 ;;      Totals:         3       0       0       0       0
  3250 ;;Total ram usage:        3 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		Interrupt level 1
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           
  3260                           ;psect for function _isr
  3261  032C                     _isr:
  3262  032C                     i1l1571:
  3263                           
  3264                           ;lab3.c: 73:         } else {
  3265  032C  1D0B               	btfss	11,2	;volatile
  3266  032D  2B2F               	goto	u81_21
  3267  032E  2B30               	goto	u81_20
  3268  032F                     u81_21:
  3269  032F  2B37               	goto	i1l1577
  3270  0330                     u81_20:
  3271  0330                     i1l1573:
  3272                           
  3273                           ;lab3.c: 74:         RC_temp = RCREG;
  3274  0330  3001               	movlw	1
  3275  0331  00F0               	movwf	??_isr
  3276  0332  0870               	movf	??_isr,w
  3277  0333  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0334  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0335  07C4               	addwf	_CONTX,f
  3280  0336                     i1l1575:
  3281                           
  3282                           ;lab3.c: 75:         }
  3283  0336  110B               	bcf	11,2	;volatile
  3284  0337                     i1l1577:
  3285                           
  3286                           ;lab3.c: 78:     if (TXIF == 1){
  3287  0337  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0338  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0339  1F0C               	btfss	12,6	;volatile
  3290  033A  2B3C               	goto	u82_21
  3291  033B  2B3D               	goto	u82_20
  3292  033C                     u82_21:
  3293  033C  2B52               	goto	i1l1597
  3294  033D                     u82_20:
  3295  033D                     i1l1579:
  3296                           
  3297                           ;lab3.c: 81:             TXREG = 49;
  3298  033D  037A               	decf	_bandera,w
  3299  033E  1D03               	btfss	3,2
  3300  033F  2B41               	goto	u83_21
  3301  0340  2B42               	goto	u83_20
  3302  0341                     u83_21:
  3303  0341  2B49               	goto	i1l1587
  3304  0342                     u83_20:
  3305  0342                     i1l1581:
  3306                           
  3307                           ;lab3.c: 82:             bandera1 = 1;
  3308  0342  081E               	movf	30,w	;volatile
  3309  0343  00F0               	movwf	??_isr
  3310  0344  0870               	movf	??_isr,w
  3311  0345  00CA               	movwf	_ADC1
  3312  0346                     i1l1583:
  3313                           
  3314                           ;lab3.c: 83:         } else if (bandera1 == 1){
  3315  0346  151F               	bsf	31,2	;volatile
  3316  0347                     i1l1585:
  3317                           
  3318                           ;lab3.c: 84:             TXREG = 0x2E;
  3319  0347  01FA               	clrf	_bandera
  3320                           
  3321                           ;lab3.c: 85:             bandera1 = 2;
  3322  0348  2B50               	goto	i1l1593
  3323  0349                     i1l1587:
  3324                           
  3325                           ;lab3.c: 86:         } else if (bandera1 == 2){
  3326  0349  081E               	movf	30,w	;volatile
  3327  034A  00F0               	movwf	??_isr
  3328  034B  0870               	movf	??_isr,w
  3329  034C  00C9               	movwf	_ADC2
  3330  034D                     i1l1589:
  3331                           
  3332                           ;lab3.c: 87:             TXREG = 52;
  3333  034D  111F               	bcf	31,2	;volatile
  3334  034E                     i1l1591:
  3335                           
  3336                           ;lab3.c: 88:             bandera1 = 3;
  3337  034E  01FA               	clrf	_bandera
  3338  034F  0AFA               	incf	_bandera,f
  3339  0350                     i1l1593:
  3340                           
  3341                           ;lab3.c: 90:             TXREG = 55;
  3342  0350  130C               	bcf	12,6	;volatile
  3343  0351                     i1l1595:
  3344                           
  3345                           ;lab3.c: 91:             bandera1 = 4;
  3346  0351  149F               	bsf	31,1	;volatile
  3347  0352                     i1l1597:
  3348                           
  3349                           ;lab3.c: 93:             TXREG = 0x2D;
  3350  0352  1E8C               	btfss	12,5	;volatile
  3351  0353  2B55               	goto	u84_21
  3352  0354  2B56               	goto	u84_20
  3353  0355                     u84_21:
  3354  0355  2B95               	goto	i1l1619
  3355  0356                     u84_20:
  3356  0356                     i1l1599:
  3357                           
  3358                           ;lab3.c: 95:         }
  3359  0356  1785               	bsf	5,7	;volatile
  3360  0357                     i1l1601:
  3361                           
  3362                           ;lab3.c: 96:         else if (bandera1 == 5){
  3363  0357  300D               	movlw	13
  3364  0358  061A               	xorwf	26,w	;volatile
  3365  0359  1D03               	btfss	3,2
  3366  035A  2B5C               	goto	u85_21
  3367  035B  2B5D               	goto	u85_20
  3368  035C                     u85_21:
  3369  035C  2B90               	goto	i1l1617
  3370  035D                     u85_20:
  3371  035D                     i1l1603:
  3372                           
  3373                           ;lab3.c: 97:             TXREG = 56;
  3374  035D  1385               	bcf	5,7	;volatile
  3375  035E                     i1l1605:
  3376                           
  3377                           ;lab3.c: 98:             bandera1 = 6;
  3378  035E  302B               	movlw	43
  3379  035F  0679               	xorwf	_RC_temp,w
  3380  0360  1D03               	btfss	3,2
  3381  0361  2B63               	goto	u86_21
  3382  0362  2B64               	goto	u86_20
  3383  0363                     u86_21:
  3384  0363  2B76               	goto	i1l1611
  3385  0364                     u86_20:
  3386  0364                     i1l1607:
  3387                           
  3388                           ;lab3.c: 99:         } else if (bandera1 == 6){
  3389  0364  3001               	movlw	1
  3390  0365  07B6               	addwf	_contador,f
  3391  0366  1803               	skipnc
  3392  0367  0AB7               	incf	_contador+1,f
  3393  0368  3000               	movlw	0
  3394  0369  07B7               	addwf	_contador+1,f
  3395                           
  3396                           ;lab3.c: 100:             TXREG = 0x2E;
  3397  036A  3001               	movlw	1
  3398  036B  0237               	subwf	_contador+1,w
  3399  036C  3000               	movlw	0
  3400  036D  1903               	skipnz
  3401  036E  0236               	subwf	_contador,w
  3402  036F  1C03               	skipc
  3403  0370  2B72               	goto	u87_21
  3404  0371  2B73               	goto	u87_20
  3405  0372                     u87_21:
  3406  0372  2B95               	goto	i1l1619
  3407  0373                     u87_20:
  3408  0373                     i1l1609:
  3409                           
  3410                           ;lab3.c: 101:             bandera1 = 7;
  3411  0373  01B6               	clrf	_contador
  3412  0374  01B7               	clrf	_contador+1
  3413  0375  2B95               	goto	i1l1619
  3414  0376                     i1l1611:
  3415  0376  302D               	movlw	45
  3416  0377  0679               	xorwf	_RC_temp,w
  3417  0378  1D03               	btfss	3,2
  3418  0379  2B7B               	goto	u88_21
  3419  037A  2B7C               	goto	u88_20
  3420  037B                     u88_21:
  3421  037B  2B95               	goto	i1l203
  3422  037C                     u88_20:
  3423  037C                     i1l1613:
  3424                           
  3425                           ;lab3.c: 104:             bandera1 = 8;
  3426  037C  3001               	movlw	1
  3427  037D  02B6               	subwf	_contador,f
  3428  037E  3000               	movlw	0
  3429  037F  1C03               	skipc
  3430  0380  03B7               	decf	_contador+1,f
  3431  0381  02B7               	subwf	_contador+1,f
  3432                           
  3433                           ;lab3.c: 106:             TXREG = 49;
  3434  0382  3001               	movlw	1
  3435  0383  0237               	subwf	_contador+1,w
  3436  0384  3000               	movlw	0
  3437  0385  1903               	skipnz
  3438  0386  0236               	subwf	_contador,w
  3439  0387  1C03               	skipc
  3440  0388  2B8A               	goto	u89_21
  3441  0389  2B8B               	goto	u89_20
  3442  038A                     u89_21:
  3443  038A  2B95               	goto	i1l203
  3444  038B                     u89_20:
  3445  038B                     i1l1615:
  3446                           
  3447                           ;lab3.c: 107:             bandera1 = 9;
  3448  038B  30FF               	movlw	255
  3449  038C  00B6               	movwf	_contador
  3450  038D  3000               	movlw	0
  3451  038E  00B7               	movwf	_contador+1
  3452  038F  2B95               	goto	i1l1619
  3453  0390                     i1l1617:
  3454                           
  3455                           ;lab3.c: 112: 
  3456  0390  081A               	movf	26,w	;volatile
  3457  0391  00F0               	movwf	??_isr
  3458  0392  0870               	movf	??_isr,w
  3459  0393  00F9               	movwf	_RC_temp
  3460  0394  2B95               	goto	i1l1619
  3461  0395                     i1l203:	
  3462                           ;lab3.c: 113:     TXIE = 0;
  3463                           
  3464  0395                     i1l1619:
  3465                           
  3466                           ;lab3.c: 116: }
  3467  0395  1E0C               	btfss	12,4	;volatile
  3468  0396  2B98               	goto	u90_21
  3469  0397  2B99               	goto	u90_20
  3470  0398                     u90_21:
  3471  0398  2C17               	goto	i1l224
  3472  0399                     u90_20:
  3473  0399                     i1l1621:
  3474                           
  3475                           ;lab3.c: 117: 
  3476  0399  0878               	movf	_bandera1,w
  3477  039A  1D03               	btfss	3,2
  3478  039B  2B9D               	goto	u91_21
  3479  039C  2B9E               	goto	u91_20
  3480  039D                     u91_21:
  3481  039D  2BA3               	goto	i1l1627
  3482  039E                     u91_20:
  3483  039E                     i1l1623:
  3484                           
  3485                           ;lab3.c: 119:     Setup();
  3486  039E  3031               	movlw	49
  3487  039F  0099               	movwf	25	;volatile
  3488  03A0                     i1l1625:
  3489                           
  3490                           ;lab3.c: 120:     while(1){
  3491  03A0  01F8               	clrf	_bandera1
  3492  03A1  0AF8               	incf	_bandera1,f
  3493                           
  3494                           ;lab3.c: 121:         if(CONTX > 15){
  3495  03A2  2C14               	goto	i1l1665
  3496  03A3                     i1l1627:
  3497  03A3  0378               	decf	_bandera1,w
  3498  03A4  1D03               	btfss	3,2
  3499  03A5  2BA7               	goto	u92_21
  3500  03A6  2BA8               	goto	u92_20
  3501  03A7                     u92_21:
  3502  03A7  2BAF               	goto	i1l1631
  3503  03A8                     u92_20:
  3504  03A8                     i1l1629:
  3505                           
  3506                           ;lab3.c: 122:             CONTX = 0;
  3507  03A8  302E               	movlw	46
  3508  03A9  0099               	movwf	25	;volatile
  3509                           
  3510                           ;lab3.c: 123:             TXIE = 1;
  3511  03AA  3002               	movlw	2
  3512  03AB  00F0               	movwf	??_isr
  3513  03AC  0870               	movf	??_isr,w
  3514  03AD  00F8               	movwf	_bandera1
  3515                           
  3516                           ;lab3.c: 124:             }
  3517  03AE  2C14               	goto	i1l1665
  3518  03AF                     i1l1631:
  3519  03AF  3002               	movlw	2
  3520  03B0  0678               	xorwf	_bandera1,w
  3521  03B1  1D03               	btfss	3,2
  3522  03B2  2BB4               	goto	u93_21
  3523  03B3  2BB5               	goto	u93_20
  3524  03B4                     u93_21:
  3525  03B4  2BBC               	goto	i1l1635
  3526  03B5                     u93_20:
  3527  03B5                     i1l1633:
  3528                           
  3529                           ;lab3.c: 125: 
  3530  03B5  3034               	movlw	52
  3531  03B6  0099               	movwf	25	;volatile
  3532                           
  3533                           ;lab3.c: 126: 
  3534  03B7  3003               	movlw	3
  3535  03B8  00F0               	movwf	??_isr
  3536  03B9  0870               	movf	??_isr,w
  3537  03BA  00F8               	movwf	_bandera1
  3538                           
  3539                           ;lab3.c: 127:     C11 = ADC1 / 51;
  3540  03BB  2C14               	goto	i1l1665
  3541  03BC                     i1l1635:
  3542  03BC  3003               	movlw	3
  3543  03BD  0678               	xorwf	_bandera1,w
  3544  03BE  1D03               	btfss	3,2
  3545  03BF  2BC1               	goto	u94_21
  3546  03C0  2BC2               	goto	u94_20
  3547  03C1                     u94_21:
  3548  03C1  2BC9               	goto	i1l1639
  3549  03C2                     u94_20:
  3550  03C2                     i1l1637:
  3551                           
  3552                           ;lab3.c: 128:     C12 = ((ADC1 * 100 / 51) - (C11*100))/10;
  3553  03C2  3037               	movlw	55
  3554  03C3  0099               	movwf	25	;volatile
  3555                           
  3556                           ;lab3.c: 129:     C13 = ((ADC1 * 100 / 51) - (C11*100) - (C12*10));
  3557  03C4  3004               	movlw	4
  3558  03C5  00F0               	movwf	??_isr
  3559  03C6  0870               	movf	??_isr,w
  3560  03C7  00F8               	movwf	_bandera1
  3561                           
  3562                           ;lab3.c: 130: 
  3563  03C8  2C14               	goto	i1l1665
  3564  03C9                     i1l1639:
  3565  03C9  3004               	movlw	4
  3566  03CA  0678               	xorwf	_bandera1,w
  3567  03CB  1D03               	btfss	3,2
  3568  03CC  2BCE               	goto	u95_21
  3569  03CD  2BCF               	goto	u95_20
  3570  03CE                     u95_21:
  3571  03CE  2BD6               	goto	i1l1643
  3572  03CF                     u95_20:
  3573  03CF                     i1l1641:
  3574                           
  3575                           ;lab3.c: 131:     C21 = ADC2 / 51;
  3576  03CF  302D               	movlw	45
  3577  03D0  0099               	movwf	25	;volatile
  3578                           
  3579                           ;lab3.c: 132:     C22 = (((ADC2 * 100) / 51) - (C21*100))/10;
  3580  03D1  3005               	movlw	5
  3581  03D2  00F0               	movwf	??_isr
  3582  03D3  0870               	movf	??_isr,w
  3583  03D4  00F8               	movwf	_bandera1
  3584                           
  3585                           ;lab3.c: 133:     C23 = (((ADC2 * 100) / 51) - (C21*100) - (C22*10));
  3586  03D5  2C14               	goto	i1l1665
  3587  03D6                     i1l1643:
  3588  03D6  3005               	movlw	5
  3589  03D7  0678               	xorwf	_bandera1,w
  3590  03D8  1D03               	btfss	3,2
  3591  03D9  2BDB               	goto	u96_21
  3592  03DA  2BDC               	goto	u96_20
  3593  03DB                     u96_21:
  3594  03DB  2BE3               	goto	i1l1647
  3595  03DC                     u96_20:
  3596  03DC                     i1l1645:
  3597                           
  3598                           ;lab3.c: 135:     C31 = contador / 51;
  3599  03DC  3038               	movlw	56
  3600  03DD  0099               	movwf	25	;volatile
  3601                           
  3602                           ;lab3.c: 136:     C32 = ((contador * 100 / 51) - (C31*100))/10;
  3603  03DE  3006               	movlw	6
  3604  03DF  00F0               	movwf	??_isr
  3605  03E0  0870               	movf	??_isr,w
  3606  03E1  00F8               	movwf	_bandera1
  3607                           
  3608                           ;lab3.c: 137:     C33 = ((contador * 100 / 51) - (C31*100) - (C32*10));
  3609  03E2  2C14               	goto	i1l1665
  3610  03E3                     i1l1647:
  3611  03E3  3006               	movlw	6
  3612  03E4  0678               	xorwf	_bandera1,w
  3613  03E5  1D03               	btfss	3,2
  3614  03E6  2BE8               	goto	u97_21
  3615  03E7  2BE9               	goto	u97_20
  3616  03E8                     u97_21:
  3617  03E8  2BF0               	goto	i1l1651
  3618  03E9                     u97_20:
  3619  03E9                     i1l1649:
  3620                           
  3621                           ;lab3.c: 138: 
  3622  03E9  302E               	movlw	46
  3623  03EA  0099               	movwf	25	;volatile
  3624                           
  3625                           ;lab3.c: 139: 
  3626  03EB  3007               	movlw	7
  3627  03EC  00F0               	movwf	??_isr
  3628  03ED  0870               	movf	??_isr,w
  3629  03EE  00F8               	movwf	_bandera1
  3630                           
  3631                           ;lab3.c: 140:     if (C12 > 9){
  3632  03EF  2C14               	goto	i1l1665
  3633  03F0                     i1l1651:
  3634  03F0  3007               	movlw	7
  3635  03F1  0678               	xorwf	_bandera1,w
  3636  03F2  1D03               	btfss	3,2
  3637  03F3  2BF5               	goto	u98_21
  3638  03F4  2BF6               	goto	u98_20
  3639  03F5                     u98_21:
  3640  03F5  2BFD               	goto	i1l1655
  3641  03F6                     u98_20:
  3642  03F6                     i1l1653:
  3643                           
  3644                           ;lab3.c: 141:         C12 = 9;
  3645  03F6  3039               	movlw	57
  3646  03F7  0099               	movwf	25	;volatile
  3647                           
  3648                           ;lab3.c: 142:     }
  3649  03F8  3008               	movlw	8
  3650  03F9  00F0               	movwf	??_isr
  3651  03FA  0870               	movf	??_isr,w
  3652  03FB  00F8               	movwf	_bandera1
  3653                           
  3654                           ;lab3.c: 143:     if (C13 > 9){
  3655  03FC  2C14               	goto	i1l1665
  3656  03FD                     i1l1655:
  3657  03FD  3008               	movlw	8
  3658  03FE  0678               	xorwf	_bandera1,w
  3659  03FF  1D03               	btfss	3,2
  3660  0400  2C02               	goto	u99_21
  3661  0401  2C03               	goto	u99_20
  3662  0402                     u99_21:
  3663  0402  2C0A               	goto	i1l1659
  3664  0403                     u99_20:
  3665  0403                     i1l1657:
  3666                           
  3667                           ;lab3.c: 144:         C13 = 9;
  3668  0403  3031               	movlw	49
  3669  0404  0099               	movwf	25	;volatile
  3670                           
  3671                           ;lab3.c: 145:     }
  3672  0405  3009               	movlw	9
  3673  0406  00F0               	movwf	??_isr
  3674  0407  0870               	movf	??_isr,w
  3675  0408  00F8               	movwf	_bandera1
  3676                           
  3677                           ;lab3.c: 146:     if (C22 > 9){
  3678  0409  2C14               	goto	i1l1665
  3679  040A                     i1l1659:
  3680  040A  3009               	movlw	9
  3681  040B  0678               	xorwf	_bandera1,w
  3682  040C  1D03               	btfss	3,2
  3683  040D  2C0F               	goto	u100_21
  3684  040E  2C10               	goto	u100_20
  3685  040F                     u100_21:
  3686  040F  2C14               	goto	i1l218
  3687  0410                     u100_20:
  3688  0410                     i1l1661:
  3689                           
  3690                           ;lab3.c: 147:         C22 = 9;
  3691  0410  300D               	movlw	13
  3692  0411  0099               	movwf	25	;volatile
  3693  0412                     i1l1663:
  3694                           
  3695                           ;lab3.c: 148:     }
  3696  0412  01F8               	clrf	_bandera1
  3697  0413  2C14               	goto	i1l1665
  3698  0414                     i1l218:
  3699  0414                     i1l1665:
  3700                           
  3701                           ;lab3.c: 151:     }
  3702  0414  1683               	bsf	3,5	;RP0=1, select bank1
  3703  0415  1303               	bcf	3,6	;RP1=0, select bank1
  3704  0416  120C               	bcf	12,4	;volatile
  3705  0417                     i1l224:
  3706  0417  0872               	movf	??_isr+2,w
  3707  0418  008A               	movwf	10
  3708  0419  0E71               	swapf	??_isr+1,w
  3709  041A  0083               	movwf	3
  3710  041B  0EFE               	swapf	btemp,f
  3711  041C  0E7E               	swapf	btemp,w
  3712  041D  0009               	retfie
  3713  041E                     __end_of_isr:
  3714  007E                     btemp	set	126	;btemp
  3715  007E                     wtemp0	set	126
  3716                           
  3717                           	psect	intentry
  3718  0004                     __pintentry:	
  3719                           ;incstack = 0
  3720                           ; Regs used in _isr: [wreg+status,2+status,0]
  3721                           
  3722  0004                     interrupt_function:
  3723  007E                     saved_w	set	btemp
  3724  0004  00FE               	movwf	btemp
  3725  0005  0E03               	swapf	3,w
  3726  0006  00F1               	movwf	??_isr+1
  3727  0007  080A               	movf	10,w
  3728  0008  00F2               	movwf	??_isr+2
  3729  0009  120A  118A  2B2C   	ljmp	_isr
  3730                           
  3731                           	psect	config
  3732                           
  3733                           ;Config register CONFIG1 @ 0x2007
  3734                           ;	Oscillator Selection bits
  3735                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3736                           ;	Watchdog Timer Enable bit
  3737                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3738                           ;	Power-up Timer Enable bit
  3739                           ;	PWRTE = OFF, PWRT disabled
  3740                           ;	RE3/MCLR pin function select bit
  3741                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3742                           ;	Code Protection bit
  3743                           ;	CP = OFF, Program memory code protection is disabled
  3744                           ;	Data Code Protection bit
  3745                           ;	CPD = OFF, Data memory code protection is disabled
  3746                           ;	Brown Out Reset Selection bits
  3747                           ;	BOREN = OFF, BOR disabled
  3748                           ;	Internal External Switchover bit
  3749                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3750                           ;	Fail-Safe Clock Monitor Enabled bit
  3751                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3752                           ;	Low Voltage Programming Enable bit
  3753                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3754                           ;	In-Circuit Debugger Mode bit
  3755                           ;	DEBUG = 0x1, unprogrammed default
  3756  2007                     	org	8199
  3757  2007  20D4               	dw	8404
  3758                           
  3759                           ;Config register CONFIG2 @ 0x2008
  3760                           ;	Brown-out Reset Selection bit
  3761                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3762                           ;	Flash Program Memory Self Write Enable bits
  3763                           ;	WRT = OFF, Write protection off
  3764  2008                     	org	8200
  3765  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     22      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___awdiv
    _main->___lwdiv
    ___lwdiv->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___lwdiv->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Set_Cursor
    _Setup->_Lcd_Write_String

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    8485
                                             10 BANK0     12    12      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                              _Setup
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1756
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              7 COMMON     1     1      0
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     548
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1516
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0    2127
                                              3 BANK0      1     1      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _initADC
                          _initUSART
 ---------------------------------------------------------------------------------
 (2) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     408
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1604
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _initADC
     _initUSART
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 15:35:52 2021

                        _a 0038                          pc 0002             ___bmul@product 0075  
                       l20 05B0                         l21 05B5                         l22 05BA  
                       l23 05BF                         l40 06E7                         l24 05C4  
                       l16 05A1                         l25 05C9                         l18 05A6  
                       l26 05F0                         l19 05AB                         l52 06FD  
                       l37 0734                         l46 06B0                         l49 0596  
                       l58 068A                         l83 06CD               ___awdiv@sign 0027  
                       fsr 0004        ___wmul@multiplicand 0075                        _C11 0042  
                      _C12 0041                        _C13 0040                        _C21 003F  
                      _C22 003E                        _C23 003D                        _C31 003C  
                      _C32 003B                        _C33 003A                        l231 0233  
                      l232 023D                        l233 0247                        l234 0251  
                      l243 04D0                        l331 0661                        l235 025B  
                      l236 0265                        l601 0636                        l329 0647  
                      l355 0712                        l482 0539                        _RA7 002F  
                      _RE0 0048                        _RE1 0049                        u700 0517  
                      u620 0704                        u701 0516                        u621 0703  
                      u630 0711                        u631 0710                        u720 052B  
                      u640 04D8                        u800 0632                        u721 052A  
                      u705 0513                        u641 04D7                        u801 0631  
                      u730 0530                        u650 04E3                        u731 052F  
                      u715 051F                        u651 04E2                        u660 04F4  
                      u740 05FB                        u661 04F3                        u741 05FA  
                      u680 0506                        u760 060D                        u681 0505  
                      u761 060C                        u675 04F8                        u755 05FF  
                      u780 061E                        u781 061D                        u695 0507  
                      u775 060E                        u785 061A                        u795 0626  
                      _isr 032C                        fsr0 0004                        indf 0000  
                     l2017 05D6                       l1401 06C7                       l1403 06CA  
                     l1333 05CE                       l1325 0598                       l1405 06CB  
                     l1501 04D8                       l1327 059C                       l1407 06CC  
                     l1511 04EC                       l1503 04DD                       l1329 059F  
                     l1521 0502                       l1513 04EE                       l1505 04DF  
                     l1531 0525                       l1523 0506                       l1515 04F4  
                     l1507 04E3                       l1381 06B1                       l1525 0517  
                     l1517 04F7                       l1533 052B                       l1509 04E8  
                     l1541 05F1                       l1391 06BE                       l1383 06B5  
                     l1535 0530                       l1527 051D                       l1519 04FE  
                     l1551 0609                       l1543 05F5                       l1801 06A5  
                     l1393 06BF                       l1385 06B7                       l1537 0535  
                     l1529 051E                       l1561 062C                       l1553 060D  
                     l1545 05FB                       l1811 055B                       l1803 06AA  
                     l1395 06C2                       l1387 06B8                       l1491 070A  
                     l1483 06FF                       l1555 061E                       l1547 05FE  
                     l1563 0632                       l1821 0584                       l1813 0565  
                     l1805 053A                       l1397 06C5                       l1389 06BB  
                     l1493 0711                       l1485 0700                       l1557 0624  
                     l1549 0605                       l1901 064E                       l1823 058A  
                     l1815 0572                       l1807 0545                       l1831 0675  
                     l1399 06C6                       l1487 0704                       l1559 0625  
                     l1903 0655                       _ADC1 004A                       _ADC2 0049  
                     l1825 0590                       l1817 0578                       l1809 054B  
                     l1833 067D                       l1841 0430                       l1497 04D1  
                     l1489 0708                       l1905 065B                       l1921 0030  
                     l1913 001F                       l1771 0730                       l1819 057E  
                     l1827 0665                       l1851 044A                       l1843 0433  
                     l1835 041E                       l1499 04D4                       l1931 00F2  
                     l1923 0047                       l1915 0024                       l1781 06E4  
                     l1773 06CF                       l1829 0668                       l1861 045C  
                     l1853 0450                       l1845 043F                       l1837 0429  
                     l1941 01D6                       l1933 0131                       l1925 0086  
                     l1917 002C                       l1775 06D2                       l1791 06FA  
                     l1783 06E9                       l1871 0468                       l1863 0460  
                     l1855 0456                       l1847 0444                       l1839 042D  
                     l1951 0243                       l1943 01E9                       l1935 0144  
                     l1927 0099                       l1919 002D                       l1777 06D8  
                     l1793 068E                       l1785 06EC                       l1881 0494  
                     l1873 0474                       l1865 0461                       l1857 0459  
                     l1849 0447                       l1961 026F                       l1953 024D  
                     l1945 0229                       l1937 0187                       l1929 00DC  
                     l1779 06DB                       l1795 0693                       l1787 06F2  
                     l1891 04BE                       l1883 049A                       l1875 047A  
                     l1867 0462                       l1859 045A                       l1971 02A1  
                     l1963 0277                       l1955 0257                       l1947 022F  
                     l1939 019A                       l1797 0698                       l1789 06F5  
                     l1893 04CA                       l1885 04A6                       l1877 0482  
                     l1869 0463                       l1981 02D4                       l1973 02AA  
                     l1965 0280                       l1957 0261                       l1949 0239  
                     l1799 069F                       l1887 04AC                       l1879 0488  
                     l1895 0637                       l1991 030A                       l1983 02E0  
                     l1975 02B6                       l1967 028C                       l1959 026B  
                     l1889 04B8                       l1897 063B                       l1993 0313  
                     l1985 02E9                       l1977 02BF                       l1969 0295  
                     l1899 063F                       l1995 031F                       l1987 02F5  
                     l1979 02CB                       l1989 02FE                       _ADIF 0066  
                     ?_isr 0070                       STR_1 071E                       STR_2 0719  
                     STR_3 0721                       STR_4 0719                       STR_5 0724  
                     STR_6 0719                       u1100 06A5                       u1101 06A4  
                     u1110 068A                       u1111 0689                       u1120 063F  
                     u1200 024D                       u1121 063E                       u1201 024C  
                     u1210 0257                       u1211 0256                       u1220 0261  
                     u1221 0260                       u1150 065B                       u1230 026B  
                     u1151 065A                       u1135 0648                       u1231 026A  
                     u1160 002C                       u1145 064F                       u1161 002B  
                     u1090 0693                       u1170 022F                       u1091 0692  
                     u1171 022E                       u1180 0239                       u1181 0238  
                     u1190 0243                       u1247 06F7                       u1191 0242  
                     u1257 0540                       u1267 0551                       u1277 0561  
                     u1287 056F                       u1297 06DF                       _TMR0 0001  
                     _TXIE 0464                       _TXIF 0064          ?_Lcd_Write_String 0070  
                     _main 001F                       _ughh 0045                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 06E8  
        ___bmul@multiplier 0076                      ??_isr 0070                initADC@IRCF 0075  
                    ?_main 0070            __end_of___awdiv 053A                      _ANSEL 0188  
          ___awdiv@divisor 0022                      _CONTX 0044            __end_of___lwdiv 0637  
                    i1l203 0395                      i1l224 0417                      i1l218 0414  
          ___awdiv@counter 0026                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    u81_20 0330                      u81_21 032F    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      u90_20 0399                      u82_20 033D  
                    u90_21 0398                      u82_21 033C                      u91_20 039E  
                    u83_20 0342                      u91_21 039D                      u83_21 0341  
                    u92_20 03A8                      u84_20 0356                      u92_21 03A7  
                    u84_21 0355                      u93_20 03B5                      u85_20 035D  
                    u93_21 03B4                      u85_21 035C                      u94_20 03C2  
                    u86_20 0364                      u94_21 03C1                      u86_21 0363  
                    u95_20 03CF                      u87_20 0373                      u95_21 03CE  
                    u87_21 0372                      u96_20 03DC                      u88_20 037C  
                    u96_21 03DB                      u88_21 037B                      u97_20 03E9  
                    u89_20 038B                      u97_21 03E8                      u89_21 038A  
                    _TXREG 0019                      u98_20 03F6                      u98_21 03F5  
                    u99_20 0403                      u99_21 0402                      _Setup 041E  
          __end_of_initADC 05F1                      _cont1 0047                      _cont2 0046  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0597           __end_of_Lcd_Port 0735            __initialization 000F  
             __end_of_main 032C                     ??_main 002A                     ?_Setup 0070  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
         ___awdiv@dividend 0024                     u100_20 0410                     u100_21 040F  
                   i1l1601 0357                     i1l1611 0376                     i1l1603 035D  
                   i1l1621 0399                     i1l1613 037C                     i1l1605 035E  
                   i1l1631 03AF                     i1l1623 039E                     i1l1615 038B  
                   i1l1607 0364                     i1l1641 03CF                     i1l1633 03B5  
                   i1l1625 03A0                     i1l1609 0373                     i1l1617 0390  
                   i1l1651 03F0                     i1l1643 03D6                     i1l1635 03BC  
                   i1l1627 03A3                     i1l1619 0395                     i1l1571 032C  
                   i1l1661 0410                     i1l1653 03F6                     i1l1645 03DC  
                   i1l1637 03C2                     i1l1629 03A8                     i1l1581 0342  
                   i1l1573 0330                     i1l1663 0412                     i1l1655 03FD  
                   i1l1647 03E3                     i1l1639 03C9                     i1l1591 034E  
                   i1l1583 0346                     i1l1575 0336                     i1l1657 0403  
                   i1l1649 03E9                     i1l1665 0414                     i1l1593 0350  
                   i1l1585 0347                     i1l1577 0337                     i1l1659 040A  
                   i1l1595 0351                     i1l1587 0349                     i1l1579 033D  
                   i1l1589 034D                     i1l1597 0352                     i1l1599 0356  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   ___bmul 06FE                     ___wmul 0637                  ??___awdiv 0077  
                ??___lwdiv 0077           ___awdiv@quotient 0028                  ??_initADC 0073  
                   saved_w 007E            Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077  
  __end_of__initialization 001B        ___bmul@multiplicand 0073             __pcstackCOMMON 0070  
            __end_of_Setup 04D1             _Lcd_Set_Cursor 068B             _OPTION_REGbits 0081  
                  ??_Setup 0023                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 0036         __size_of_initUSART 001D                 __pmaintext 001F  
                  ?___bmul 0073                    ?___wmul 0073                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 06B1                 ??_Lcd_Init 0020  
               ??_Lcd_Port 0073                 __stringtab 0713                    _RC_temp 0079  
           _Lcd_Write_Char 06E8                    _Lcd_Cmd 06CE            __size_of___bmul 0015  
                  ___awdiv 04D1            __size_of___wmul 002B                    ___lwdiv 05F1  
                  _bandera 007A                  _ANSELbits 0188            ?_Lcd_Set_Cursor 0077  
        __end_of_initUSART 06CE                    __ptext1 0637                    __ptext2 05F1  
                  __ptext3 06FE                    __ptext4 04D1                    __ptext5 041E  
                  __ptext6 06B1                    __ptext7 0597                    __ptext8 0662  
                  __ptext9 06E8                    _initADC 0597               __size_of_isr 00F2  
                  clrloop0 0728     __end_of_Lcd_Write_Char 06FE       end_of_initialization 001B  
                _RCSTAbits 0018                  Lcd_Port@a 0073                  _TRISAbits 0085  
                _TRISCbits 0087                  _TRISEbits 0089            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0022          Lcd_Write_String@i 0020                  _TXSTAbits 0098  
           __end_of___bmul 0713             __end_of___wmul 0662           _Lcd_Write_String 0662  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_isr 041E  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0006                   ??___bmul 0074  
                 ??___wmul 0077            Lcd_Write_Char@a 0075                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0020                  _banderaTX 0043  
                 ?_Lcd_Cmd 0070                  _main$1182 0034                  _main$1183 0032  
         ___lwdiv@dividend 0024           ??_Lcd_Set_Cursor 0020                   ?___awdiv 0022  
                 ?___lwdiv 0022                  __pstrings 0713                   ?_initADC 0070  
                _initUSART 06B1             __size_of_Setup 00B3           ___lwdiv@quotient 0026  
        interrupt_function 0004             ___wmul@product 0020                  clear_ram0 0727  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
               _ADCON0bits 001F                __stringbase 0718          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0074                 ?_initUSART 0070                   _Lcd_Init 053A  
                 _Lcd_Port 072F   __end_of_Lcd_Write_String 068B           __size_of_Lcd_Cmd 001A  
         __size_of___awdiv 0069           __size_of___lwdiv 0046         __end_of__stringtab 0719  
                 _bandera1 0078           __size_of_initADC 005A            ___lwdiv@divisor 0022  
          ___lwdiv@counter 0028                   __ptext10 068B                   __ptext11 053A  
                 __ptext12 06CE                   __ptext13 072F                   __ptext14 032C  
                 _contador 0036              __size_of_main 030D               _var_contador 0048  
               _INTCONbits 000B                ??_initUSART 0073                   intlevel1 0000  
                stringcode 0713         Lcd_Set_Cursor@temp 0022                   stringdir 0713  
                 stringtab 0713  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 18:01:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  008F                     	;# 
   491  0090                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  009F                     	;# 
   509  0105                     	;# 
   510  0107                     	;# 
   511  0108                     	;# 
   512  0109                     	;# 
   513  010C                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  010F                     	;# 
   518  0185                     	;# 
   519  0187                     	;# 
   520  0188                     	;# 
   521  0189                     	;# 
   522  018C                     	;# 
   523  018D                     	;# 
   524  0018                     _RCSTAbits	set	24
   525  001F                     _ADCON0	set	31
   526  0008                     _PORTD	set	8
   527  0049                     _RE1	set	73
   528  0048                     _RE0	set	72
   529  008F                     _OSCCONbits	set	143
   530  009A                     _SPBRGH	set	154
   531  0099                     _SPBRG	set	153
   532  0098                     _TXSTAbits	set	152
   533  0089                     _TRISEbits	set	137
   534  0085                     _TRISAbits	set	133
   535  008C                     _PIE1bits	set	140
   536  009F                     _ADCON1	set	159
   537  0089                     _TRISE	set	137
   538  0088                     _TRISD	set	136
   539  0187                     _BAUDCTLbits	set	391
   540  0188                     _ANSELbits	set	392
   541                           
   542                           	psect	strings
   543  0003                     __pstrings:
   544  0003                     stringtab:
   545  0003                     __stringtab:
   546  0003                     stringcode:	
   547                           ;	String table - string pointers are 1 byte each
   548                           
   549  0003                     stringdir:
   550  0003  3000               	movlw	high stringdir
   551  0004  008A               	movwf	10
   552  0005  0804               	movf	4,w
   553  0006  0A84               	incf	4,f
   554  0007  0782               	addwf	2,f
   555  0008                     __stringbase:
   556  0008  3400               	retlw	0
   557  0009                     __end_of__stringtab:
   558  0009                     STR_5:
   559  0009  3477               	retlw	119	;'w'
   560  000A  3477               	retlw	119	;'w'
   561  000B  3477               	retlw	119	;'w'
   562  000C  342E               	retlw	46	;'.'
   563  000D  3465               	retlw	101	;'e'
   564  000E  346C               	retlw	108	;'l'
   565  000F  3465               	retlw	101	;'e'
   566  0010  3463               	retlw	99	;'c'
   567  0011  3474               	retlw	116	;'t'
   568  0012  3472               	retlw	114	;'r'
   569  0013  346F               	retlw	111	;'o'
   570  0014  3453               	retlw	83	;'S'
   571  0015  346F               	retlw	111	;'o'
   572  0016  346D               	retlw	109	;'m'
   573  0017  3465               	retlw	101	;'e'
   574  0018  342E               	retlw	46	;'.'
   575  0019  3463               	retlw	99	;'c'
   576  001A  346F               	retlw	111	;'o'
   577  001B  346D               	retlw	109	;'m'
   578  001C  3400               	retlw	0
   579  001D                     STR_1:
   580  001D  344C               	retlw	76	;'L'
   581  001E  3443               	retlw	67	;'C'
   582  001F  3444               	retlw	68	;'D'
   583  0020  3420               	retlw	32	;' '
   584  0021  344C               	retlw	76	;'L'
   585  0022  3469               	retlw	105	;'i'
   586  0023  3462               	retlw	98	;'b'
   587  0024  3472               	retlw	114	;'r'
   588  0025  3461               	retlw	97	;'a'
   589  0026  3472               	retlw	114	;'r'
   590  0027  3479               	retlw	121	;'y'
   591  0028  3420               	retlw	32	;' '
   592  0029  3466               	retlw	102	;'f'
   593  002A  346F               	retlw	111	;'o'
   594  002B  3472               	retlw	114	;'r'
   595  002C  3400               	retlw	0
   596  002D                     STR_3:
   597  002D  3444               	retlw	68	;'D'
   598  002E  3465               	retlw	101	;'e'
   599  002F  3476               	retlw	118	;'v'
   600  0030  3465               	retlw	101	;'e'
   601  0031  346C               	retlw	108	;'l'
   602  0032  346F               	retlw	111	;'o'
   603  0033  3470               	retlw	112	;'p'
   604  0034  3465               	retlw	101	;'e'
   605  0035  3464               	retlw	100	;'d'
   606  0036  3420               	retlw	32	;' '
   607  0037  3442               	retlw	66	;'B'
   608  0038  3479               	retlw	121	;'y'
   609  0039  3400               	retlw	0
   610  003A                     STR_4:
   611  003A  3465               	retlw	101	;'e'
   612  003B  346C               	retlw	108	;'l'
   613  003C  3465               	retlw	101	;'e'
   614  003D  3463               	retlw	99	;'c'
   615  003E  3474               	retlw	116	;'t'
   616  003F  3472               	retlw	114	;'r'
   617  0040  346F               	retlw	111	;'o'
   618  0041  3453               	retlw	83	;'S'
   619  0042  346F               	retlw	111	;'o'
   620  0043  346D               	retlw	109	;'m'
   621  0044  3465               	retlw	101	;'e'
   622  0045  3400               	retlw	0
   623  0046                     STR_2:
   624  0046  344D               	retlw	77	;'M'
   625  0047  3450               	retlw	80	;'P'
   626  0048  344C               	retlw	76	;'L'
   627  0049  3441               	retlw	65	;'A'
   628  004A  3442               	retlw	66	;'B'
   629  004B  3420               	retlw	32	;' '
   630  004C  3458               	retlw	88	;'X'
   631  004D  3443               	retlw	67	;'C'
   632  004E  3438               	retlw	56	;'8'
   633  004F  3400               	retlw	0
   634                           
   635                           	psect	cinit
   636  07FA                     start_initialization:	
   637                           ; #config settings
   638                           
   639  07FA                     __initialization:
   640                           
   641                           ; Clear objects allocated to COMMON
   642  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   643  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   644  07FC                     end_of_initialization:	
   645                           ;End of C runtime variable initialization code
   646                           
   647  07FC                     __end_of__initialization:
   648  07FC  0183               	clrf	3
   649  07FD  120A  118A  2F16   	ljmp	_main	;jump to C main() function
   650                           
   651                           	psect	bssCOMMON
   652  007B                     __pbssCOMMON:
   653  007B                     _a:
   654  007B                     	ds	2
   655                           
   656                           	psect	cstackCOMMON
   657  0070                     __pcstackCOMMON:
   658  0070                     ?_Setup:
   659  0070                     ?_Lcd_Clear:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_Lcd_Write_String:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_Lcd_Shift_Left:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_Lcd_Shift_Right:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_Lcd_Write_Char:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_Lcd_Init:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_main:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_Lcd_Port:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ??_Lcd_Port:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_Lcd_Cmd:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     Lcd_Port@a:	
   690                           ; 1 bytes @ 0x0
   691                           
   692                           
   693                           ; 1 bytes @ 0x0
   694  0070                     	ds	1
   695  0071                     ??_Lcd_Write_Char:
   696  0071                     ??_Lcd_Cmd:	
   697                           ; 1 bytes @ 0x1
   698                           
   699                           
   700                           ; 1 bytes @ 0x1
   701  0071                     	ds	1
   702  0072                     Lcd_Write_Char@temp:
   703                           
   704                           ; 1 bytes @ 0x2
   705  0072                     	ds	1
   706  0073                     Lcd_Cmd@a:
   707  0073                     Lcd_Write_Char@y:	
   708                           ; 1 bytes @ 0x3
   709                           
   710                           
   711                           ; 1 bytes @ 0x3
   712  0073                     	ds	1
   713  0074                     ??_Lcd_Clear:
   714  0074                     ?_Lcd_Set_Cursor:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     ??_Lcd_Shift_Left:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     ??_Lcd_Shift_Right:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     ??_Lcd_Init:	
   724                           ; 1 bytes @ 0x4
   725                           
   726  0074                     Lcd_Set_Cursor@b:	
   727                           ; 1 bytes @ 0x4
   728                           
   729  0074                     Lcd_Write_Char@a:	
   730                           ; 1 bytes @ 0x4
   731                           
   732                           
   733                           ; 1 bytes @ 0x4
   734  0074                     	ds	1
   735  0075                     ??_Lcd_Set_Cursor:
   736  0075                     ??_Lcd_Write_String:	
   737                           ; 1 bytes @ 0x5
   738                           
   739  0075                     Lcd_Write_String@i:	
   740                           ; 1 bytes @ 0x5
   741                           
   742                           
   743                           ; 2 bytes @ 0x5
   744  0075                     	ds	1
   745  0076                     ??_Setup:
   746  0076                     Lcd_Set_Cursor@a:	
   747                           ; 1 bytes @ 0x6
   748                           
   749                           
   750                           ; 1 bytes @ 0x6
   751  0076                     	ds	1
   752  0077                     Lcd_Set_Cursor@temp:
   753  0077                     Lcd_Write_String@a:	
   754                           ; 1 bytes @ 0x7
   755                           
   756                           
   757                           ; 1 bytes @ 0x7
   758  0077                     	ds	1
   759  0078                     ??_main:
   760                           
   761                           ; 1 bytes @ 0x8
   762  0078                     	ds	3
   763                           
   764                           	psect	maintext
   765  0716                     __pmaintext:	
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   768 ;;
   769 ;; *************** function _main *****************
   770 ;; Defined at:
   771 ;;		line 45 in file "lab3.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : B00/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          3       0       0       0       0
   788 ;;      Totals:         3       0       0       0       0
   789 ;;Total ram usage:        3 bytes
   790 ;; Hardware stack levels required when called:    4
   791 ;; This function calls:
   792 ;;		_Lcd_Clear
   793 ;;		_Lcd_Set_Cursor
   794 ;;		_Lcd_Shift_Left
   795 ;;		_Lcd_Shift_Right
   796 ;;		_Lcd_Write_Char
   797 ;;		_Lcd_Write_String
   798 ;;		_Setup
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _main
   806  0716                     _main:
   807  0716                     l929:	
   808                           ;incstack = 0
   809                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   810                           
   811                           
   812                           ;lab3.c: 46:   }
   813  0716  120A  118A  25FE  120A  118A  	fcall	_Setup
   814  071B                     l29:	
   815                           ;lab3.c: 47: }
   816                           
   817                           
   818                           ;lab3.c: 48: ;lab3.c: 49: void Setup(void){
   819  071B  120A  118A  2608  120A  118A  	fcall	_Lcd_Clear
   820                           
   821                           ;lab3.c: 50: 
   822  0720  01F4               	clrf	Lcd_Set_Cursor@b
   823  0721  0AF4               	incf	Lcd_Set_Cursor@b,f
   824  0722  3001               	movlw	1
   825  0723  120A  118A  2649  120A  118A  	fcall	_Lcd_Set_Cursor
   826  0728                     l931:
   827                           
   828                           ;lab3.c: 51: 
   829  0728  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   830  0729  120A  118A  266D  120A  118A  	fcall	_Lcd_Write_String
   831  072E                     l933:
   832                           
   833                           ;lab3.c: 52:   TRISD = 0x00;
   834  072E  01F4               	clrf	Lcd_Set_Cursor@b
   835  072F  0AF4               	incf	Lcd_Set_Cursor@b,f
   836  0730  3002               	movlw	2
   837  0731  120A  118A  2649  120A  118A  	fcall	_Lcd_Set_Cursor
   838                           
   839                           ;lab3.c: 53:   TRISE = 0;
   840  0736  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   841  0737  120A  118A  266D  120A  118A  	fcall	_Lcd_Write_String
   842  073C                     l935:
   843                           
   844                           ;lab3.c: 54:   Lcd_Init();
   845  073C  3015               	movlw	21
   846  073D  00FA               	movwf	??_main+2
   847  073E  304B               	movlw	75
   848  073F  00F9               	movwf	??_main+1
   849  0740  30BE               	movlw	190
   850  0741  00F8               	movwf	??_main
   851  0742                     u127:
   852  0742  0BF8               	decfsz	??_main,f
   853  0743  2F42               	goto	u127
   854  0744  0BF9               	decfsz	??_main+1,f
   855  0745  2F42               	goto	u127
   856  0746  0BFA               	decfsz	??_main+2,f
   857  0747  2F42               	goto	u127
   858  0748  0000               	nop
   859  0749                     l937:
   860                           
   861                           ;lab3.c: 55: }
   862  0749  120A  118A  2608  120A  118A  	fcall	_Lcd_Clear
   863  074E                     l939:
   864  074E  01F4               	clrf	Lcd_Set_Cursor@b
   865  074F  0AF4               	incf	Lcd_Set_Cursor@b,f
   866  0750  3001               	movlw	1
   867  0751  120A  118A  2649  120A  118A  	fcall	_Lcd_Set_Cursor
   868  0756                     l941:
   869  0756  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   870  0757  120A  118A  266D  120A  118A  	fcall	_Lcd_Write_String
   871  075C                     l943:
   872  075C  01F4               	clrf	Lcd_Set_Cursor@b
   873  075D  0AF4               	incf	Lcd_Set_Cursor@b,f
   874  075E  3002               	movlw	2
   875  075F  120A  118A  2649  120A  118A  	fcall	_Lcd_Set_Cursor
   876  0764                     l945:
   877  0764  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   878  0765  120A  118A  266D  120A  118A  	fcall	_Lcd_Write_String
   879  076A                     l947:
   880  076A  3015               	movlw	21
   881  076B  00FA               	movwf	??_main+2
   882  076C  304B               	movlw	75
   883  076D  00F9               	movwf	??_main+1
   884  076E  30BE               	movlw	190
   885  076F  00F8               	movwf	??_main
   886  0770                     u137:
   887  0770  0BF8               	decfsz	??_main,f
   888  0771  2F70               	goto	u137
   889  0772  0BF9               	decfsz	??_main+1,f
   890  0773  2F70               	goto	u137
   891  0774  0BFA               	decfsz	??_main+2,f
   892  0775  2F70               	goto	u137
   893  0776  0000               	nop
   894  0777                     l949:
   895  0777  120A  118A  2608  120A  118A  	fcall	_Lcd_Clear
   896  077C                     l951:
   897  077C  01F4               	clrf	Lcd_Set_Cursor@b
   898  077D  0AF4               	incf	Lcd_Set_Cursor@b,f
   899  077E  3001               	movlw	1
   900  077F  120A  118A  2649  120A  118A  	fcall	_Lcd_Set_Cursor
   901  0784                     l953:
   902  0784  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   903  0785  120A  118A  266D  120A  118A  	fcall	_Lcd_Write_String
   904  078A                     l955:
   905  078A  01FB               	clrf	_a
   906  078B  01FC               	clrf	_a+1
   907  078C                     l961:
   908  078C  3004               	movlw	4
   909  078D  00FA               	movwf	??_main+2
   910  078E  300C               	movlw	12
   911  078F  00F9               	movwf	??_main+1
   912  0790  3033               	movlw	51
   913  0791  00F8               	movwf	??_main
   914  0792                     u147:
   915  0792  0BF8               	decfsz	??_main,f
   916  0793  2F92               	goto	u147
   917  0794  0BF9               	decfsz	??_main+1,f
   918  0795  2F92               	goto	u147
   919  0796  0BFA               	decfsz	??_main+2,f
   920  0797  2F92               	goto	u147
   921  0798  2F99               	nop2
   922  0799                     l963:
   923  0799  120A  118A  2615  120A  118A  	fcall	_Lcd_Shift_Left
   924  079E                     l965:
   925  079E  3001               	movlw	1
   926  079F  07FB               	addwf	_a,f
   927  07A0  1803               	skipnc
   928  07A1  0AFC               	incf	_a+1,f
   929  07A2  3000               	movlw	0
   930  07A3  07FC               	addwf	_a+1,f
   931  07A4                     l967:
   932  07A4  3000               	movlw	0
   933  07A5  027C               	subwf	_a+1,w
   934  07A6  300F               	movlw	15
   935  07A7  1903               	skipnz
   936  07A8  027B               	subwf	_a,w
   937  07A9  1C03               	skipc
   938  07AA  2FAC               	goto	u101
   939  07AB  2FAD               	goto	u100
   940  07AC                     u101:
   941  07AC  2F8C               	goto	l961
   942  07AD                     u100:
   943  07AD                     l969:
   944  07AD  01FB               	clrf	_a
   945  07AE  01FC               	clrf	_a+1
   946  07AF                     l975:
   947  07AF  3004               	movlw	4
   948  07B0  00FA               	movwf	??_main+2
   949  07B1  300C               	movlw	12
   950  07B2  00F9               	movwf	??_main+1
   951  07B3  3033               	movlw	51
   952  07B4  00F8               	movwf	??_main
   953  07B5                     u157:
   954  07B5  0BF8               	decfsz	??_main,f
   955  07B6  2FB5               	goto	u157
   956  07B7  0BF9               	decfsz	??_main+1,f
   957  07B8  2FB5               	goto	u157
   958  07B9  0BFA               	decfsz	??_main+2,f
   959  07BA  2FB5               	goto	u157
   960  07BB  2FBC               	nop2
   961  07BC                     l977:
   962  07BC  120A  118A  2622  120A  118A  	fcall	_Lcd_Shift_Right
   963  07C1                     l979:
   964  07C1  3001               	movlw	1
   965  07C2  07FB               	addwf	_a,f
   966  07C3  1803               	skipnc
   967  07C4  0AFC               	incf	_a+1,f
   968  07C5  3000               	movlw	0
   969  07C6  07FC               	addwf	_a+1,f
   970  07C7                     l981:
   971  07C7  3000               	movlw	0
   972  07C8  027C               	subwf	_a+1,w
   973  07C9  300F               	movlw	15
   974  07CA  1903               	skipnz
   975  07CB  027B               	subwf	_a,w
   976  07CC  1C03               	skipc
   977  07CD  2FCF               	goto	u111
   978  07CE  2FD0               	goto	u110
   979  07CF                     u111:
   980  07CF  2FAF               	goto	l975
   981  07D0                     u110:
   982  07D0                     l983:
   983  07D0  120A  118A  2608  120A  118A  	fcall	_Lcd_Clear
   984  07D5  01F4               	clrf	Lcd_Set_Cursor@b
   985  07D6  0AF4               	incf	Lcd_Set_Cursor@b,f
   986  07D7  3002               	movlw	2
   987  07D8  120A  118A  2649  120A  118A  	fcall	_Lcd_Set_Cursor
   988  07DD  3065               	movlw	101
   989  07DE  120A  118A  2692  120A  118A  	fcall	_Lcd_Write_Char
   990  07E3  3053               	movlw	83
   991  07E4  120A  118A  2692  120A  118A  	fcall	_Lcd_Write_Char
   992  07E9                     l985:
   993  07E9  3015               	movlw	21
   994  07EA  00FA               	movwf	??_main+2
   995  07EB  304B               	movlw	75
   996  07EC  00F9               	movwf	??_main+1
   997  07ED  30BE               	movlw	190
   998  07EE  00F8               	movwf	??_main
   999  07EF                     u167:
  1000  07EF  0BF8               	decfsz	??_main,f
  1001  07F0  2FEF               	goto	u167
  1002  07F1  0BF9               	decfsz	??_main+1,f
  1003  07F2  2FEF               	goto	u167
  1004  07F3  0BFA               	decfsz	??_main+2,f
  1005  07F4  2FEF               	goto	u167
  1006  07F5  0000               	nop
  1007  07F6  2F1B               	goto	l29
  1008  07F7  120A  118A  2800   	ljmp	start
  1009  07FA                     __end_of_main:
  1010                           
  1011                           	psect	text1
  1012  05FE                     __ptext1:	
  1013 ;; *************** function _Setup *****************
  1014 ;; Defined at:
  1015 ;;		line 85 in file "lab3.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    3
  1036 ;; This function calls:
  1037 ;;		_Lcd_Init
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _Setup
  1045  05FE                     _Setup:
  1046  05FE                     l769:	
  1047                           ;incstack = 0
  1048                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  1049                           
  1050  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  1051  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  1052  0600  0188               	clrf	8	;volatile
  1053  0601  0189               	clrf	9	;volatile
  1054  0602                     l771:
  1055  0602  120A  118A  26CB  120A  118A  	fcall	_Lcd_Init
  1056  0607                     l39:
  1057  0607  0008               	return
  1058  0608                     __end_of_Setup:
  1059                           
  1060                           	psect	text2
  1061  06CB                     __ptext2:	
  1062 ;; *************** function _Lcd_Init *****************
  1063 ;; Defined at:
  1064 ;;		line 46 in file "lcd.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, pclath, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          2       0       0       0       0
  1081 ;;      Totals:         2       0       0       0       0
  1082 ;;Total ram usage:        2 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    2
  1085 ;; This function calls:
  1086 ;;		_Lcd_Cmd
  1087 ;;		_Lcd_Port
  1088 ;; This function is called by:
  1089 ;;		_Setup
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _Lcd_Init
  1095  06CB                     _Lcd_Init:
  1096  06CB                     l759:	
  1097                           ;incstack = 0
  1098                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1099                           
  1100                           
  1101                           ;lcd.c: 48:   Lcd_Port(0x00);
  1102  06CB  3000               	movlw	0
  1103  06CC  120A  118A  25F8  120A  118A  	fcall	_Lcd_Port
  1104  06D1                     l761:
  1105                           
  1106                           ;lcd.c: 49:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1107  06D1  3034               	movlw	52
  1108  06D2  00F5               	movwf	??_Lcd_Init+1
  1109  06D3  30F1               	movlw	241
  1110  06D4  00F4               	movwf	??_Lcd_Init
  1111  06D5                     u177:
  1112  06D5  0BF4               	decfsz	??_Lcd_Init,f
  1113  06D6  2ED5               	goto	u177
  1114  06D7  0BF5               	decfsz	??_Lcd_Init+1,f
  1115  06D8  2ED5               	goto	u177
  1116  06D9  2EDA               	nop2
  1117  06DA                     l763:
  1118                           
  1119                           ;lcd.c: 50:   Lcd_Cmd(0x030);
  1120  06DA  3030               	movlw	48
  1121  06DB  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1122                           
  1123                           ;lcd.c: 51:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1124  06E0  300D               	movlw	13
  1125  06E1  00F5               	movwf	??_Lcd_Init+1
  1126  06E2  30FB               	movlw	251
  1127  06E3  00F4               	movwf	??_Lcd_Init
  1128  06E4                     u187:
  1129  06E4  0BF4               	decfsz	??_Lcd_Init,f
  1130  06E5  2EE4               	goto	u187
  1131  06E6  0BF5               	decfsz	??_Lcd_Init+1,f
  1132  06E7  2EE4               	goto	u187
  1133  06E8  2EE9               	nop2
  1134  06E9                     l765:
  1135                           
  1136                           ;lcd.c: 52:   Lcd_Cmd(0x030);
  1137  06E9  3030               	movlw	48
  1138  06EA  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1139  06EF                     l767:
  1140                           
  1141                           ;lcd.c: 53:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1142  06EF  301D               	movlw	29
  1143  06F0  00F5               	movwf	??_Lcd_Init+1
  1144  06F1  3091               	movlw	145
  1145  06F2  00F4               	movwf	??_Lcd_Init
  1146  06F3                     u197:
  1147  06F3  0BF4               	decfsz	??_Lcd_Init,f
  1148  06F4  2EF3               	goto	u197
  1149  06F5  0BF5               	decfsz	??_Lcd_Init+1,f
  1150  06F6  2EF3               	goto	u197
  1151                           
  1152                           ;lcd.c: 54:   Lcd_Cmd(0x030);
  1153  06F7  3030               	movlw	48
  1154  06F8  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1155                           
  1156                           ;lcd.c: 57:   Lcd_Cmd(0x038);
  1157  06FD  3038               	movlw	56
  1158  06FE  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1159                           
  1160                           ;lcd.c: 58:   Lcd_Cmd(0x008);
  1161  0703  3008               	movlw	8
  1162  0704  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1163                           
  1164                           ;lcd.c: 59:   Lcd_Cmd(0x001);
  1165  0709  3001               	movlw	1
  1166  070A  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1167                           
  1168                           ;lcd.c: 60:   Lcd_Cmd(0x006);
  1169  070F  3006               	movlw	6
  1170  0710  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1171  0715                     l65:
  1172  0715  0008               	return
  1173  0716                     __end_of_Lcd_Init:
  1174                           
  1175                           	psect	text3
  1176  066D                     __ptext3:	
  1177 ;; *************** function _Lcd_Write_String *****************
  1178 ;; Defined at:
  1179 ;;		line 79 in file "lcd.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  a               1    wreg     PTR unsigned char 
  1182 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
  1183 ;;		 -> STR_1(16), 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  a               1    7[COMMON] PTR unsigned char 
  1186 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
  1187 ;;		 -> STR_1(16), 
  1188 ;;  i               2    5[COMMON] int 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         3       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         3       0       0       0       0
  1202 ;;Total ram usage:        3 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    2
  1205 ;; This function calls:
  1206 ;;		_Lcd_Write_Char
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _Lcd_Write_String
  1214  066D                     _Lcd_Write_String:
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1218                           ;Lcd_Write_String@a stored from wreg
  1219  066D  00F7               	movwf	Lcd_Write_String@a
  1220  066E                     l921:
  1221                           
  1222                           ;lcd.c: 79: void Lcd_Write_String(char *a);lcd.c: 80: {;lcd.c: 81:  int i;;lcd.c: 82:  f
      +                          or(i=0;a[i]!='\0';i++)
  1223  066E  01F5               	clrf	Lcd_Write_String@i
  1224  066F  01F6               	clrf	Lcd_Write_String@i+1
  1225  0670  2E84               	goto	l927
  1226  0671                     l923:
  1227                           
  1228                           ;lcd.c: 83:     Lcd_Write_Char(a[i]);
  1229  0671  0875               	movf	Lcd_Write_String@i,w
  1230  0672  0777               	addwf	Lcd_Write_String@a,w
  1231  0673  0084               	movwf	4
  1232  0674  120A  118A  2003  120A  118A  	fcall	stringdir
  1233  0679  120A  118A  2692  120A  118A  	fcall	_Lcd_Write_Char
  1234  067E                     l925:
  1235  067E  3001               	movlw	1
  1236  067F  07F5               	addwf	Lcd_Write_String@i,f
  1237  0680  1803               	skipnc
  1238  0681  0AF6               	incf	Lcd_Write_String@i+1,f
  1239  0682  3000               	movlw	0
  1240  0683  07F6               	addwf	Lcd_Write_String@i+1,f
  1241  0684                     l927:
  1242  0684  0875               	movf	Lcd_Write_String@i,w
  1243  0685  0777               	addwf	Lcd_Write_String@a,w
  1244  0686  0084               	movwf	4
  1245  0687  120A  118A  2003  120A  118A  	fcall	stringdir
  1246  068C  3A00               	xorlw	0
  1247  068D  1D03               	skipz
  1248  068E  2E90               	goto	u91
  1249  068F  2E91               	goto	u90
  1250  0690                     u91:
  1251  0690  2E71               	goto	l923
  1252  0691                     u90:
  1253  0691                     l74:
  1254  0691  0008               	return
  1255  0692                     __end_of_Lcd_Write_String:
  1256                           
  1257                           	psect	text4
  1258  0692                     __ptext4:	
  1259 ;; *************** function _Lcd_Write_Char *****************
  1260 ;; Defined at:
  1261 ;;		line 63 in file "lcd.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  a               1    wreg     unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  a               1    4[COMMON] unsigned char 
  1266 ;;  y               1    3[COMMON] unsigned char 
  1267 ;;  temp            1    2[COMMON] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         3       0       0       0       0
  1279 ;;      Temps:          1       0       0       0       0
  1280 ;;      Totals:         4       0       0       0       0
  1281 ;;Total ram usage:        4 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    1
  1284 ;; This function calls:
  1285 ;;		_Lcd_Port
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;;		_Lcd_Write_String
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _Lcd_Write_Char
  1294  0692                     _Lcd_Write_Char:
  1295                           
  1296                           ;incstack = 0
  1297                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1298                           ;Lcd_Write_Char@a stored from wreg
  1299  0692  00F4               	movwf	Lcd_Write_Char@a
  1300  0693                     l739:
  1301                           
  1302                           ;lcd.c: 63: void Lcd_Write_Char(char a);lcd.c: 64: {;lcd.c: 65:    char temp,y;;lcd.c: 6
      +                          6:    temp = a&0x0F;
  1303  0693  0874               	movf	Lcd_Write_Char@a,w
  1304  0694  390F               	andlw	15
  1305  0695  00F1               	movwf	??_Lcd_Write_Char
  1306  0696  0871               	movf	??_Lcd_Write_Char,w
  1307  0697  00F2               	movwf	Lcd_Write_Char@temp
  1308                           
  1309                           ;lcd.c: 67:    y = a&0xF0;
  1310  0698  0874               	movf	Lcd_Write_Char@a,w
  1311  0699  39F0               	andlw	240
  1312  069A  00F1               	movwf	??_Lcd_Write_Char
  1313  069B  0871               	movf	??_Lcd_Write_Char,w
  1314  069C  00F3               	movwf	Lcd_Write_Char@y
  1315  069D                     l741:
  1316                           
  1317                           ;lcd.c: 68:             RE0 = 1;
  1318  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1319  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1320  069F  1409               	bsf	9,0	;volatile
  1321  06A0                     l743:
  1322                           
  1323                           ;lcd.c: 69:    Lcd_Port(y>>4);
  1324  06A0  0873               	movf	Lcd_Write_Char@y,w
  1325  06A1  00F1               	movwf	??_Lcd_Write_Char
  1326  06A2  3004               	movlw	4
  1327  06A3                     u15:
  1328  06A3  1003               	clrc
  1329  06A4  0CF1               	rrf	??_Lcd_Write_Char,f
  1330  06A5  3EFF               	addlw	-1
  1331  06A6  1D03               	skipz
  1332  06A7  2EA3               	goto	u15
  1333  06A8  0871               	movf	??_Lcd_Write_Char,w
  1334  06A9  120A  118A  25F8  120A  118A  	fcall	_Lcd_Port
  1335  06AE                     l745:
  1336                           
  1337                           ;lcd.c: 70:    RE1 = 1;
  1338  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1339  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1340  06B0  1489               	bsf	9,1	;volatile
  1341  06B1                     l747:
  1342                           
  1343                           ;lcd.c: 71:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1344  06B1  301A               	movlw	26
  1345  06B2  00F1               	movwf	??_Lcd_Write_Char
  1346  06B3                     u207:
  1347  06B3  0BF1               	decfsz	??_Lcd_Write_Char,f
  1348  06B4  2EB3               	goto	u207
  1349  06B5  0000               	nop
  1350  06B6                     l749:
  1351                           
  1352                           ;lcd.c: 72:    RE1 = 0;
  1353  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1354  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1355  06B8  1089               	bcf	9,1	;volatile
  1356  06B9                     l751:
  1357                           
  1358                           ;lcd.c: 73:    Lcd_Port(temp);
  1359  06B9  0872               	movf	Lcd_Write_Char@temp,w
  1360  06BA  120A  118A  25F8  120A  118A  	fcall	_Lcd_Port
  1361  06BF                     l753:
  1362                           
  1363                           ;lcd.c: 74:    RE1 = 1;
  1364  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1365  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1366  06C1  1489               	bsf	9,1	;volatile
  1367  06C2                     l755:
  1368                           
  1369                           ;lcd.c: 75:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1370  06C2  301A               	movlw	26
  1371  06C3  00F1               	movwf	??_Lcd_Write_Char
  1372  06C4                     u217:
  1373  06C4  0BF1               	decfsz	??_Lcd_Write_Char,f
  1374  06C5  2EC4               	goto	u217
  1375  06C6  0000               	nop
  1376  06C7                     l757:
  1377                           
  1378                           ;lcd.c: 76:    RE1 = 0;
  1379  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1380  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1381  06C9  1089               	bcf	9,1	;volatile
  1382  06CA                     l68:
  1383  06CA  0008               	return
  1384  06CB                     __end_of_Lcd_Write_Char:
  1385                           
  1386                           	psect	text5
  1387  0622                     __ptext5:	
  1388 ;; *************** function _Lcd_Shift_Right *****************
  1389 ;; Defined at:
  1390 ;;		line 86 in file "lcd.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    2
  1411 ;; This function calls:
  1412 ;;		_Lcd_Cmd
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           
  1419                           ;psect for function _Lcd_Shift_Right
  1420  0622                     _Lcd_Shift_Right:
  1421  0622                     l797:	
  1422                           ;incstack = 0
  1423                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1424                           
  1425                           
  1426                           ;lcd.c: 88:  Lcd_Cmd(0x01);
  1427  0622  3001               	movlw	1
  1428  0623  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1429                           
  1430                           ;lcd.c: 89:  Lcd_Cmd(0x0C);
  1431  0628  300C               	movlw	12
  1432  0629  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1433  062E                     l77:
  1434  062E  0008               	return
  1435  062F                     __end_of_Lcd_Shift_Right:
  1436                           
  1437                           	psect	text6
  1438  0615                     __ptext6:	
  1439 ;; *************** function _Lcd_Shift_Left *****************
  1440 ;; Defined at:
  1441 ;;		line 92 in file "lcd.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0
  1458 ;;      Totals:         0       0       0       0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    2
  1462 ;; This function calls:
  1463 ;;		_Lcd_Cmd
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _Lcd_Shift_Left
  1471  0615                     _Lcd_Shift_Left:
  1472  0615                     l795:	
  1473                           ;incstack = 0
  1474                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1475                           
  1476                           
  1477                           ;lcd.c: 94:  Lcd_Cmd(0x01);
  1478  0615  3001               	movlw	1
  1479  0616  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1480                           
  1481                           ;lcd.c: 95:  Lcd_Cmd(0x08);
  1482  061B  3008               	movlw	8
  1483  061C  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1484  0621                     l80:
  1485  0621  0008               	return
  1486  0622                     __end_of_Lcd_Shift_Left:
  1487                           
  1488                           	psect	text7
  1489  0649                     __ptext7:	
  1490 ;; *************** function _Lcd_Set_Cursor *****************
  1491 ;; Defined at:
  1492 ;;		line 31 in file "lcd.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  a               1    wreg     unsigned char 
  1495 ;;  b               1    4[COMMON] unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  a               1    6[COMMON] unsigned char 
  1498 ;;  temp            1    7[COMMON] unsigned char 
  1499 ;;  y               1    0        unsigned char 
  1500 ;;  z               1    0        unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         1       0       0       0       0
  1511 ;;      Locals:         2       0       0       0       0
  1512 ;;      Temps:          1       0       0       0       0
  1513 ;;      Totals:         4       0       0       0       0
  1514 ;;Total ram usage:        4 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    2
  1517 ;; This function calls:
  1518 ;;		_Lcd_Cmd
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _Lcd_Set_Cursor
  1526  0649                     _Lcd_Set_Cursor:
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1530                           ;Lcd_Set_Cursor@a stored from wreg
  1531  0649  00F6               	movwf	Lcd_Set_Cursor@a
  1532  064A                     l909:
  1533                           
  1534                           ;lcd.c: 31: void Lcd_Set_Cursor(char a, char b);lcd.c: 32: {;lcd.c: 33:  char temp,z,y;;
      +                          lcd.c: 34:  if(a == 1)
  1535  064A  0376               	decf	Lcd_Set_Cursor@a,w
  1536  064B  1D03               	btfss	3,2
  1537  064C  2E4E               	goto	u71
  1538  064D  2E4F               	goto	u70
  1539  064E                     u71:
  1540  064E  2E5B               	goto	l915
  1541  064F                     u70:
  1542  064F                     l911:
  1543                           
  1544                           ;lcd.c: 35:  {;lcd.c: 36:    temp = 0x80 + b - 1;
  1545  064F  0874               	movf	Lcd_Set_Cursor@b,w
  1546  0650  3E7F               	addlw	127
  1547  0651  00F5               	movwf	??_Lcd_Set_Cursor
  1548  0652  0875               	movf	??_Lcd_Set_Cursor,w
  1549  0653  00F7               	movwf	Lcd_Set_Cursor@temp
  1550  0654                     l913:
  1551                           
  1552                           ;lcd.c: 37:   Lcd_Cmd(temp);
  1553  0654  0877               	movf	Lcd_Set_Cursor@temp,w
  1554  0655  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1555                           
  1556                           ;lcd.c: 38:  }
  1557  065A  2E6C               	goto	l62
  1558  065B                     l915:
  1559  065B  3002               	movlw	2
  1560  065C  0676               	xorwf	Lcd_Set_Cursor@a,w
  1561  065D  1D03               	btfss	3,2
  1562  065E  2E60               	goto	u81
  1563  065F  2E61               	goto	u80
  1564  0660                     u81:
  1565  0660  2E6C               	goto	l62
  1566  0661                     u80:
  1567  0661                     l917:
  1568                           
  1569                           ;lcd.c: 40:  {;lcd.c: 41:   temp = 0xC0 + b - 1;
  1570  0661  0874               	movf	Lcd_Set_Cursor@b,w
  1571  0662  3EBF               	addlw	191
  1572  0663  00F5               	movwf	??_Lcd_Set_Cursor
  1573  0664  0875               	movf	??_Lcd_Set_Cursor,w
  1574  0665  00F7               	movwf	Lcd_Set_Cursor@temp
  1575  0666                     l919:
  1576                           
  1577                           ;lcd.c: 42:   Lcd_Cmd(temp);
  1578  0666  0877               	movf	Lcd_Set_Cursor@temp,w
  1579  0667  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1580  066C                     l62:
  1581  066C  0008               	return
  1582  066D                     __end_of_Lcd_Set_Cursor:
  1583                           
  1584                           	psect	text8
  1585  0608                     __ptext8:	
  1586 ;; *************** function _Lcd_Clear *****************
  1587 ;; Defined at:
  1588 ;;		line 25 in file "lcd.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0
  1605 ;;      Totals:         0       0       0       0       0
  1606 ;;Total ram usage:        0 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    2
  1609 ;; This function calls:
  1610 ;;		_Lcd_Cmd
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _Lcd_Clear
  1618  0608                     _Lcd_Clear:
  1619  0608                     l773:	
  1620                           ;incstack = 0
  1621                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1622                           
  1623                           
  1624                           ;lcd.c: 27:  Lcd_Cmd(0);
  1625  0608  3000               	movlw	0
  1626  0609  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1627                           
  1628                           ;lcd.c: 28:  Lcd_Cmd(1);
  1629  060E  3001               	movlw	1
  1630  060F  120A  118A  262F  120A  118A  	fcall	_Lcd_Cmd
  1631  0614                     l56:
  1632  0614  0008               	return
  1633  0615                     __end_of_Lcd_Clear:
  1634                           
  1635                           	psect	text9
  1636  062F                     __ptext9:	
  1637 ;; *************** function _Lcd_Cmd *****************
  1638 ;; Defined at:
  1639 ;;		line 16 in file "lcd.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  a               1    wreg     unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  a               1    3[COMMON] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       0       0       0       0
  1654 ;;      Locals:         1       0       0       0       0
  1655 ;;      Temps:          2       0       0       0       0
  1656 ;;      Totals:         3       0       0       0       0
  1657 ;;Total ram usage:        3 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    1
  1660 ;; This function calls:
  1661 ;;		_Lcd_Port
  1662 ;; This function is called by:
  1663 ;;		_Lcd_Clear
  1664 ;;		_Lcd_Set_Cursor
  1665 ;;		_Lcd_Init
  1666 ;;		_Lcd_Shift_Right
  1667 ;;		_Lcd_Shift_Left
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _Lcd_Cmd
  1673  062F                     _Lcd_Cmd:
  1674                           
  1675                           ;incstack = 0
  1676                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1677                           ;Lcd_Cmd@a stored from wreg
  1678  062F  00F3               	movwf	Lcd_Cmd@a
  1679  0630                     l729:
  1680                           
  1681                           ;lcd.c: 16: void Lcd_Cmd(char a);lcd.c: 17: {;lcd.c: 18:  RE0 = 0;
  1682  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0632  1009               	bcf	9,0	;volatile
  1685  0633                     l731:
  1686                           
  1687                           ;lcd.c: 19:  Lcd_Port(a);
  1688  0633  0873               	movf	Lcd_Cmd@a,w
  1689  0634  120A  118A  25F8  120A  118A  	fcall	_Lcd_Port
  1690  0639                     l733:
  1691                           
  1692                           ;lcd.c: 20:  RE1 = 1;
  1693  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1694  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1695  063B  1489               	bsf	9,1	;volatile
  1696  063C                     l735:
  1697                           
  1698                           ;lcd.c: 21:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1699  063C  300B               	movlw	11
  1700  063D  00F2               	movwf	??_Lcd_Cmd+1
  1701  063E  3062               	movlw	98
  1702  063F  00F1               	movwf	??_Lcd_Cmd
  1703  0640                     u227:
  1704  0640  0BF1               	decfsz	??_Lcd_Cmd,f
  1705  0641  2E40               	goto	u227
  1706  0642  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1707  0643  2E40               	goto	u227
  1708  0644  0000               	nop
  1709  0645                     l737:
  1710                           
  1711                           ;lcd.c: 22:         RE1 = 0;
  1712  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0647  1089               	bcf	9,1	;volatile
  1715  0648                     l53:
  1716  0648  0008               	return
  1717  0649                     __end_of_Lcd_Cmd:
  1718                           
  1719                           	psect	text10
  1720  05F8                     __ptext10:	
  1721 ;; *************** function _Lcd_Port *****************
  1722 ;; Defined at:
  1723 ;;		line 12 in file "lcd.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  a               1    wreg     unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  a               1    0[COMMON] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       0       0       0       0
  1738 ;;      Locals:         1       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0
  1740 ;;      Totals:         1       0       0       0       0
  1741 ;;Total ram usage:        1 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_Lcd_Cmd
  1747 ;;		_Lcd_Init
  1748 ;;		_Lcd_Write_Char
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _Lcd_Port
  1754  05F8                     _Lcd_Port:
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _Lcd_Port: [wreg]
  1758                           ;Lcd_Port@a stored from wreg
  1759  05F8  00F0               	movwf	Lcd_Port@a
  1760  05F9                     l727:
  1761                           
  1762                           ;lcd.c: 12: void Lcd_Port(char a);lcd.c: 13: {;lcd.c: 14:  PORTD = a;
  1763  05F9  0870               	movf	Lcd_Port@a,w
  1764  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1765  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1766  05FC  0088               	movwf	8	;volatile
  1767  05FD                     l50:
  1768  05FD  0008               	return
  1769  05FE                     __end_of_Lcd_Port:
  1770  007E                     btemp	set	126	;btemp
  1771  007E                     wtemp0	set	126
  1772                           
  1773                           	psect	config
  1774                           
  1775                           ;Config register CONFIG1 @ 0x2007
  1776                           ;	Oscillator Selection bits
  1777                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1778                           ;	Watchdog Timer Enable bit
  1779                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1780                           ;	Power-up Timer Enable bit
  1781                           ;	PWRTE = OFF, PWRT disabled
  1782                           ;	RE3/MCLR pin function select bit
  1783                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1784                           ;	Code Protection bit
  1785                           ;	CP = OFF, Program memory code protection is disabled
  1786                           ;	Data Code Protection bit
  1787                           ;	CPD = OFF, Data memory code protection is disabled
  1788                           ;	Brown Out Reset Selection bits
  1789                           ;	BOREN = OFF, BOR disabled
  1790                           ;	Internal External Switchover bit
  1791                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1792                           ;	Fail-Safe Clock Monitor Enabled bit
  1793                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1794                           ;	Low Voltage Programming Enable bit
  1795                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1796                           ;	In-Circuit Debugger Mode bit
  1797                           ;	DEBUG = 0x1, unprogrammed default
  1798  2007                     	org	8199
  1799  2007  20D4               	dw	8404
  1800                           
  1801                           ;Config register CONFIG2 @ 0x2008
  1802                           ;	Brown-out Reset Selection bit
  1803                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1804                           ;	Flash Program Memory Self Write Enable bits
  1805                           ;	WRT = OFF, Write protection off
  1806  2008                     	org	8200
  1807  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _Setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1160
                                              8 COMMON     3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      45
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      45
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     330
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      75
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     620
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      30
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 18:01:10 2021

                        _a 007B                          pc 0002                         l50 05FD  
                       l53 0648                         l29 071B                         l62 066C  
                       l39 0607                         l56 0614                         l80 0621  
                       l65 0715                         l74 0691                         l68 06CA  
                       l77 062E                         u15 06A3                         u70 064F  
                       u71 064E                         u80 0661                         u81 0660  
                       u90 0691                         u91 0690                         fsr 0004  
                      l731 0633                        l733 0639                        l741 069D  
                      l727 05F9                        l735 063C                        l911 064F  
                      l751 06B9                        l743 06A0                        l737 0645  
                      l729 0630                        l913 0654                        l753 06BF  
                      l745 06AE                        l921 066E                        l761 06D1  
                      l915 065B                        l755 06C2                        l747 06B1  
                      l739 0693                        l923 0671                        l763 06DA  
                      l771 0602                        l931 0728                        l773 0608  
                      l917 0661                        l909 064A                        l757 06C7  
                      l749 06B6                        l925 067E                        l765 06E9  
                      l941 0756                        l933 072E                        l919 0666  
                      l927 0684                        l767 06EF                        l759 06CB  
                      l951 077C                        l943 075C                        l935 073C  
                      l769 05FE                        l961 078C                        l953 0784  
                      l945 0764                        l937 0749                        l929 0716  
                      l795 0615                        l963 0799                        l955 078A  
                      l947 076A                        l939 074E                        l797 0622  
                      l981 07C7                        l965 079E                        l949 0777  
                      l983 07D0                        l975 07AF                        l967 07A4  
                      l985 07E9                        l977 07BC                        l969 07AD  
                      l979 07C1                        _RE0 0048                        _RE1 0049  
                      u100 07AD                        u101 07AC                        u110 07D0  
                      u111 07CF                        u207 06B3                        u127 0742  
                      u217 06C4                        u137 0770                        u227 0640  
                      u147 0792                        u157 07B5                        u167 07EF  
                      u177 06D5                        u187 06E4                        u197 06F3  
                      fsr0 0004                       STR_1 001D                       STR_2 0046  
                     STR_3 002D                       STR_4 003A                       STR_5 0009  
        ?_Lcd_Write_String 0070                       _main 0716                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0649  
                    ?_main 0070                      _SPBRG 0099                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISD 0088                      _TRISE 0089  
                    _Setup 05FE    __size_of_Lcd_Shift_Left 000D                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0716  
         __end_of_Lcd_Port 05FE            __initialization 07FA               __end_of_main 07FA  
                   ??_main 0078         __size_of_Lcd_Clear 000D                     ?_Setup 0070  
                   _ADCON0 001F                     _ADCON1 009F                  ??_Lcd_Cmd 0071  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0039   __size_of_Lcd_Shift_Right 000D  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 0615             __pcstackCOMMON 0070              __end_of_Setup 0608  
           _Lcd_Set_Cursor 0649                    ??_Setup 0076             _Lcd_Shift_Left 0615  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pmaintext 0716  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 066D     __end_of_Lcd_Shift_Left 0622  
        ??_Lcd_Shift_Right 0074                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 0692                    _Lcd_Cmd 062F  
                _ANSELbits 0188            ?_Lcd_Set_Cursor 0074                    __ptext1 05FE  
                  __ptext2 06CB                    __ptext3 066D                    __ptext4 0692  
                  __ptext5 0622                    __ptext6 0615                    __ptext7 0649  
                  __ptext8 0608                    __ptext9 062F            ?_Lcd_Shift_Left 0070  
   __end_of_Lcd_Write_Char 06CB       end_of_initialization 07FC                  _RCSTAbits 0018  
                Lcd_Port@a 0070                  _TRISAbits 0085                  _TRISEbits 0089  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _TXSTAbits 0098                  _Lcd_Clear 0608           _Lcd_Write_String 066D  
              _BAUDCTLbits 0187        start_initialization 07FA          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070            _Lcd_Shift_Right 0622  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                __pbssCOMMON 007B  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
         ??_Lcd_Shift_Left 0074                  __pstrings 0003             __size_of_Setup 000A  
  __end_of_Lcd_Shift_Right 062F                   _PIE1bits 008C                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0008           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 06CB                   _Lcd_Port 05F8   __end_of_Lcd_Write_String 0692  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009                   __ptext10 05F8  
            __size_of_main 00E4           ?_Lcd_Shift_Right 0070         Lcd_Write_Char@temp 0072  
                stringcode 0003                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0077  
                 stringdir 0003                   stringtab 0003  

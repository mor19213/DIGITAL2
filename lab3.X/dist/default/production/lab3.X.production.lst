

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 22:45:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0001                     _TMR0	set	1
   455  0006                     _PORTB	set	6
   456  0005                     _PORTA	set	5
   457  0019                     _TXREG	set	25
   458  001A                     _RCREG	set	26
   459  000C                     _PIR1bits	set	12
   460  001F                     _ADCON0bits	set	31
   461  001E                     _ADRESH	set	30
   462  000B                     _INTCONbits	set	11
   463  0018                     _RCSTAbits	set	24
   464  0008                     _PORTD	set	8
   465  001F                     _ADCON0	set	31
   466  0064                     _TXIF	set	100
   467  002F                     _RA7	set	47
   468  0066                     _ADIF	set	102
   469  0049                     _RE1	set	73
   470  0048                     _RE0	set	72
   471  0081                     _OPTION_REGbits	set	129
   472  0086                     _TRISB	set	134
   473  0089                     _TRISE	set	137
   474  0088                     _TRISD	set	136
   475  0085                     _TRISA	set	133
   476  009A                     _SPBRGH	set	154
   477  0098                     _TXSTAbits	set	152
   478  0099                     _SPBRG	set	153
   479  0087                     _TRISCbits	set	135
   480  0089                     _TRISEbits	set	137
   481  0085                     _TRISAbits	set	133
   482  008C                     _PIE1bits	set	140
   483  009F                     _ADCON1	set	159
   484  0464                     _TXIE	set	1124
   485  0188                     _ANSEL	set	392
   486  0187                     _BAUDCTLbits	set	391
   487  0188                     _ANSELbits	set	392
   488                           
   489                           	psect	strings
   490  06E3                     __pstrings:
   491  06E3                     stringtab:
   492  06E3                     __stringtab:
   493  06E3                     stringcode:	
   494                           ;	String table - string pointers are 1 byte each
   495                           
   496  06E3                     stringdir:
   497  06E3  3006               	movlw	high stringdir
   498  06E4  008A               	movwf	10
   499  06E5  0804               	movf	4,w
   500  06E6  0A84               	incf	4,f
   501  06E7  0782               	addwf	2,f
   502  06E8                     __stringbase:
   503  06E8  3400               	retlw	0
   504  06E9                     __end_of__stringtab:
   505  06E9                     STR_2:
   506  06E9  3430               	retlw	48	;'0'
   507  06EA  342E               	retlw	46	;'.'
   508  06EB  3430               	retlw	48	;'0'
   509  06EC  3430               	retlw	48	;'0'
   510  06ED  3400               	retlw	0
   511  06EE                     STR_1:
   512  06EE  3453               	retlw	83	;'S'
   513  06EF  3431               	retlw	49	;'1'
   514  06F0  3400               	retlw	0
   515  06F1                     STR_3:
   516  06F1  3453               	retlw	83	;'S'
   517  06F2  3432               	retlw	50	;'2'
   518  06F3  3400               	retlw	0
   519  06F4                     STR_5:
   520  06F4  3453               	retlw	83	;'S'
   521  06F5  3433               	retlw	51	;'3'
   522  06F6  3400               	retlw	0
   523  06E9                     
   524                           	psect	cinit
   525  000F                     start_initialization:	
   526                           ; #config settings
   527                           
   528  000F                     __initialization:
   529                           
   530                           ; Clear objects allocated to COMMON
   531  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   532  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   533  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   534                           
   535                           ; Clear objects allocated to BANK0
   536  0012  1383               	bcf	3,7	;select IRP bank0
   537  0013  3036               	movlw	low __pbssBANK0
   538  0014  0084               	movwf	4
   539  0015  304B               	movlw	low (__pbssBANK0+21)
   540  0016  120A  118A  26F7  120A  118A  	fcall	clear_ram0
   541  001B                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  001B                     __end_of__initialization:
   545  001B  0183               	clrf	3
   546  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMMON
   549  0078                     __pbssCOMMON:
   550  0078                     _bandera1:
   551  0078                     	ds	1
   552  0079                     _RC_temp:
   553  0079                     	ds	1
   554  007A                     _bandera:
   555  007A                     	ds	1
   556                           
   557                           	psect	bssBANK0
   558  0036                     __pbssBANK0:
   559  0036                     _contador:
   560  0036                     	ds	2
   561  0038                     _a:
   562  0038                     	ds	2
   563  003A                     _C33:
   564  003A                     	ds	1
   565  003B                     _C32:
   566  003B                     	ds	1
   567  003C                     _C31:
   568  003C                     	ds	1
   569  003D                     _C23:
   570  003D                     	ds	1
   571  003E                     _C22:
   572  003E                     	ds	1
   573  003F                     _C21:
   574  003F                     	ds	1
   575  0040                     _C13:
   576  0040                     	ds	1
   577  0041                     _C12:
   578  0041                     	ds	1
   579  0042                     _C11:
   580  0042                     	ds	1
   581  0043                     _banderaTX:
   582  0043                     	ds	1
   583  0044                     _CONTX:
   584  0044                     	ds	1
   585  0045                     _ughh:
   586  0045                     	ds	1
   587  0046                     _cont2:
   588  0046                     	ds	1
   589  0047                     _cont1:
   590  0047                     	ds	1
   591  0048                     _var_contador:
   592  0048                     	ds	1
   593  0049                     _ADC2:
   594  0049                     	ds	1
   595  004A                     _ADC1:
   596  004A                     	ds	1
   597                           
   598                           	psect	clrtext
   599  06F7                     clear_ram0:	
   600                           ;	Called with FSR containing the base address, and
   601                           ;	W with the last address+1
   602                           
   603  06F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   604  06F8                     clrloop0:
   605  06F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   606  06F9  0A84               	incf	4,f	;increment pointer
   607  06FA  0604               	xorwf	4,w	;XOR with final address
   608  06FB  1903               	btfsc	3,2	;have we reached the end yet?
   609  06FC  3400               	retlw	0	;all done for this memory range, return
   610  06FD  0604               	xorwf	4,w	;XOR again to restore value
   611  06FE  2EF8               	goto	clrloop0	;do the next byte
   612                           
   613                           	psect	cstackCOMMON
   614  0070                     __pcstackCOMMON:
   615  0070                     ?_Setup:
   616  0070                     ?_initADC:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_Lcd_Port:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_Lcd_Cmd:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_Lcd_Init:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_Lcd_Write_Char:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_Lcd_Write_String:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_initUSART:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_isr:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_isr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_main:	
   644                           ; 1 bytes @ 0x0
   645                           
   646                           
   647                           ; 1 bytes @ 0x0
   648  0070                     	ds	3
   649  0073                     ??_initADC:
   650  0073                     ??_Lcd_Port:	
   651                           ; 1 bytes @ 0x3
   652                           
   653  0073                     ??_initUSART:	
   654                           ; 1 bytes @ 0x3
   655                           
   656  0073                     ?___bmul:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     ?___wmul:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     Lcd_Port@a:	
   663                           ; 2 bytes @ 0x3
   664                           
   665  0073                     ___bmul@multiplicand:	
   666                           ; 1 bytes @ 0x3
   667                           
   668  0073                     ___wmul@multiplier:	
   669                           ; 1 bytes @ 0x3
   670                           
   671                           
   672                           ; 2 bytes @ 0x3
   673  0073                     	ds	1
   674  0074                     ??_Lcd_Cmd:
   675  0074                     ??_Lcd_Write_Char:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     ??___bmul:	
   679                           ; 1 bytes @ 0x4
   680                           
   681                           
   682                           ; 1 bytes @ 0x4
   683  0074                     	ds	1
   684  0075                     initADC@IRCF:
   685  0075                     Lcd_Write_Char@a:	
   686                           ; 1 bytes @ 0x5
   687                           
   688  0075                     ___bmul@product:	
   689                           ; 1 bytes @ 0x5
   690                           
   691  0075                     ___wmul@multiplicand:	
   692                           ; 1 bytes @ 0x5
   693                           
   694                           
   695                           ; 2 bytes @ 0x5
   696  0075                     	ds	1
   697  0076                     ??_Lcd_Write_String:
   698  0076                     Lcd_Cmd@a:	
   699                           ; 1 bytes @ 0x6
   700                           
   701  0076                     ___bmul@multiplier:	
   702                           ; 1 bytes @ 0x6
   703                           
   704                           
   705                           ; 1 bytes @ 0x6
   706  0076                     	ds	1
   707  0077                     ?_Lcd_Set_Cursor:
   708  0077                     ??___wmul:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     ??___awdiv:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0077                     ??___lwdiv:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0077                     Lcd_Set_Cursor@b:	
   718                           ; 1 bytes @ 0x7
   719                           
   720                           
   721                           ; 1 bytes @ 0x7
   722  0077                     	ds	1
   723                           
   724                           	psect	cstackBANK0
   725  0020                     __pcstackBANK0:
   726  0020                     ??_Lcd_Set_Cursor:
   727  0020                     ??_Lcd_Init:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     Lcd_Write_String@i:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ___wmul@product:	
   734                           ; 2 bytes @ 0x0
   735                           
   736                           
   737                           ; 2 bytes @ 0x0
   738  0020                     	ds	1
   739  0021                     Lcd_Set_Cursor@a:
   740                           
   741                           ; 1 bytes @ 0x1
   742  0021                     	ds	1
   743  0022                     ?___awdiv:
   744  0022                     ?___lwdiv:	
   745                           ; 2 bytes @ 0x2
   746                           
   747  0022                     Lcd_Set_Cursor@temp:	
   748                           ; 2 bytes @ 0x2
   749                           
   750  0022                     Lcd_Write_String@a:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0022                     ___awdiv@divisor:	
   754                           ; 1 bytes @ 0x2
   755                           
   756  0022                     ___lwdiv@divisor:	
   757                           ; 2 bytes @ 0x2
   758                           
   759                           
   760                           ; 2 bytes @ 0x2
   761  0022                     	ds	1
   762  0023                     ??_Setup:
   763                           
   764                           ; 1 bytes @ 0x3
   765  0023                     	ds	1
   766  0024                     ___awdiv@dividend:
   767  0024                     ___lwdiv@dividend:	
   768                           ; 2 bytes @ 0x4
   769                           
   770                           
   771                           ; 2 bytes @ 0x4
   772  0024                     	ds	2
   773  0026                     ___awdiv@counter:
   774  0026                     ___lwdiv@quotient:	
   775                           ; 1 bytes @ 0x6
   776                           
   777                           
   778                           ; 2 bytes @ 0x6
   779  0026                     	ds	1
   780  0027                     ___awdiv@sign:
   781                           
   782                           ; 1 bytes @ 0x7
   783  0027                     	ds	1
   784  0028                     ___lwdiv@counter:
   785  0028                     ___awdiv@quotient:	
   786                           ; 1 bytes @ 0x8
   787                           
   788                           
   789                           ; 2 bytes @ 0x8
   790  0028                     	ds	2
   791  002A                     ??_main:
   792                           
   793                           ; 1 bytes @ 0xA
   794  002A                     	ds	8
   795  0032                     _main$1183:
   796                           
   797                           ; 2 bytes @ 0x12
   798  0032                     	ds	2
   799  0034                     _main$1182:
   800                           
   801                           ; 2 bytes @ 0x14
   802  0034                     	ds	2
   803                           
   804                           	psect	maintext
   805  001F                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 147 in file "lab3.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : B00/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       4       0       0       0
   827 ;;      Temps:          0       8       0       0       0
   828 ;;      Totals:         0      12       0       0       0
   829 ;;Total ram usage:       12 bytes
   830 ;; Hardware stack levels required when called:    5
   831 ;; This function calls:
   832 ;;		_Lcd_Set_Cursor
   833 ;;		_Lcd_Write_Char
   834 ;;		_Setup
   835 ;;		___awdiv
   836 ;;		___bmul
   837 ;;		___lwdiv
   838 ;;		___wmul
   839 ;; This function is called by:
   840 ;;		Startup code after reset
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _main
   846  001F                     _main:
   847  001F                     l1902:	
   848                           ;incstack = 0
   849                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   850                           
   851                           
   852                           ;lab3.c: 148:     Lcd_Write_Char(C13 + 48);
   853  001F  120A  118A  23EE  120A  118A  	fcall	_Setup
   854  0024                     l1904:
   855                           
   856                           ;lab3.c: 150:     Lcd_Set_Cursor(2,7);
   857  0024  3010               	movlw	16
   858  0025  1283               	bcf	3,5	;RP0=0, select bank0
   859  0026  1303               	bcf	3,6	;RP1=0, select bank0
   860  0027  0244               	subwf	_CONTX,w
   861  0028  1C03               	skipc
   862  0029  282B               	goto	u1061
   863  002A  282C               	goto	u1060
   864  002B                     u1061:
   865  002B  2830               	goto	l1910
   866  002C                     u1060:
   867  002C                     l1906:
   868                           
   869                           ;lab3.c: 151:     Lcd_Write_Char(C21 +48);
   870  002C  01C4               	clrf	_CONTX
   871  002D                     l1908:
   872                           
   873                           ;lab3.c: 152:     Lcd_Set_Cursor(2,9);
   874  002D  1683               	bsf	3,5	;RP0=1, select bank1
   875  002E  1303               	bcf	3,6	;RP1=0, select bank1
   876  002F  160C               	bsf	12,4	;volatile
   877  0030                     l1910:
   878                           
   879                           ;lab3.c: 156: 
   880  0030  3033               	movlw	51
   881  0031  1283               	bcf	3,5	;RP0=0, select bank0
   882  0032  00A2               	movwf	___awdiv@divisor
   883  0033  3000               	movlw	0
   884  0034  00A3               	movwf	___awdiv@divisor+1
   885  0035  084A               	movf	_ADC1,w
   886  0036  00AA               	movwf	??_main
   887  0037  01AB               	clrf	??_main+1
   888  0038  082A               	movf	??_main,w
   889  0039  00A4               	movwf	___awdiv@dividend
   890  003A  082B               	movf	??_main+1,w
   891  003B  00A5               	movwf	___awdiv@dividend+1
   892  003C  120A  118A  24A1  120A  118A  	fcall	___awdiv
   893  0041  1283               	bcf	3,5	;RP0=0, select bank0
   894  0042  1303               	bcf	3,6	;RP1=0, select bank0
   895  0043  0822               	movf	?___awdiv,w
   896  0044  00AC               	movwf	??_main+2
   897  0045  082C               	movf	??_main+2,w
   898  0046  00C2               	movwf	_C11
   899  0047                     l1912:
   900                           
   901                           ;lab3.c: 157:     Lcd_Set_Cursor(2,13);
   902  0047  3033               	movlw	51
   903  0048  00A2               	movwf	___awdiv@divisor
   904  0049  3000               	movlw	0
   905  004A  00A3               	movwf	___awdiv@divisor+1
   906  004B  084A               	movf	_ADC1,w
   907  004C  00AA               	movwf	??_main
   908  004D  01AB               	clrf	??_main+1
   909  004E  082A               	movf	??_main,w
   910  004F  00F3               	movwf	___wmul@multiplier
   911  0050  082B               	movf	??_main+1,w
   912  0051  00F4               	movwf	___wmul@multiplier+1
   913  0052  3064               	movlw	100
   914  0053  00F5               	movwf	___wmul@multiplicand
   915  0054  3000               	movlw	0
   916  0055  00F6               	movwf	___wmul@multiplicand+1
   917  0056  120A  118A  2608  120A  118A  	fcall	___wmul
   918  005B  0874               	movf	?___wmul+1,w
   919  005C  1283               	bcf	3,5	;RP0=0, select bank0
   920  005D  1303               	bcf	3,6	;RP1=0, select bank0
   921  005E  00A5               	movwf	___awdiv@dividend+1
   922  005F  0873               	movf	?___wmul,w
   923  0060  00A4               	movwf	___awdiv@dividend
   924  0061  120A  118A  24A1  120A  118A  	fcall	___awdiv
   925  0066  1283               	bcf	3,5	;RP0=0, select bank0
   926  0067  1303               	bcf	3,6	;RP1=0, select bank0
   927  0068  0822               	movf	?___awdiv,w
   928  0069  00AC               	movwf	??_main+2
   929  006A  0823               	movf	?___awdiv+1,w
   930  006B  00AD               	movwf	??_main+3
   931  006C  0842               	movf	_C11,w
   932  006D  00AE               	movwf	??_main+4
   933  006E  01AF               	clrf	??_main+5
   934  006F  082E               	movf	??_main+4,w
   935  0070  00F3               	movwf	___wmul@multiplier
   936  0071  082F               	movf	??_main+5,w
   937  0072  00F4               	movwf	___wmul@multiplier+1
   938  0073  309C               	movlw	156
   939  0074  00F5               	movwf	___wmul@multiplicand
   940  0075  30FF               	movlw	255
   941  0076  00F6               	movwf	___wmul@multiplicand+1
   942  0077  120A  118A  2608  120A  118A  	fcall	___wmul
   943  007C  0873               	movf	?___wmul,w
   944  007D  1283               	bcf	3,5	;RP0=0, select bank0
   945  007E  1303               	bcf	3,6	;RP1=0, select bank0
   946  007F  072C               	addwf	??_main+2,w
   947  0080  00B4               	movwf	_main$1182
   948  0081  0874               	movf	?___wmul+1,w
   949  0082  1803               	skipnc
   950  0083  0A74               	incf	?___wmul+1,w
   951  0084  072D               	addwf	??_main+3,w
   952  0085  00B5               	movwf	_main$1182+1
   953  0086                     l1914:
   954                           
   955                           ;lab3.c: 157:     Lcd_Set_Cursor(2,13);
   956  0086  300A               	movlw	10
   957  0087  00A2               	movwf	___awdiv@divisor
   958  0088  3000               	movlw	0
   959  0089  00A3               	movwf	___awdiv@divisor+1
   960  008A  0835               	movf	_main$1182+1,w
   961  008B  00A5               	movwf	___awdiv@dividend+1
   962  008C  0834               	movf	_main$1182,w
   963  008D  00A4               	movwf	___awdiv@dividend
   964  008E  120A  118A  24A1  120A  118A  	fcall	___awdiv
   965  0093  1283               	bcf	3,5	;RP0=0, select bank0
   966  0094  1303               	bcf	3,6	;RP1=0, select bank0
   967  0095  0822               	movf	?___awdiv,w
   968  0096  00AA               	movwf	??_main
   969  0097  082A               	movf	??_main,w
   970  0098  00C1               	movwf	_C12
   971  0099                     l1916:
   972                           
   973                           ;lab3.c: 158:     Lcd_Write_Char(C31 +48);
   974  0099  3033               	movlw	51
   975  009A  00A2               	movwf	___awdiv@divisor
   976  009B  3000               	movlw	0
   977  009C  00A3               	movwf	___awdiv@divisor+1
   978  009D  084A               	movf	_ADC1,w
   979  009E  00AA               	movwf	??_main
   980  009F  01AB               	clrf	??_main+1
   981  00A0  082A               	movf	??_main,w
   982  00A1  00F3               	movwf	___wmul@multiplier
   983  00A2  082B               	movf	??_main+1,w
   984  00A3  00F4               	movwf	___wmul@multiplier+1
   985  00A4  3064               	movlw	100
   986  00A5  00F5               	movwf	___wmul@multiplicand
   987  00A6  3000               	movlw	0
   988  00A7  00F6               	movwf	___wmul@multiplicand+1
   989  00A8  120A  118A  2608  120A  118A  	fcall	___wmul
   990  00AD  0874               	movf	?___wmul+1,w
   991  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   992  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   993  00B0  00A5               	movwf	___awdiv@dividend+1
   994  00B1  0873               	movf	?___wmul,w
   995  00B2  00A4               	movwf	___awdiv@dividend
   996  00B3  120A  118A  24A1  120A  118A  	fcall	___awdiv
   997  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   998  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   999  00BA  0822               	movf	?___awdiv,w
  1000  00BB  00AC               	movwf	??_main+2
  1001  00BC  0823               	movf	?___awdiv+1,w
  1002  00BD  00AD               	movwf	??_main+3
  1003  00BE  309C               	movlw	156
  1004  00BF  00AE               	movwf	??_main+4
  1005  00C0  082E               	movf	??_main+4,w
  1006  00C1  00F3               	movwf	___bmul@multiplicand
  1007  00C2  0842               	movf	_C11,w
  1008  00C3  120A  118A  26B9  120A  118A  	fcall	___bmul
  1009  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1010  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1011  00CA  00AF               	movwf	??_main+5
  1012  00CB  30F6               	movlw	246
  1013  00CC  00B0               	movwf	??_main+6
  1014  00CD  0830               	movf	??_main+6,w
  1015  00CE  00F3               	movwf	___bmul@multiplicand
  1016  00CF  0841               	movf	_C12,w
  1017  00D0  120A  118A  26B9  120A  118A  	fcall	___bmul
  1018  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1019  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1020  00D7  072F               	addwf	??_main+5,w
  1021  00D8  072C               	addwf	??_main+2,w
  1022  00D9  00B1               	movwf	??_main+7
  1023  00DA  0831               	movf	??_main+7,w
  1024  00DB  00C0               	movwf	_C13
  1025  00DC                     l1918:
  1026                           
  1027                           ;lab3.c: 160:     Lcd_Write_Char(C32 + 48);
  1028  00DC  3033               	movlw	51
  1029  00DD  00A2               	movwf	___awdiv@divisor
  1030  00DE  3000               	movlw	0
  1031  00DF  00A3               	movwf	___awdiv@divisor+1
  1032  00E0  0849               	movf	_ADC2,w
  1033  00E1  00AA               	movwf	??_main
  1034  00E2  01AB               	clrf	??_main+1
  1035  00E3  082A               	movf	??_main,w
  1036  00E4  00A4               	movwf	___awdiv@dividend
  1037  00E5  082B               	movf	??_main+1,w
  1038  00E6  00A5               	movwf	___awdiv@dividend+1
  1039  00E7  120A  118A  24A1  120A  118A  	fcall	___awdiv
  1040  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1041  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1042  00EE  0822               	movf	?___awdiv,w
  1043  00EF  00AC               	movwf	??_main+2
  1044  00F0  082C               	movf	??_main+2,w
  1045  00F1  00BF               	movwf	_C21
  1046  00F2                     l1920:
  1047                           
  1048                           ;lab3.c: 161:     Lcd_Set_Cursor(2,16);
  1049  00F2  3033               	movlw	51
  1050  00F3  00A2               	movwf	___awdiv@divisor
  1051  00F4  3000               	movlw	0
  1052  00F5  00A3               	movwf	___awdiv@divisor+1
  1053  00F6  0849               	movf	_ADC2,w
  1054  00F7  00AA               	movwf	??_main
  1055  00F8  01AB               	clrf	??_main+1
  1056  00F9  082A               	movf	??_main,w
  1057  00FA  00F3               	movwf	___wmul@multiplier
  1058  00FB  082B               	movf	??_main+1,w
  1059  00FC  00F4               	movwf	___wmul@multiplier+1
  1060  00FD  3064               	movlw	100
  1061  00FE  00F5               	movwf	___wmul@multiplicand
  1062  00FF  3000               	movlw	0
  1063  0100  00F6               	movwf	___wmul@multiplicand+1
  1064  0101  120A  118A  2608  120A  118A  	fcall	___wmul
  1065  0106  0874               	movf	?___wmul+1,w
  1066  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0109  00A5               	movwf	___awdiv@dividend+1
  1069  010A  0873               	movf	?___wmul,w
  1070  010B  00A4               	movwf	___awdiv@dividend
  1071  010C  120A  118A  24A1  120A  118A  	fcall	___awdiv
  1072  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0113  0822               	movf	?___awdiv,w
  1075  0114  00AC               	movwf	??_main+2
  1076  0115  0823               	movf	?___awdiv+1,w
  1077  0116  00AD               	movwf	??_main+3
  1078  0117  083F               	movf	_C21,w
  1079  0118  00AE               	movwf	??_main+4
  1080  0119  01AF               	clrf	??_main+5
  1081  011A  082E               	movf	??_main+4,w
  1082  011B  00F3               	movwf	___wmul@multiplier
  1083  011C  082F               	movf	??_main+5,w
  1084  011D  00F4               	movwf	___wmul@multiplier+1
  1085  011E  309C               	movlw	156
  1086  011F  00F5               	movwf	___wmul@multiplicand
  1087  0120  30FF               	movlw	255
  1088  0121  00F6               	movwf	___wmul@multiplicand+1
  1089  0122  120A  118A  2608  120A  118A  	fcall	___wmul
  1090  0127  0873               	movf	?___wmul,w
  1091  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1093  012A  072C               	addwf	??_main+2,w
  1094  012B  00B4               	movwf	_main$1182
  1095  012C  0874               	movf	?___wmul+1,w
  1096  012D  1803               	skipnc
  1097  012E  0A74               	incf	?___wmul+1,w
  1098  012F  072D               	addwf	??_main+3,w
  1099  0130  00B5               	movwf	_main$1182+1
  1100  0131                     l1922:
  1101                           
  1102                           ;lab3.c: 161:     Lcd_Set_Cursor(2,16);
  1103  0131  300A               	movlw	10
  1104  0132  00A2               	movwf	___awdiv@divisor
  1105  0133  3000               	movlw	0
  1106  0134  00A3               	movwf	___awdiv@divisor+1
  1107  0135  0835               	movf	_main$1182+1,w
  1108  0136  00A5               	movwf	___awdiv@dividend+1
  1109  0137  0834               	movf	_main$1182,w
  1110  0138  00A4               	movwf	___awdiv@dividend
  1111  0139  120A  118A  24A1  120A  118A  	fcall	___awdiv
  1112  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1113  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0140  0822               	movf	?___awdiv,w
  1115  0141  00AA               	movwf	??_main
  1116  0142  082A               	movf	??_main,w
  1117  0143  00BE               	movwf	_C22
  1118  0144                     l1924:
  1119                           
  1120                           ;lab3.c: 162:     Lcd_Write_Char(C33 + 48);
  1121  0144  3033               	movlw	51
  1122  0145  00A2               	movwf	___awdiv@divisor
  1123  0146  3000               	movlw	0
  1124  0147  00A3               	movwf	___awdiv@divisor+1
  1125  0148  0849               	movf	_ADC2,w
  1126  0149  00AA               	movwf	??_main
  1127  014A  01AB               	clrf	??_main+1
  1128  014B  082A               	movf	??_main,w
  1129  014C  00F3               	movwf	___wmul@multiplier
  1130  014D  082B               	movf	??_main+1,w
  1131  014E  00F4               	movwf	___wmul@multiplier+1
  1132  014F  3064               	movlw	100
  1133  0150  00F5               	movwf	___wmul@multiplicand
  1134  0151  3000               	movlw	0
  1135  0152  00F6               	movwf	___wmul@multiplicand+1
  1136  0153  120A  118A  2608  120A  118A  	fcall	___wmul
  1137  0158  0874               	movf	?___wmul+1,w
  1138  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1139  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1140  015B  00A5               	movwf	___awdiv@dividend+1
  1141  015C  0873               	movf	?___wmul,w
  1142  015D  00A4               	movwf	___awdiv@dividend
  1143  015E  120A  118A  24A1  120A  118A  	fcall	___awdiv
  1144  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0165  0822               	movf	?___awdiv,w
  1147  0166  00AC               	movwf	??_main+2
  1148  0167  0823               	movf	?___awdiv+1,w
  1149  0168  00AD               	movwf	??_main+3
  1150  0169  309C               	movlw	156
  1151  016A  00AE               	movwf	??_main+4
  1152  016B  082E               	movf	??_main+4,w
  1153  016C  00F3               	movwf	___bmul@multiplicand
  1154  016D  083F               	movf	_C21,w
  1155  016E  120A  118A  26B9  120A  118A  	fcall	___bmul
  1156  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0175  00AF               	movwf	??_main+5
  1159  0176  30F6               	movlw	246
  1160  0177  00B0               	movwf	??_main+6
  1161  0178  0830               	movf	??_main+6,w
  1162  0179  00F3               	movwf	___bmul@multiplicand
  1163  017A  083E               	movf	_C22,w
  1164  017B  120A  118A  26B9  120A  118A  	fcall	___bmul
  1165  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0182  072F               	addwf	??_main+5,w
  1168  0183  072C               	addwf	??_main+2,w
  1169  0184  00B1               	movwf	??_main+7
  1170  0185  0831               	movf	??_main+7,w
  1171  0186  00BD               	movwf	_C23
  1172  0187                     l1926:
  1173                           
  1174                           ;lab3.c: 164:   }
  1175  0187  3033               	movlw	51
  1176  0188  00A2               	movwf	___lwdiv@divisor
  1177  0189  3000               	movlw	0
  1178  018A  00A3               	movwf	___lwdiv@divisor+1
  1179  018B  0837               	movf	_contador+1,w
  1180  018C  00A5               	movwf	___lwdiv@dividend+1
  1181  018D  0836               	movf	_contador,w
  1182  018E  00A4               	movwf	___lwdiv@dividend
  1183  018F  120A  118A  25C2  120A  118A  	fcall	___lwdiv
  1184  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0196  0822               	movf	?___lwdiv,w
  1187  0197  00AA               	movwf	??_main
  1188  0198  082A               	movf	??_main,w
  1189  0199  00BC               	movwf	_C31
  1190  019A                     l1928:
  1191                           
  1192                           ;lab3.c: 165: }
  1193  019A  3033               	movlw	51
  1194  019B  00A2               	movwf	___lwdiv@divisor
  1195  019C  3000               	movlw	0
  1196  019D  00A3               	movwf	___lwdiv@divisor+1
  1197  019E  0837               	movf	_contador+1,w
  1198  019F  00F4               	movwf	___wmul@multiplier+1
  1199  01A0  0836               	movf	_contador,w
  1200  01A1  00F3               	movwf	___wmul@multiplier
  1201  01A2  3064               	movlw	100
  1202  01A3  00F5               	movwf	___wmul@multiplicand
  1203  01A4  3000               	movlw	0
  1204  01A5  00F6               	movwf	___wmul@multiplicand+1
  1205  01A6  120A  118A  2608  120A  118A  	fcall	___wmul
  1206  01AB  0874               	movf	?___wmul+1,w
  1207  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1208  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1209  01AE  00A5               	movwf	___lwdiv@dividend+1
  1210  01AF  0873               	movf	?___wmul,w
  1211  01B0  00A4               	movwf	___lwdiv@dividend
  1212  01B1  120A  118A  25C2  120A  118A  	fcall	___lwdiv
  1213  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01B8  0822               	movf	?___lwdiv,w
  1216  01B9  00AA               	movwf	??_main
  1217  01BA  0823               	movf	?___lwdiv+1,w
  1218  01BB  00AB               	movwf	??_main+1
  1219  01BC  083C               	movf	_C31,w
  1220  01BD  00AC               	movwf	??_main+2
  1221  01BE  01AD               	clrf	??_main+3
  1222  01BF  082C               	movf	??_main+2,w
  1223  01C0  00F3               	movwf	___wmul@multiplier
  1224  01C1  082D               	movf	??_main+3,w
  1225  01C2  00F4               	movwf	___wmul@multiplier+1
  1226  01C3  309C               	movlw	156
  1227  01C4  00F5               	movwf	___wmul@multiplicand
  1228  01C5  30FF               	movlw	255
  1229  01C6  00F6               	movwf	___wmul@multiplicand+1
  1230  01C7  120A  118A  2608  120A  118A  	fcall	___wmul
  1231  01CC  0873               	movf	?___wmul,w
  1232  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1233  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1234  01CF  072A               	addwf	??_main,w
  1235  01D0  00B2               	movwf	_main$1183
  1236  01D1  0874               	movf	?___wmul+1,w
  1237  01D2  1803               	skipnc
  1238  01D3  0A74               	incf	?___wmul+1,w
  1239  01D4  072B               	addwf	??_main+1,w
  1240  01D5  00B3               	movwf	_main$1183+1
  1241  01D6                     l1930:
  1242                           
  1243                           ;lab3.c: 165: }
  1244  01D6  300A               	movlw	10
  1245  01D7  00A2               	movwf	___lwdiv@divisor
  1246  01D8  3000               	movlw	0
  1247  01D9  00A3               	movwf	___lwdiv@divisor+1
  1248  01DA  0833               	movf	_main$1183+1,w
  1249  01DB  00A5               	movwf	___lwdiv@dividend+1
  1250  01DC  0832               	movf	_main$1183,w
  1251  01DD  00A4               	movwf	___lwdiv@dividend
  1252  01DE  120A  118A  25C2  120A  118A  	fcall	___lwdiv
  1253  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01E5  0822               	movf	?___lwdiv,w
  1256  01E6  00AA               	movwf	??_main
  1257  01E7  082A               	movf	??_main,w
  1258  01E8  00BB               	movwf	_C32
  1259  01E9                     l1932:
  1260                           
  1261                           ;lab3.c: 166: 
  1262  01E9  3033               	movlw	51
  1263  01EA  00A2               	movwf	___lwdiv@divisor
  1264  01EB  3000               	movlw	0
  1265  01EC  00A3               	movwf	___lwdiv@divisor+1
  1266  01ED  0837               	movf	_contador+1,w
  1267  01EE  00F4               	movwf	___wmul@multiplier+1
  1268  01EF  0836               	movf	_contador,w
  1269  01F0  00F3               	movwf	___wmul@multiplier
  1270  01F1  3064               	movlw	100
  1271  01F2  00F5               	movwf	___wmul@multiplicand
  1272  01F3  3000               	movlw	0
  1273  01F4  00F6               	movwf	___wmul@multiplicand+1
  1274  01F5  120A  118A  2608  120A  118A  	fcall	___wmul
  1275  01FA  0874               	movf	?___wmul+1,w
  1276  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1277  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1278  01FD  00A5               	movwf	___lwdiv@dividend+1
  1279  01FE  0873               	movf	?___wmul,w
  1280  01FF  00A4               	movwf	___lwdiv@dividend
  1281  0200  120A  118A  25C2  120A  118A  	fcall	___lwdiv
  1282  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0207  0822               	movf	?___lwdiv,w
  1285  0208  00AA               	movwf	??_main
  1286  0209  0823               	movf	?___lwdiv+1,w
  1287  020A  00AB               	movwf	??_main+1
  1288  020B  309C               	movlw	156
  1289  020C  00AC               	movwf	??_main+2
  1290  020D  082C               	movf	??_main+2,w
  1291  020E  00F3               	movwf	___bmul@multiplicand
  1292  020F  083C               	movf	_C31,w
  1293  0210  120A  118A  26B9  120A  118A  	fcall	___bmul
  1294  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0217  00AD               	movwf	??_main+3
  1297  0218  30F6               	movlw	246
  1298  0219  00AE               	movwf	??_main+4
  1299  021A  082E               	movf	??_main+4,w
  1300  021B  00F3               	movwf	___bmul@multiplicand
  1301  021C  083B               	movf	_C32,w
  1302  021D  120A  118A  26B9  120A  118A  	fcall	___bmul
  1303  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0224  072D               	addwf	??_main+3,w
  1306  0225  072A               	addwf	??_main,w
  1307  0226  00AF               	movwf	??_main+5
  1308  0227  082F               	movf	??_main+5,w
  1309  0228  00BA               	movwf	_C33
  1310  0229                     l1934:
  1311                           
  1312                           ;lab3.c: 168: 
  1313  0229  300A               	movlw	10
  1314  022A  0241               	subwf	_C12,w
  1315  022B  1C03               	skipc
  1316  022C  2A2E               	goto	u1071
  1317  022D  2A2F               	goto	u1070
  1318  022E                     u1071:
  1319  022E  2A33               	goto	l227
  1320  022F                     u1070:
  1321  022F                     l1936:
  1322                           
  1323                           ;lab3.c: 169:     TRISA = 0;
  1324  022F  3009               	movlw	9
  1325  0230  00AA               	movwf	??_main
  1326  0231  082A               	movf	??_main,w
  1327  0232  00C1               	movwf	_C12
  1328  0233                     l227:	
  1329                           ;lab3.c: 170:     TRISD = 0;
  1330                           
  1331                           
  1332                           ;lab3.c: 171:     PORTD = 0;
  1333  0233  300A               	movlw	10
  1334  0234  0240               	subwf	_C13,w
  1335  0235  1C03               	skipc
  1336  0236  2A38               	goto	u1081
  1337  0237  2A39               	goto	u1080
  1338  0238                     u1081:
  1339  0238  2A3D               	goto	l228
  1340  0239                     u1080:
  1341  0239                     l1938:
  1342                           
  1343                           ;lab3.c: 172:     TRISE = 0;
  1344  0239  3009               	movlw	9
  1345  023A  00AA               	movwf	??_main
  1346  023B  082A               	movf	??_main,w
  1347  023C  00C0               	movwf	_C13
  1348  023D                     l228:	
  1349                           ;lab3.c: 173:     TRISB = 0;
  1350                           
  1351                           
  1352                           ;lab3.c: 174: 
  1353  023D  300A               	movlw	10
  1354  023E  023E               	subwf	_C22,w
  1355  023F  1C03               	skipc
  1356  0240  2A42               	goto	u1091
  1357  0241  2A43               	goto	u1090
  1358  0242                     u1091:
  1359  0242  2A47               	goto	l229
  1360  0243                     u1090:
  1361  0243                     l1940:
  1362                           
  1363                           ;lab3.c: 175:     ADCON0 = 0b10000011;
  1364  0243  3009               	movlw	9
  1365  0244  00AA               	movwf	??_main
  1366  0245  082A               	movf	??_main,w
  1367  0246  00BE               	movwf	_C22
  1368  0247                     l229:	
  1369                           ;lab3.c: 176:     ADCON1 = 0;
  1370                           
  1371                           
  1372                           ;lab3.c: 177:     PORTA = 0;
  1373  0247  300A               	movlw	10
  1374  0248  023D               	subwf	_C23,w
  1375  0249  1C03               	skipc
  1376  024A  2A4C               	goto	u1101
  1377  024B  2A4D               	goto	u1100
  1378  024C                     u1101:
  1379  024C  2A51               	goto	l1944
  1380  024D                     u1100:
  1381  024D                     l1942:
  1382                           
  1383                           ;lab3.c: 178:     ADCON0 = 0b10000011;
  1384  024D  3009               	movlw	9
  1385  024E  00AA               	movwf	??_main
  1386  024F  082A               	movf	??_main,w
  1387  0250  00BD               	movwf	_C23
  1388  0251                     l1944:
  1389                           
  1390                           ;lab3.c: 181:     PORTB = 0;
  1391  0251  01F7               	clrf	Lcd_Set_Cursor@b
  1392  0252  0AF7               	incf	Lcd_Set_Cursor@b,f
  1393  0253  3002               	movlw	2
  1394  0254  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1395  0259                     l1946:
  1396                           
  1397                           ;lab3.c: 182:     ANSEL = 0;
  1398  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1399  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1400  025B  0842               	movf	_C11,w
  1401  025C  3E30               	addlw	48
  1402  025D  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1403  0262                     l1948:
  1404                           
  1405                           ;lab3.c: 183:     Lcd_Init();
  1406  0262  3003               	movlw	3
  1407  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0265  00AA               	movwf	??_main
  1410  0266  082A               	movf	??_main,w
  1411  0267  00F7               	movwf	Lcd_Set_Cursor@b
  1412  0268  3002               	movlw	2
  1413  0269  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1414  026E                     l1950:
  1415                           
  1416                           ;lab3.c: 184:     var_contador = 0;
  1417  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1418  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0270  0841               	movf	_C12,w
  1420  0271  3E30               	addlw	48
  1421  0272  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1422  0277                     l1952:
  1423                           
  1424                           ;lab3.c: 185:     PIE1bits.ADIE = 1;
  1425  0277  3004               	movlw	4
  1426  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1428  027A  00AA               	movwf	??_main
  1429  027B  082A               	movf	??_main,w
  1430  027C  00F7               	movwf	Lcd_Set_Cursor@b
  1431  027D  3002               	movlw	2
  1432  027E  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1433  0283                     l1954:
  1434                           
  1435                           ;lab3.c: 186:     initADC(0);
  1436  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0285  0840               	movf	_C13,w
  1439  0286  3E30               	addlw	48
  1440  0287  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1441  028C                     l1956:
  1442                           
  1443                           ;lab3.c: 188: 
  1444  028C  3007               	movlw	7
  1445  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1446  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1447  028F  00AA               	movwf	??_main
  1448  0290  082A               	movf	??_main,w
  1449  0291  00F7               	movwf	Lcd_Set_Cursor@b
  1450  0292  3002               	movlw	2
  1451  0293  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1452  0298                     l1958:
  1453                           
  1454                           ;lab3.c: 189: 
  1455  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1457  029A  083F               	movf	_C21,w
  1458  029B  3E30               	addlw	48
  1459  029C  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1460  02A1                     l1960:
  1461                           
  1462                           ;lab3.c: 190: 
  1463  02A1  3009               	movlw	9
  1464  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1465  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1466  02A4  00AA               	movwf	??_main
  1467  02A5  082A               	movf	??_main,w
  1468  02A6  00F7               	movwf	Lcd_Set_Cursor@b
  1469  02A7  3002               	movlw	2
  1470  02A8  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1471  02AD                     l1962:
  1472                           
  1473                           ;lab3.c: 191:     OPTION_REGbits.T0CS = 0;
  1474  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1475  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1476  02AF  083E               	movf	_C22,w
  1477  02B0  3E30               	addlw	48
  1478  02B1  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1479  02B6                     l1964:
  1480                           
  1481                           ;lab3.c: 192:     OPTION_REGbits.PSA = 0;
  1482  02B6  300A               	movlw	10
  1483  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1484  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1485  02B9  00AA               	movwf	??_main
  1486  02BA  082A               	movf	??_main,w
  1487  02BB  00F7               	movwf	Lcd_Set_Cursor@b
  1488  02BC  3002               	movlw	2
  1489  02BD  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1490  02C2                     l1966:
  1491                           
  1492                           ;lab3.c: 193:     OPTION_REGbits.PS = 111;
  1493  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1494  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1495  02C4  083D               	movf	_C23,w
  1496  02C5  3E30               	addlw	48
  1497  02C6  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1498  02CB                     l1968:
  1499                           
  1500                           ;lab3.c: 195: 
  1501  02CB  300D               	movlw	13
  1502  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1503  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1504  02CE  00AA               	movwf	??_main
  1505  02CF  082A               	movf	??_main,w
  1506  02D0  00F7               	movwf	Lcd_Set_Cursor@b
  1507  02D1  3002               	movlw	2
  1508  02D2  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1509  02D7                     l1970:
  1510                           
  1511                           ;lab3.c: 196: 
  1512  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1513  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1514  02D9  083C               	movf	_C31,w
  1515  02DA  3E30               	addlw	48
  1516  02DB  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1517  02E0                     l1972:
  1518                           
  1519                           ;lab3.c: 197:     INTCONbits.GIE = 1;
  1520  02E0  300F               	movlw	15
  1521  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1522  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1523  02E3  00AA               	movwf	??_main
  1524  02E4  082A               	movf	??_main,w
  1525  02E5  00F7               	movwf	Lcd_Set_Cursor@b
  1526  02E6  3002               	movlw	2
  1527  02E7  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1528  02EC                     l1974:
  1529                           
  1530                           ;lab3.c: 198:     INTCONbits.T0IE = 1;
  1531  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1532  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1533  02EE  083B               	movf	_C32,w
  1534  02EF  3E30               	addlw	48
  1535  02F0  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1536  02F5                     l1976:
  1537                           
  1538                           ;lab3.c: 199:     INTCONbits.T0IF = 0;
  1539  02F5  3010               	movlw	16
  1540  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1541  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1542  02F8  00AA               	movwf	??_main
  1543  02F9  082A               	movf	??_main,w
  1544  02FA  00F7               	movwf	Lcd_Set_Cursor@b
  1545  02FB  3002               	movlw	2
  1546  02FC  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  1547  0301                     l1978:
  1548                           
  1549                           ;lab3.c: 200: 
  1550  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0303  083A               	movf	_C33,w
  1553  0304  3E30               	addlw	48
  1554  0305  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  1555  030A  2824               	goto	l1904
  1556  030B  120A  118A  280C   	ljmp	start
  1557  030E                     __end_of_main:
  1558                           
  1559                           	psect	text1
  1560  0608                     __ptext1:	
  1561 ;; *************** function ___wmul *****************
  1562 ;; Defined at:
  1563 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  multiplier      2    3[COMMON] unsigned int 
  1566 ;;  multiplicand    2    5[COMMON] unsigned int 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  product         2    0[BANK0 ] unsigned int 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  2    3[COMMON] unsigned int 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1578 ;;      Params:         4       0       0       0       0
  1579 ;;      Locals:         0       2       0       0       0
  1580 ;;      Temps:          0       0       0       0       0
  1581 ;;      Totals:         4       2       0       0       0
  1582 ;;Total ram usage:        6 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    1
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function ___wmul
  1594  0608                     ___wmul:
  1595  0608                     l1884:	
  1596                           ;incstack = 0
  1597                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1598                           
  1599  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1600  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1601  060A  01A0               	clrf	___wmul@product
  1602  060B  01A1               	clrf	___wmul@product+1
  1603  060C                     l1886:
  1604  060C  1C73               	btfss	___wmul@multiplier,0
  1605  060D  2E0F               	goto	u1021
  1606  060E  2E10               	goto	u1020
  1607  060F                     u1021:
  1608  060F  2E18               	goto	l322
  1609  0610                     u1020:
  1610  0610                     l1888:
  1611  0610  0875               	movf	___wmul@multiplicand,w
  1612  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0613  07A0               	addwf	___wmul@product,f
  1615  0614  1803               	skipnc
  1616  0615  0AA1               	incf	___wmul@product+1,f
  1617  0616  0876               	movf	___wmul@multiplicand+1,w
  1618  0617  07A1               	addwf	___wmul@product+1,f
  1619  0618                     l322:
  1620  0618  3001               	movlw	1
  1621  0619                     u1035:
  1622  0619  1003               	clrc
  1623  061A  0DF5               	rlf	___wmul@multiplicand,f
  1624  061B  0DF6               	rlf	___wmul@multiplicand+1,f
  1625  061C  3EFF               	addlw	-1
  1626  061D  1D03               	skipz
  1627  061E  2E19               	goto	u1035
  1628  061F                     l1890:
  1629  061F  3001               	movlw	1
  1630  0620                     u1045:
  1631  0620  1003               	clrc
  1632  0621  0CF4               	rrf	___wmul@multiplier+1,f
  1633  0622  0CF3               	rrf	___wmul@multiplier,f
  1634  0623  3EFF               	addlw	-1
  1635  0624  1D03               	skipz
  1636  0625  2E20               	goto	u1045
  1637  0626                     l1892:
  1638  0626  0873               	movf	___wmul@multiplier,w
  1639  0627  0474               	iorwf	___wmul@multiplier+1,w
  1640  0628  1D03               	btfss	3,2
  1641  0629  2E2B               	goto	u1051
  1642  062A  2E2C               	goto	u1050
  1643  062B                     u1051:
  1644  062B  2E0C               	goto	l1886
  1645  062C                     u1050:
  1646  062C                     l1894:
  1647  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1648  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1649  062E  0821               	movf	___wmul@product+1,w
  1650  062F  00F4               	movwf	?___wmul+1
  1651  0630  0820               	movf	___wmul@product,w
  1652  0631  00F3               	movwf	?___wmul
  1653  0632                     l324:
  1654  0632  0008               	return
  1655  0633                     __end_of___wmul:
  1656                           
  1657                           	psect	text2
  1658  05C2                     __ptext2:	
  1659 ;; *************** function ___lwdiv *****************
  1660 ;; Defined at:
  1661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  divisor         2    2[BANK0 ] unsigned int 
  1664 ;;  dividend        2    4[BANK0 ] unsigned int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  quotient        2    6[BANK0 ] unsigned int 
  1667 ;;  counter         1    8[BANK0 ] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2    2[BANK0 ] unsigned int 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       4       0       0       0
  1678 ;;      Locals:         0       3       0       0       0
  1679 ;;      Temps:          1       0       0       0       0
  1680 ;;      Totals:         1       7       0       0       0
  1681 ;;Total ram usage:        8 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function ___lwdiv
  1693  05C2                     ___lwdiv:
  1694  05C2                     l1532:	
  1695                           ;incstack = 0
  1696                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1697                           
  1698  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1699  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1700  05C4  01A6               	clrf	___lwdiv@quotient
  1701  05C5  01A7               	clrf	___lwdiv@quotient+1
  1702  05C6                     l1534:
  1703  05C6  0822               	movf	___lwdiv@divisor,w
  1704  05C7  0423               	iorwf	___lwdiv@divisor+1,w
  1705  05C8  1903               	btfsc	3,2
  1706  05C9  2DCB               	goto	u691
  1707  05CA  2DCC               	goto	u690
  1708  05CB                     u691:
  1709  05CB  2E03               	goto	l1554
  1710  05CC                     u690:
  1711  05CC                     l1536:
  1712  05CC  01A8               	clrf	___lwdiv@counter
  1713  05CD  0AA8               	incf	___lwdiv@counter,f
  1714  05CE  2DDA               	goto	l1542
  1715  05CF                     l1538:
  1716  05CF  3001               	movlw	1
  1717  05D0                     u705:
  1718  05D0  1003               	clrc
  1719  05D1  0DA2               	rlf	___lwdiv@divisor,f
  1720  05D2  0DA3               	rlf	___lwdiv@divisor+1,f
  1721  05D3  3EFF               	addlw	-1
  1722  05D4  1D03               	skipz
  1723  05D5  2DD0               	goto	u705
  1724  05D6                     l1540:
  1725  05D6  3001               	movlw	1
  1726  05D7  00F7               	movwf	??___lwdiv
  1727  05D8  0877               	movf	??___lwdiv,w
  1728  05D9  07A8               	addwf	___lwdiv@counter,f
  1729  05DA                     l1542:
  1730  05DA  1FA3               	btfss	___lwdiv@divisor+1,7
  1731  05DB  2DDD               	goto	u711
  1732  05DC  2DDE               	goto	u710
  1733  05DD                     u711:
  1734  05DD  2DCF               	goto	l1538
  1735  05DE                     u710:
  1736  05DE                     l1544:
  1737  05DE  3001               	movlw	1
  1738  05DF                     u725:
  1739  05DF  1003               	clrc
  1740  05E0  0DA6               	rlf	___lwdiv@quotient,f
  1741  05E1  0DA7               	rlf	___lwdiv@quotient+1,f
  1742  05E2  3EFF               	addlw	-1
  1743  05E3  1D03               	skipz
  1744  05E4  2DDF               	goto	u725
  1745  05E5  0823               	movf	___lwdiv@divisor+1,w
  1746  05E6  0225               	subwf	___lwdiv@dividend+1,w
  1747  05E7  1D03               	skipz
  1748  05E8  2DEB               	goto	u735
  1749  05E9  0822               	movf	___lwdiv@divisor,w
  1750  05EA  0224               	subwf	___lwdiv@dividend,w
  1751  05EB                     u735:
  1752  05EB  1C03               	skipc
  1753  05EC  2DEE               	goto	u731
  1754  05ED  2DEF               	goto	u730
  1755  05EE                     u731:
  1756  05EE  2DF6               	goto	l1550
  1757  05EF                     u730:
  1758  05EF                     l1546:
  1759  05EF  0822               	movf	___lwdiv@divisor,w
  1760  05F0  02A4               	subwf	___lwdiv@dividend,f
  1761  05F1  0823               	movf	___lwdiv@divisor+1,w
  1762  05F2  1C03               	skipc
  1763  05F3  03A5               	decf	___lwdiv@dividend+1,f
  1764  05F4  02A5               	subwf	___lwdiv@dividend+1,f
  1765  05F5                     l1548:
  1766  05F5  1426               	bsf	___lwdiv@quotient,0
  1767  05F6                     l1550:
  1768  05F6  3001               	movlw	1
  1769  05F7                     u745:
  1770  05F7  1003               	clrc
  1771  05F8  0CA3               	rrf	___lwdiv@divisor+1,f
  1772  05F9  0CA2               	rrf	___lwdiv@divisor,f
  1773  05FA  3EFF               	addlw	-1
  1774  05FB  1D03               	skipz
  1775  05FC  2DF7               	goto	u745
  1776  05FD                     l1552:
  1777  05FD  3001               	movlw	1
  1778  05FE  02A8               	subwf	___lwdiv@counter,f
  1779  05FF  1D03               	btfss	3,2
  1780  0600  2E02               	goto	u751
  1781  0601  2E03               	goto	u750
  1782  0602                     u751:
  1783  0602  2DDE               	goto	l1544
  1784  0603                     u750:
  1785  0603                     l1554:
  1786  0603  0827               	movf	___lwdiv@quotient+1,w
  1787  0604  00A3               	movwf	?___lwdiv+1
  1788  0605  0826               	movf	___lwdiv@quotient,w
  1789  0606  00A2               	movwf	?___lwdiv
  1790  0607                     l594:
  1791  0607  0008               	return
  1792  0608                     __end_of___lwdiv:
  1793                           
  1794                           	psect	text3
  1795  06B9                     __ptext3:	
  1796 ;; *************** function ___bmul *****************
  1797 ;; Defined at:
  1798 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  multiplier      1    wreg     unsigned char 
  1801 ;;  multiplicand    1    3[COMMON] unsigned char 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  multiplier      1    6[COMMON] unsigned char 
  1804 ;;  product         1    5[COMMON] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      unsigned char 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         1       0       0       0       0
  1815 ;;      Locals:         2       0       0       0       0
  1816 ;;      Temps:          1       0       0       0       0
  1817 ;;      Totals:         4       0       0       0       0
  1818 ;;Total ram usage:        4 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function ___bmul
  1830  06B9                     ___bmul:
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1834                           ;___bmul@multiplier stored from wreg
  1835  06B9  00F6               	movwf	___bmul@multiplier
  1836  06BA                     l1474:
  1837  06BA  01F5               	clrf	___bmul@product
  1838  06BB                     l1476:
  1839  06BB  1C76               	btfss	___bmul@multiplier,0
  1840  06BC  2EBE               	goto	u571
  1841  06BD  2EBF               	goto	u570
  1842  06BE                     u571:
  1843  06BE  2EC3               	goto	l1480
  1844  06BF                     u570:
  1845  06BF                     l1478:
  1846  06BF  0873               	movf	___bmul@multiplicand,w
  1847  06C0  00F4               	movwf	??___bmul
  1848  06C1  0874               	movf	??___bmul,w
  1849  06C2  07F5               	addwf	___bmul@product,f
  1850  06C3                     l1480:
  1851  06C3  1003               	clrc
  1852  06C4  0DF3               	rlf	___bmul@multiplicand,f
  1853  06C5                     l1482:
  1854  06C5  1003               	clrc
  1855  06C6  0CF6               	rrf	___bmul@multiplier,f
  1856  06C7  0876               	movf	___bmul@multiplier,w
  1857  06C8  1D03               	btfss	3,2
  1858  06C9  2ECB               	goto	u581
  1859  06CA  2ECC               	goto	u580
  1860  06CB                     u581:
  1861  06CB  2EBB               	goto	l1476
  1862  06CC                     u580:
  1863  06CC                     l1484:
  1864  06CC  0875               	movf	___bmul@product,w
  1865  06CD                     l348:
  1866  06CD  0008               	return
  1867  06CE                     __end_of___bmul:
  1868                           
  1869                           	psect	text4
  1870  04A1                     __ptext4:	
  1871 ;; *************** function ___awdiv *****************
  1872 ;; Defined at:
  1873 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  divisor         2    2[BANK0 ] int 
  1876 ;;  dividend        2    4[BANK0 ] int 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  quotient        2    8[BANK0 ] int 
  1879 ;;  sign            1    7[BANK0 ] unsigned char 
  1880 ;;  counter         1    6[BANK0 ] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2    2[BANK0 ] int 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       4       0       0       0
  1891 ;;      Locals:         0       4       0       0       0
  1892 ;;      Temps:          1       0       0       0       0
  1893 ;;      Totals:         1       8       0       0       0
  1894 ;;Total ram usage:        9 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function ___awdiv
  1906  04A1                     ___awdiv:
  1907  04A1                     l1488:	
  1908                           ;incstack = 0
  1909                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1910                           
  1911  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1912  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1913  04A3  01A7               	clrf	___awdiv@sign
  1914  04A4                     l1490:
  1915  04A4  1FA3               	btfss	___awdiv@divisor+1,7
  1916  04A5  2CA7               	goto	u591
  1917  04A6  2CA8               	goto	u590
  1918  04A7                     u591:
  1919  04A7  2CAF               	goto	l1496
  1920  04A8                     u590:
  1921  04A8                     l1492:
  1922  04A8  09A2               	comf	___awdiv@divisor,f
  1923  04A9  09A3               	comf	___awdiv@divisor+1,f
  1924  04AA  0AA2               	incf	___awdiv@divisor,f
  1925  04AB  1903               	skipnz
  1926  04AC  0AA3               	incf	___awdiv@divisor+1,f
  1927  04AD                     l1494:
  1928  04AD  01A7               	clrf	___awdiv@sign
  1929  04AE  0AA7               	incf	___awdiv@sign,f
  1930  04AF                     l1496:
  1931  04AF  1FA5               	btfss	___awdiv@dividend+1,7
  1932  04B0  2CB2               	goto	u601
  1933  04B1  2CB3               	goto	u600
  1934  04B2                     u601:
  1935  04B2  2CBC               	goto	l1502
  1936  04B3                     u600:
  1937  04B3                     l1498:
  1938  04B3  09A4               	comf	___awdiv@dividend,f
  1939  04B4  09A5               	comf	___awdiv@dividend+1,f
  1940  04B5  0AA4               	incf	___awdiv@dividend,f
  1941  04B6  1903               	skipnz
  1942  04B7  0AA5               	incf	___awdiv@dividend+1,f
  1943  04B8                     l1500:
  1944  04B8  3001               	movlw	1
  1945  04B9  00F7               	movwf	??___awdiv
  1946  04BA  0877               	movf	??___awdiv,w
  1947  04BB  06A7               	xorwf	___awdiv@sign,f
  1948  04BC                     l1502:
  1949  04BC  01A8               	clrf	___awdiv@quotient
  1950  04BD  01A9               	clrf	___awdiv@quotient+1
  1951  04BE                     l1504:
  1952  04BE  0822               	movf	___awdiv@divisor,w
  1953  04BF  0423               	iorwf	___awdiv@divisor+1,w
  1954  04C0  1903               	btfsc	3,2
  1955  04C1  2CC3               	goto	u611
  1956  04C2  2CC4               	goto	u610
  1957  04C3                     u611:
  1958  04C3  2CFB               	goto	l1524
  1959  04C4                     u610:
  1960  04C4                     l1506:
  1961  04C4  01A6               	clrf	___awdiv@counter
  1962  04C5  0AA6               	incf	___awdiv@counter,f
  1963  04C6  2CD2               	goto	l1512
  1964  04C7                     l1508:
  1965  04C7  3001               	movlw	1
  1966  04C8                     u625:
  1967  04C8  1003               	clrc
  1968  04C9  0DA2               	rlf	___awdiv@divisor,f
  1969  04CA  0DA3               	rlf	___awdiv@divisor+1,f
  1970  04CB  3EFF               	addlw	-1
  1971  04CC  1D03               	skipz
  1972  04CD  2CC8               	goto	u625
  1973  04CE                     l1510:
  1974  04CE  3001               	movlw	1
  1975  04CF  00F7               	movwf	??___awdiv
  1976  04D0  0877               	movf	??___awdiv,w
  1977  04D1  07A6               	addwf	___awdiv@counter,f
  1978  04D2                     l1512:
  1979  04D2  1FA3               	btfss	___awdiv@divisor+1,7
  1980  04D3  2CD5               	goto	u631
  1981  04D4  2CD6               	goto	u630
  1982  04D5                     u631:
  1983  04D5  2CC7               	goto	l1508
  1984  04D6                     u630:
  1985  04D6                     l1514:
  1986  04D6  3001               	movlw	1
  1987  04D7                     u645:
  1988  04D7  1003               	clrc
  1989  04D8  0DA8               	rlf	___awdiv@quotient,f
  1990  04D9  0DA9               	rlf	___awdiv@quotient+1,f
  1991  04DA  3EFF               	addlw	-1
  1992  04DB  1D03               	skipz
  1993  04DC  2CD7               	goto	u645
  1994  04DD  0823               	movf	___awdiv@divisor+1,w
  1995  04DE  0225               	subwf	___awdiv@dividend+1,w
  1996  04DF  1D03               	skipz
  1997  04E0  2CE3               	goto	u655
  1998  04E1  0822               	movf	___awdiv@divisor,w
  1999  04E2  0224               	subwf	___awdiv@dividend,w
  2000  04E3                     u655:
  2001  04E3  1C03               	skipc
  2002  04E4  2CE6               	goto	u651
  2003  04E5  2CE7               	goto	u650
  2004  04E6                     u651:
  2005  04E6  2CEE               	goto	l1520
  2006  04E7                     u650:
  2007  04E7                     l1516:
  2008  04E7  0822               	movf	___awdiv@divisor,w
  2009  04E8  02A4               	subwf	___awdiv@dividend,f
  2010  04E9  0823               	movf	___awdiv@divisor+1,w
  2011  04EA  1C03               	skipc
  2012  04EB  03A5               	decf	___awdiv@dividend+1,f
  2013  04EC  02A5               	subwf	___awdiv@dividend+1,f
  2014  04ED                     l1518:
  2015  04ED  1428               	bsf	___awdiv@quotient,0
  2016  04EE                     l1520:
  2017  04EE  3001               	movlw	1
  2018  04EF                     u665:
  2019  04EF  1003               	clrc
  2020  04F0  0CA3               	rrf	___awdiv@divisor+1,f
  2021  04F1  0CA2               	rrf	___awdiv@divisor,f
  2022  04F2  3EFF               	addlw	-1
  2023  04F3  1D03               	skipz
  2024  04F4  2CEF               	goto	u665
  2025  04F5                     l1522:
  2026  04F5  3001               	movlw	1
  2027  04F6  02A6               	subwf	___awdiv@counter,f
  2028  04F7  1D03               	btfss	3,2
  2029  04F8  2CFA               	goto	u671
  2030  04F9  2CFB               	goto	u670
  2031  04FA                     u671:
  2032  04FA  2CD6               	goto	l1514
  2033  04FB                     u670:
  2034  04FB                     l1524:
  2035  04FB  0827               	movf	___awdiv@sign,w
  2036  04FC  1903               	btfsc	3,2
  2037  04FD  2CFF               	goto	u681
  2038  04FE  2D00               	goto	u680
  2039  04FF                     u681:
  2040  04FF  2D05               	goto	l1528
  2041  0500                     u680:
  2042  0500                     l1526:
  2043  0500  09A8               	comf	___awdiv@quotient,f
  2044  0501  09A9               	comf	___awdiv@quotient+1,f
  2045  0502  0AA8               	incf	___awdiv@quotient,f
  2046  0503  1903               	skipnz
  2047  0504  0AA9               	incf	___awdiv@quotient+1,f
  2048  0505                     l1528:
  2049  0505  0829               	movf	___awdiv@quotient+1,w
  2050  0506  00A3               	movwf	?___awdiv+1
  2051  0507  0828               	movf	___awdiv@quotient,w
  2052  0508  00A2               	movwf	?___awdiv
  2053  0509                     l475:
  2054  0509  0008               	return
  2055  050A                     __end_of___awdiv:
  2056                           
  2057                           	psect	text5
  2058  03EE                     __ptext5:	
  2059 ;; *************** function _Setup *****************
  2060 ;; Defined at:
  2061 ;;		line 205 in file "lab3.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2075 ;;      Params:         0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0
  2077 ;;      Temps:          0       1       0       0       0
  2078 ;;      Totals:         0       1       0       0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    4
  2082 ;; This function calls:
  2083 ;;		_Lcd_Init
  2084 ;;		_Lcd_Set_Cursor
  2085 ;;		_Lcd_Write_String
  2086 ;;		_initADC
  2087 ;;		_initUSART
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _Setup
  2095  03EE                     _Setup:
  2096  03EE                     l1824:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2099                           
  2100                           
  2101                           ;lab3.c: 207:     Lcd_Write_String("0.00");
  2102  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2103  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2104  03F0  0185               	clrf	5	;volatile
  2105                           
  2106                           ;lab3.c: 208:     Lcd_Set_Cursor(1,8);
  2107  03F1  0188               	clrf	8	;volatile
  2108                           
  2109                           ;lab3.c: 209:     Lcd_Write_String("S2");
  2110  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2111  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2112  03F4  0188               	clrf	8	;volatile
  2113                           
  2114                           ;lab3.c: 210:     Lcd_Set_Cursor(2,7);
  2115  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2116  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2117  03F7  0189               	clrf	9	;volatile
  2118                           
  2119                           ;lab3.c: 211:     Lcd_Write_String("0.00");
  2120  03F8  0186               	clrf	6	;volatile
  2121  03F9                     l1826:
  2122                           
  2123                           ;lab3.c: 213:     Lcd_Write_String("S3");
  2124  03F9  3083               	movlw	131
  2125  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2126  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2127  03FC  009F               	movwf	31	;volatile
  2128  03FD                     l1828:
  2129                           
  2130                           ;lab3.c: 214:     Lcd_Set_Cursor(2,13);
  2131  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2132  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2133  03FF  019F               	clrf	31	;volatile
  2134  0400                     l1830:
  2135                           
  2136                           ;lab3.c: 215:     Lcd_Write_String("0.00");
  2137  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2139  0402  0185               	clrf	5	;volatile
  2140  0403                     l1832:
  2141                           
  2142                           ;lab3.c: 216: 
  2143  0403  3083               	movlw	131
  2144  0404  009F               	movwf	31	;volatile
  2145                           
  2146                           ;lab3.c: 217: }
  2147  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2148  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2149  0407  019F               	clrf	31	;volatile
  2150  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2152  040A  0185               	clrf	5	;volatile
  2153  040B  0186               	clrf	6	;volatile
  2154  040C  1683               	bsf	3,5	;RP0=1, select bank3
  2155  040D  1703               	bsf	3,6	;RP1=1, select bank3
  2156  040E  0188               	clrf	8	;volatile
  2157  040F                     l1834:
  2158  040F  120A  118A  250A  120A  118A  	fcall	_Lcd_Init
  2159  0414                     l1836:
  2160  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0416  01C8               	clrf	_var_contador
  2163  0417                     l1838:
  2164  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2165  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2166  0419  170C               	bsf	12,6	;volatile
  2167  041A                     l1840:
  2168  041A  3000               	movlw	0
  2169  041B  120A  118A  2568  120A  118A  	fcall	_initADC
  2170  0420                     l1842:
  2171  0420  3001               	movlw	1
  2172  0421  120A  118A  2568  120A  118A  	fcall	_initADC
  2173  0426                     l1844:
  2174  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2175  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2176  0428  1281               	bcf	1,5	;volatile
  2177  0429                     l1846:
  2178  0429  1181               	bcf	1,3	;volatile
  2179  042A                     l1848:
  2180  042A  3007               	movlw	7
  2181  042B  0481               	iorwf	1,f	;volatile
  2182  042C                     l1850:
  2183  042C  300A               	movlw	10
  2184  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2185  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2186  042F  0081               	movwf	1	;volatile
  2187  0430                     l1852:
  2188  0430  178B               	bsf	11,7	;volatile
  2189  0431                     l1854:
  2190  0431  168B               	bsf	11,5	;volatile
  2191  0432                     l1856:
  2192  0432  110B               	bcf	11,2	;volatile
  2193  0433                     l1858:
  2194  0433  120A  118A  2682  120A  118A  	fcall	_initUSART
  2195  0438                     l1860:
  2196  0438  3003               	movlw	3
  2197  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2198  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2199  043B  00A3               	movwf	??_Setup
  2200  043C  0823               	movf	??_Setup,w
  2201  043D  00F7               	movwf	Lcd_Set_Cursor@b
  2202  043E  3001               	movlw	1
  2203  043F  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  2204  0444                     l1862:
  2205  0444  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2206  0445  120A  118A  2633  120A  118A  	fcall	_Lcd_Write_String
  2207  044A                     l1864:
  2208  044A  01F7               	clrf	Lcd_Set_Cursor@b
  2209  044B  0AF7               	incf	Lcd_Set_Cursor@b,f
  2210  044C  3002               	movlw	2
  2211  044D  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  2212  0452                     l1866:
  2213  0452  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2214  0453  120A  118A  2633  120A  118A  	fcall	_Lcd_Write_String
  2215  0458                     l1868:
  2216  0458  3008               	movlw	8
  2217  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2218  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2219  045B  00A3               	movwf	??_Setup
  2220  045C  0823               	movf	??_Setup,w
  2221  045D  00F7               	movwf	Lcd_Set_Cursor@b
  2222  045E  3001               	movlw	1
  2223  045F  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  2224  0464                     l1870:
  2225  0464  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2226  0465  120A  118A  2633  120A  118A  	fcall	_Lcd_Write_String
  2227  046A                     l1872:
  2228  046A  3007               	movlw	7
  2229  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2230  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2231  046D  00A3               	movwf	??_Setup
  2232  046E  0823               	movf	??_Setup,w
  2233  046F  00F7               	movwf	Lcd_Set_Cursor@b
  2234  0470  3002               	movlw	2
  2235  0471  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  2236  0476                     l1874:
  2237  0476  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2238  0477  120A  118A  2633  120A  118A  	fcall	_Lcd_Write_String
  2239  047C                     l1876:
  2240  047C  300E               	movlw	14
  2241  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2242  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2243  047F  00A3               	movwf	??_Setup
  2244  0480  0823               	movf	??_Setup,w
  2245  0481  00F7               	movwf	Lcd_Set_Cursor@b
  2246  0482  3001               	movlw	1
  2247  0483  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  2248  0488                     l1878:
  2249  0488  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2250  0489  120A  118A  2633  120A  118A  	fcall	_Lcd_Write_String
  2251  048E                     l1880:
  2252  048E  300D               	movlw	13
  2253  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0491  00A3               	movwf	??_Setup
  2256  0492  0823               	movf	??_Setup,w
  2257  0493  00F7               	movwf	Lcd_Set_Cursor@b
  2258  0494  3002               	movlw	2
  2259  0495  120A  118A  265C  120A  118A  	fcall	_Lcd_Set_Cursor
  2260  049A                     l1882:
  2261  049A  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2262  049B  120A  118A  2633  120A  118A  	fcall	_Lcd_Write_String
  2263  04A0                     l236:
  2264  04A0  0008               	return
  2265  04A1                     __end_of_Setup:
  2266                           
  2267                           	psect	text6
  2268  0682                     __ptext6:	
  2269 ;; *************** function _initUSART *****************
  2270 ;; Defined at:
  2271 ;;		line 3 in file "USART.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0
  2288 ;;      Totals:         0       0       0       0       0
  2289 ;;Total ram usage:        0 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    1
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_Setup
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           
  2300                           ;psect for function _initUSART
  2301  0682                     _initUSART:
  2302  0682                     l1372:	
  2303                           ;incstack = 0
  2304                           ; Regs used in _initUSART: [wreg+status,2]
  2305                           
  2306                           
  2307                           ;USART.c: 5:     TRISCbits.TRISC6 = 0;
  2308  0682  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0683  1303               	bcf	3,6	;RP1=0, select bank1
  2310  0684  1307               	bcf	7,6	;volatile
  2311                           
  2312                           ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  2313  0685  1787               	bsf	7,7	;volatile
  2314  0686                     l1374:
  2315                           
  2316                           ;USART.c: 9:     SPBRG = 25;
  2317  0686  3019               	movlw	25
  2318  0687  0099               	movwf	25	;volatile
  2319  0688                     l1376:
  2320                           
  2321                           ;USART.c: 10:     TXSTAbits.BRGH = 1;
  2322  0688  1518               	bsf	24,2	;volatile
  2323  0689                     l1378:
  2324                           
  2325                           ;USART.c: 11:     BAUDCTLbits.BRG16 = 0;
  2326  0689  1683               	bsf	3,5	;RP0=1, select bank3
  2327  068A  1703               	bsf	3,6	;RP1=1, select bank3
  2328  068B  1187               	bcf	7,3	;volatile
  2329  068C                     l1380:
  2330                           
  2331                           ;USART.c: 12:     SPBRGH = 0;
  2332  068C  1683               	bsf	3,5	;RP0=1, select bank1
  2333  068D  1303               	bcf	3,6	;RP1=0, select bank1
  2334  068E  019A               	clrf	26	;volatile
  2335  068F                     l1382:
  2336                           
  2337                           ;USART.c: 15:     TXSTAbits.SYNC = 0;
  2338  068F  1218               	bcf	24,4	;volatile
  2339  0690                     l1384:
  2340                           
  2341                           ;USART.c: 16:     RCSTAbits.SPEN = 1;
  2342  0690  1283               	bcf	3,5	;RP0=0, select bank0
  2343  0691  1303               	bcf	3,6	;RP1=0, select bank0
  2344  0692  1798               	bsf	24,7	;volatile
  2345  0693                     l1386:
  2346                           
  2347                           ;USART.c: 17:     TXSTAbits.TX9 = 0;
  2348  0693  1683               	bsf	3,5	;RP0=1, select bank1
  2349  0694  1303               	bcf	3,6	;RP1=0, select bank1
  2350  0695  1318               	bcf	24,6	;volatile
  2351  0696                     l1388:
  2352                           
  2353                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  2354  0696  1698               	bsf	24,5	;volatile
  2355  0697                     l1390:
  2356                           
  2357                           ;USART.c: 21:     PIE1bits.RCIE = 1;
  2358  0697  168C               	bsf	12,5	;volatile
  2359  0698                     l1392:
  2360                           
  2361                           ;USART.c: 22:     RCSTAbits.RX9 = 0;
  2362  0698  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0699  1303               	bcf	3,6	;RP1=0, select bank0
  2364  069A  1318               	bcf	24,6	;volatile
  2365  069B                     l1394:
  2366                           
  2367                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  2368  069B  1618               	bsf	24,4	;volatile
  2369  069C                     l1396:
  2370                           
  2371                           ;USART.c: 26:     INTCONbits.GIE = 1;
  2372  069C  178B               	bsf	11,7	;volatile
  2373  069D                     l1398:
  2374                           
  2375                           ;USART.c: 27:     INTCONbits.PEIE = 1;
  2376  069D  170B               	bsf	11,6	;volatile
  2377  069E                     l83:
  2378  069E  0008               	return
  2379  069F                     __end_of_initUSART:
  2380                           
  2381                           	psect	text7
  2382  0568                     __ptext7:	
  2383 ;; *************** function _initADC *****************
  2384 ;; Defined at:
  2385 ;;		line 4 in file "ADC.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  IRCF            1    wreg     unsigned char 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  IRCF            1    5[COMMON] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2399 ;;      Params:         0       0       0       0       0
  2400 ;;      Locals:         1       0       0       0       0
  2401 ;;      Temps:          2       0       0       0       0
  2402 ;;      Totals:         3       0       0       0       0
  2403 ;;Total ram usage:        3 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_Setup
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function _initADC
  2415  0568                     _initADC:
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  2419                           ;initADC@IRCF stored from wreg
  2420  0568  00F5               	movwf	initADC@IRCF
  2421  0569                     l1316:
  2422                           
  2423                           ;ADC.c: 6:     ADCON0 = 0b10000011;
  2424  0569  3083               	movlw	131
  2425  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2426  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2427  056C  009F               	movwf	31	;volatile
  2428  056D                     l1318:
  2429                           
  2430                           ;ADC.c: 7:     ADCON1 = 0;
  2431  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2432  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2433  056F  019F               	clrf	31	;volatile
  2434  0570                     l1320:
  2435                           
  2436                           ;ADC.c: 8:     PIE1bits.ADIE = 1;
  2437  0570  170C               	bsf	12,6	;volatile
  2438                           
  2439                           ;ADC.c: 9:     switch(IRCF){
  2440  0571  2D9F               	goto	l1324
  2441  0572                     l16:	
  2442                           ;ADC.c: 10:         case 0:
  2443                           
  2444                           
  2445                           ;ADC.c: 11:             TRISAbits.TRISA0 = 1;
  2446  0572  1405               	bsf	5,0	;volatile
  2447                           
  2448                           ;ADC.c: 12:             ANSELbits.ANS0 = 1;
  2449  0573  1683               	bsf	3,5	;RP0=1, select bank3
  2450  0574  1703               	bsf	3,6	;RP1=1, select bank3
  2451  0575  1408               	bsf	8,0	;volatile
  2452                           
  2453                           ;ADC.c: 13:             break;
  2454  0576  2DC1               	goto	l26
  2455  0577                     l18:	
  2456                           ;ADC.c: 14:         case 1:
  2457                           
  2458                           
  2459                           ;ADC.c: 15:             TRISAbits.TRISA1 = 1;
  2460  0577  1485               	bsf	5,1	;volatile
  2461                           
  2462                           ;ADC.c: 16:             ANSELbits.ANS1 = 1;
  2463  0578  1683               	bsf	3,5	;RP0=1, select bank3
  2464  0579  1703               	bsf	3,6	;RP1=1, select bank3
  2465  057A  1488               	bsf	8,1	;volatile
  2466                           
  2467                           ;ADC.c: 17:             break;
  2468  057B  2DC1               	goto	l26
  2469  057C                     l19:	
  2470                           ;ADC.c: 18:         case 2:
  2471                           
  2472                           
  2473                           ;ADC.c: 19:             TRISAbits.TRISA2 = 1;
  2474  057C  1505               	bsf	5,2	;volatile
  2475                           
  2476                           ;ADC.c: 20:             ANSELbits.ANS2 = 1;
  2477  057D  1683               	bsf	3,5	;RP0=1, select bank3
  2478  057E  1703               	bsf	3,6	;RP1=1, select bank3
  2479  057F  1508               	bsf	8,2	;volatile
  2480                           
  2481                           ;ADC.c: 21:             break;
  2482  0580  2DC1               	goto	l26
  2483  0581                     l20:	
  2484                           ;ADC.c: 22:         case 3:
  2485                           
  2486                           
  2487                           ;ADC.c: 23:             TRISAbits.TRISA3 = 1;
  2488  0581  1585               	bsf	5,3	;volatile
  2489                           
  2490                           ;ADC.c: 24:             ANSELbits.ANS3 = 1;
  2491  0582  1683               	bsf	3,5	;RP0=1, select bank3
  2492  0583  1703               	bsf	3,6	;RP1=1, select bank3
  2493  0584  1588               	bsf	8,3	;volatile
  2494                           
  2495                           ;ADC.c: 25:             break;
  2496  0585  2DC1               	goto	l26
  2497  0586                     l21:	
  2498                           ;ADC.c: 26:         case 4:
  2499                           
  2500                           
  2501                           ;ADC.c: 27:             TRISAbits.TRISA5 = 1;
  2502  0586  1685               	bsf	5,5	;volatile
  2503                           
  2504                           ;ADC.c: 28:             ANSELbits.ANS4 = 1;
  2505  0587  1683               	bsf	3,5	;RP0=1, select bank3
  2506  0588  1703               	bsf	3,6	;RP1=1, select bank3
  2507  0589  1608               	bsf	8,4	;volatile
  2508                           
  2509                           ;ADC.c: 29:             break;
  2510  058A  2DC1               	goto	l26
  2511  058B                     l22:	
  2512                           ;ADC.c: 30:         case 5:
  2513                           
  2514                           
  2515                           ;ADC.c: 31:             TRISEbits.TRISE0 = 1;
  2516  058B  1409               	bsf	9,0	;volatile
  2517                           
  2518                           ;ADC.c: 32:             ANSELbits.ANS5 = 1;
  2519  058C  1683               	bsf	3,5	;RP0=1, select bank3
  2520  058D  1703               	bsf	3,6	;RP1=1, select bank3
  2521  058E  1688               	bsf	8,5	;volatile
  2522                           
  2523                           ;ADC.c: 33:             break;
  2524  058F  2DC1               	goto	l26
  2525  0590                     l23:	
  2526                           ;ADC.c: 34:         case 6:
  2527                           
  2528                           
  2529                           ;ADC.c: 35:             TRISEbits.TRISE1 = 1;
  2530  0590  1489               	bsf	9,1	;volatile
  2531                           
  2532                           ;ADC.c: 36:             ANSELbits.ANS6 = 1;
  2533  0591  1683               	bsf	3,5	;RP0=1, select bank3
  2534  0592  1703               	bsf	3,6	;RP1=1, select bank3
  2535  0593  1708               	bsf	8,6	;volatile
  2536                           
  2537                           ;ADC.c: 37:             break;
  2538  0594  2DC1               	goto	l26
  2539  0595                     l24:	
  2540                           ;ADC.c: 38:         case 7:
  2541                           
  2542                           
  2543                           ;ADC.c: 39:             TRISEbits.TRISE2 = 1;
  2544  0595  1509               	bsf	9,2	;volatile
  2545                           
  2546                           ;ADC.c: 40:             ANSELbits.ANS7 = 1;
  2547  0596  1683               	bsf	3,5	;RP0=1, select bank3
  2548  0597  1703               	bsf	3,6	;RP1=1, select bank3
  2549  0598  1788               	bsf	8,7	;volatile
  2550                           
  2551                           ;ADC.c: 41:             break;
  2552  0599  2DC1               	goto	l26
  2553  059A                     l25:	
  2554                           ;ADC.c: 42:         default:
  2555                           
  2556                           
  2557                           ;ADC.c: 43:             TRISAbits.TRISA0 = 1;
  2558  059A  1405               	bsf	5,0	;volatile
  2559                           
  2560                           ;ADC.c: 44:             ANSELbits.ANS0 = 1;
  2561  059B  1683               	bsf	3,5	;RP0=1, select bank3
  2562  059C  1703               	bsf	3,6	;RP1=1, select bank3
  2563  059D  1408               	bsf	8,0	;volatile
  2564                           
  2565                           ;ADC.c: 45:             break;
  2566  059E  2DC1               	goto	l26
  2567  059F                     l1324:
  2568  059F  0875               	movf	initADC@IRCF,w
  2569  05A0  00F3               	movwf	??_initADC
  2570  05A1  01F4               	clrf	??_initADC+1
  2571                           
  2572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2573                           ; Switch size 1, requested type "simple"
  2574                           ; Number of cases is 1, Range of values is 0 to 0
  2575                           ; switch strategies available:
  2576                           ; Name         Instructions Cycles
  2577                           ; simple_byte            4     3 (average)
  2578                           ; direct_byte           11     8 (fixed)
  2579                           ; jumptable            260     6 (fixed)
  2580                           ;	Chosen strategy is simple_byte
  2581  05A2  0874               	movf	??_initADC+1,w
  2582  05A3  3A00               	xorlw	0	; case 0
  2583  05A4  1903               	skipnz
  2584  05A5  2DA7               	goto	l2000
  2585  05A6  2D9A               	goto	l25
  2586  05A7                     l2000:
  2587                           
  2588                           ; Switch size 1, requested type "simple"
  2589                           ; Number of cases is 8, Range of values is 0 to 7
  2590                           ; switch strategies available:
  2591                           ; Name         Instructions Cycles
  2592                           ; simple_byte           25    13 (average)
  2593                           ; direct_byte           32     8 (fixed)
  2594                           ; jumptable            260     6 (fixed)
  2595                           ;	Chosen strategy is simple_byte
  2596  05A7  0873               	movf	??_initADC,w
  2597  05A8  3A00               	xorlw	0	; case 0
  2598  05A9  1903               	skipnz
  2599  05AA  2D72               	goto	l16
  2600  05AB  3A01               	xorlw	1	; case 1
  2601  05AC  1903               	skipnz
  2602  05AD  2D77               	goto	l18
  2603  05AE  3A03               	xorlw	3	; case 2
  2604  05AF  1903               	skipnz
  2605  05B0  2D7C               	goto	l19
  2606  05B1  3A01               	xorlw	1	; case 3
  2607  05B2  1903               	skipnz
  2608  05B3  2D81               	goto	l20
  2609  05B4  3A07               	xorlw	7	; case 4
  2610  05B5  1903               	skipnz
  2611  05B6  2D86               	goto	l21
  2612  05B7  3A01               	xorlw	1	; case 5
  2613  05B8  1903               	skipnz
  2614  05B9  2D8B               	goto	l22
  2615  05BA  3A03               	xorlw	3	; case 6
  2616  05BB  1903               	skipnz
  2617  05BC  2D90               	goto	l23
  2618  05BD  3A01               	xorlw	1	; case 7
  2619  05BE  1903               	skipnz
  2620  05BF  2D95               	goto	l24
  2621  05C0  2D9A               	goto	l25
  2622  05C1                     l26:
  2623  05C1  0008               	return
  2624  05C2                     __end_of_initADC:
  2625                           
  2626                           	psect	text8
  2627  0633                     __ptext8:	
  2628 ;; *************** function _Lcd_Write_String *****************
  2629 ;; Defined at:
  2630 ;;		line 72 in file "lcd.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  a               1    wreg     PTR unsigned char 
  2633 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  2634 ;;		 -> STR_2(5), STR_1(3), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2637 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  2638 ;;		 -> STR_2(5), STR_1(3), 
  2639 ;;  i               2    0[BANK0 ] int 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         0       3       0       0       0
  2651 ;;      Temps:          0       0       0       0       0
  2652 ;;      Totals:         0       3       0       0       0
  2653 ;;Total ram usage:        3 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    3
  2656 ;; This function calls:
  2657 ;;		_Lcd_Write_Char
  2658 ;; This function is called by:
  2659 ;;		_Setup
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _Lcd_Write_String
  2665  0633                     _Lcd_Write_String:
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2669                           ;Lcd_Write_String@a stored from wreg
  2670  0633  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0634  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0635  00A2               	movwf	Lcd_Write_String@a
  2673  0636                     l1816:
  2674                           
  2675                           ;lcd.c: 72: void Lcd_Write_String(char *a);lcd.c: 73: {;lcd.c: 74:  int i;;lcd.c: 75:  f
      +                          or(i=0;a[i]!='\0';i++)
  2676  0636  01A0               	clrf	Lcd_Write_String@i
  2677  0637  01A1               	clrf	Lcd_Write_String@i+1
  2678  0638  2E4E               	goto	l1822
  2679  0639                     l1818:
  2680                           
  2681                           ;lcd.c: 76:     Lcd_Write_Char(a[i]);
  2682  0639  0820               	movf	Lcd_Write_String@i,w
  2683  063A  0722               	addwf	Lcd_Write_String@a,w
  2684  063B  0084               	movwf	4
  2685  063C  120A  118A  26E3  120A  118A  	fcall	stringdir
  2686  0641  120A  118A  26CE  120A  118A  	fcall	_Lcd_Write_Char
  2687  0646                     l1820:
  2688  0646  3001               	movlw	1
  2689  0647  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0648  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0649  07A0               	addwf	Lcd_Write_String@i,f
  2692  064A  1803               	skipnc
  2693  064B  0AA1               	incf	Lcd_Write_String@i+1,f
  2694  064C  3000               	movlw	0
  2695  064D  07A1               	addwf	Lcd_Write_String@i+1,f
  2696  064E                     l1822:
  2697  064E  0820               	movf	Lcd_Write_String@i,w
  2698  064F  0722               	addwf	Lcd_Write_String@a,w
  2699  0650  0084               	movwf	4
  2700  0651  120A  118A  26E3  120A  118A  	fcall	stringdir
  2701  0656  3A00               	xorlw	0
  2702  0657  1D03               	skipz
  2703  0658  2E5A               	goto	u1011
  2704  0659  2E5B               	goto	u1010
  2705  065A                     u1011:
  2706  065A  2E39               	goto	l1818
  2707  065B                     u1010:
  2708  065B                     l58:
  2709  065B  0008               	return
  2710  065C                     __end_of_Lcd_Write_String:
  2711                           
  2712                           	psect	text9
  2713  06CE                     __ptext9:	
  2714 ;; *************** function _Lcd_Write_Char *****************
  2715 ;; Defined at:
  2716 ;;		line 63 in file "lcd.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  a               1    wreg     unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  a               1    5[COMMON] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         0       0       0       0       0
  2731 ;;      Locals:         1       0       0       0       0
  2732 ;;      Temps:          1       0       0       0       0
  2733 ;;      Totals:         2       0       0       0       0
  2734 ;;Total ram usage:        2 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    2
  2737 ;; This function calls:
  2738 ;;		_Lcd_Port
  2739 ;; This function is called by:
  2740 ;;		_Lcd_Write_String
  2741 ;;		_main
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           
  2746                           ;psect for function _Lcd_Write_Char
  2747  06CE                     _Lcd_Write_Char:
  2748                           
  2749                           ;incstack = 0
  2750                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2751                           ;Lcd_Write_Char@a stored from wreg
  2752  06CE  00F5               	movwf	Lcd_Write_Char@a
  2753  06CF                     l1772:
  2754                           
  2755                           ;lcd.c: 63: void Lcd_Write_Char(char a);lcd.c: 64: {;lcd.c: 65:     RE0 = 1;
  2756  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  2757  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  2758  06D1  1409               	bsf	9,0	;volatile
  2759  06D2                     l1774:
  2760                           
  2761                           ;lcd.c: 66:    Lcd_Port(a);
  2762  06D2  0875               	movf	Lcd_Write_Char@a,w
  2763  06D3  120A  118A  26FF  120A  118A  	fcall	_Lcd_Port
  2764  06D8                     l1776:
  2765                           
  2766                           ;lcd.c: 67:    RE1 = 1;
  2767  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2768  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2769  06DA  1489               	bsf	9,1	;volatile
  2770  06DB                     l1778:
  2771                           
  2772                           ;lcd.c: 68:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2773  06DB  300D               	movlw	13
  2774  06DC  00F4               	movwf	??_Lcd_Write_Char
  2775  06DD                     u1117:
  2776  06DD  0BF4               	decfsz	??_Lcd_Write_Char,f
  2777  06DE  2EDD               	goto	u1117
  2778  06DF                     l1780:
  2779                           
  2780                           ;lcd.c: 69:    RE1 = 0;
  2781  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2782  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2783  06E1  1089               	bcf	9,1	;volatile
  2784  06E2                     l52:
  2785  06E2  0008               	return
  2786  06E3                     __end_of_Lcd_Write_Char:
  2787                           
  2788                           	psect	text10
  2789  065C                     __ptext10:	
  2790 ;; *************** function _Lcd_Set_Cursor *****************
  2791 ;; Defined at:
  2792 ;;		line 30 in file "lcd.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  a               1    wreg     unsigned char 
  2795 ;;  b               1    7[COMMON] unsigned char 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  a               1    1[BANK0 ] unsigned char 
  2798 ;;  temp            1    2[BANK0 ] unsigned char 
  2799 ;;  y               1    0        unsigned char 
  2800 ;;  z               1    0        unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         1       0       0       0       0
  2811 ;;      Locals:         0       2       0       0       0
  2812 ;;      Temps:          0       1       0       0       0
  2813 ;;      Totals:         1       3       0       0       0
  2814 ;;Total ram usage:        4 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    3
  2817 ;; This function calls:
  2818 ;;		_Lcd_Cmd
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;;		_Setup
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _Lcd_Set_Cursor
  2827  065C                     _Lcd_Set_Cursor:
  2828                           
  2829                           ;incstack = 0
  2830                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2831                           ;Lcd_Set_Cursor@a stored from wreg
  2832  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2833  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2834  065E  00A1               	movwf	Lcd_Set_Cursor@a
  2835  065F                     l1782:
  2836                           
  2837                           ;lcd.c: 30: void Lcd_Set_Cursor(char a, char b);lcd.c: 31: {;lcd.c: 32:  char temp,z,y;;
      +                          lcd.c: 33:  if(a == 1)
  2838  065F  0321               	decf	Lcd_Set_Cursor@a,w
  2839  0660  1D03               	btfss	3,2
  2840  0661  2E63               	goto	u991
  2841  0662  2E64               	goto	u990
  2842  0663                     u991:
  2843  0663  2E70               	goto	l1788
  2844  0664                     u990:
  2845  0664                     l1784:
  2846                           
  2847                           ;lcd.c: 34:  {;lcd.c: 35:    temp = 0x80 + b - 1;
  2848  0664  0877               	movf	Lcd_Set_Cursor@b,w
  2849  0665  3E7F               	addlw	127
  2850  0666  00A0               	movwf	??_Lcd_Set_Cursor
  2851  0667  0820               	movf	??_Lcd_Set_Cursor,w
  2852  0668  00A2               	movwf	Lcd_Set_Cursor@temp
  2853  0669                     l1786:
  2854                           
  2855                           ;lcd.c: 36:   Lcd_Cmd(temp);
  2856  0669  0822               	movf	Lcd_Set_Cursor@temp,w
  2857  066A  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2858                           
  2859                           ;lcd.c: 37:  }
  2860  066F  2E81               	goto	l46
  2861  0670                     l1788:
  2862  0670  3002               	movlw	2
  2863  0671  0621               	xorwf	Lcd_Set_Cursor@a,w
  2864  0672  1D03               	btfss	3,2
  2865  0673  2E75               	goto	u1001
  2866  0674  2E76               	goto	u1000
  2867  0675                     u1001:
  2868  0675  2E81               	goto	l46
  2869  0676                     u1000:
  2870  0676                     l1790:
  2871                           
  2872                           ;lcd.c: 39:  {;lcd.c: 40:   temp = 0xC0 + b - 1;
  2873  0676  0877               	movf	Lcd_Set_Cursor@b,w
  2874  0677  3EBF               	addlw	191
  2875  0678  00A0               	movwf	??_Lcd_Set_Cursor
  2876  0679  0820               	movf	??_Lcd_Set_Cursor,w
  2877  067A  00A2               	movwf	Lcd_Set_Cursor@temp
  2878  067B                     l1792:
  2879                           
  2880                           ;lcd.c: 41:   Lcd_Cmd(temp);
  2881  067B  0822               	movf	Lcd_Set_Cursor@temp,w
  2882  067C  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2883  0681                     l46:
  2884  0681  0008               	return
  2885  0682                     __end_of_Lcd_Set_Cursor:
  2886                           
  2887                           	psect	text11
  2888  050A                     __ptext11:	
  2889 ;; *************** function _Lcd_Init *****************
  2890 ;; Defined at:
  2891 ;;		line 45 in file "lcd.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0, pclath, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2905 ;;      Params:         0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0
  2907 ;;      Temps:          0       2       0       0       0
  2908 ;;      Totals:         0       2       0       0       0
  2909 ;;Total ram usage:        2 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    3
  2912 ;; This function calls:
  2913 ;;		_Lcd_Cmd
  2914 ;;		_Lcd_Port
  2915 ;; This function is called by:
  2916 ;;		_Setup
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           
  2921                           ;psect for function _Lcd_Init
  2922  050A                     _Lcd_Init:
  2923  050A                     l1794:	
  2924                           ;incstack = 0
  2925                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2926                           
  2927                           
  2928                           ;lcd.c: 46:    _delay((unsigned long)((15)*(4000000/4000.0)));
  2929  050A  3014               	movlw	20
  2930  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2931  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2932  050D  00A1               	movwf	??_Lcd_Init+1
  2933  050E  3079               	movlw	121
  2934  050F  00A0               	movwf	??_Lcd_Init
  2935  0510                     u1127:
  2936  0510  0BA0               	decfsz	??_Lcd_Init,f
  2937  0511  2D10               	goto	u1127
  2938  0512  0BA1               	decfsz	??_Lcd_Init+1,f
  2939  0513  2D10               	goto	u1127
  2940  0514                     l1796:
  2941                           
  2942                           ;lcd.c: 47:   Lcd_Port(0x00);
  2943  0514  3000               	movlw	0
  2944  0515  120A  118A  26FF  120A  118A  	fcall	_Lcd_Port
  2945  051A                     l1798:
  2946                           
  2947                           ;lcd.c: 48:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2948  051A  301A               	movlw	26
  2949  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2950  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2951  051D  00A1               	movwf	??_Lcd_Init+1
  2952  051E  30F7               	movlw	247
  2953  051F  00A0               	movwf	??_Lcd_Init
  2954  0520                     u1137:
  2955  0520  0BA0               	decfsz	??_Lcd_Init,f
  2956  0521  2D20               	goto	u1137
  2957  0522  0BA1               	decfsz	??_Lcd_Init+1,f
  2958  0523  2D20               	goto	u1137
  2959  0524  2D25               	nop2
  2960                           
  2961                           ;lcd.c: 49:   Lcd_Cmd(0x030);
  2962  0525  3030               	movlw	48
  2963  0526  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2964  052B                     l1800:
  2965                           
  2966                           ;lcd.c: 50:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2967  052B  3007               	movlw	7
  2968  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2969  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2970  052E  00A1               	movwf	??_Lcd_Init+1
  2971  052F  307C               	movlw	124
  2972  0530  00A0               	movwf	??_Lcd_Init
  2973  0531                     u1147:
  2974  0531  0BA0               	decfsz	??_Lcd_Init,f
  2975  0532  2D31               	goto	u1147
  2976  0533  0BA1               	decfsz	??_Lcd_Init+1,f
  2977  0534  2D31               	goto	u1147
  2978  0535  0000               	nop
  2979  0536                     l1802:
  2980                           
  2981                           ;lcd.c: 51:   Lcd_Cmd(0x030);
  2982  0536  3030               	movlw	48
  2983  0537  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2984                           
  2985                           ;lcd.c: 52:  _delay((unsigned long)((160)*(4000000/4000000.0)));
  2986  053C  3034               	movlw	52
  2987  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2988  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2989  053F  00A0               	movwf	??_Lcd_Init
  2990  0540                     u1157:
  2991  0540  0BA0               	decfsz	??_Lcd_Init,f
  2992  0541  2D40               	goto	u1157
  2993  0542  0000               	nop
  2994  0543                     l1804:
  2995                           
  2996                           ;lcd.c: 53:   Lcd_Cmd(0x030);
  2997  0543  3030               	movlw	48
  2998  0544  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  2999  0549                     l1806:
  3000                           
  3001                           ;lcd.c: 55:   Lcd_Cmd(0x038);
  3002  0549  3038               	movlw	56
  3003  054A  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  3004  054F                     l1808:
  3005                           
  3006                           ;lcd.c: 56:   Lcd_Cmd(0x010);
  3007  054F  3010               	movlw	16
  3008  0550  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  3009  0555                     l1810:
  3010                           
  3011                           ;lcd.c: 57:   Lcd_Cmd(0x001);
  3012  0555  3001               	movlw	1
  3013  0556  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  3014  055B                     l1812:
  3015                           
  3016                           ;lcd.c: 58:   Lcd_Cmd(0x006);
  3017  055B  3006               	movlw	6
  3018  055C  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  3019  0561                     l1814:
  3020                           
  3021                           ;lcd.c: 60:   Lcd_Cmd(0x0C);
  3022  0561  300C               	movlw	12
  3023  0562  120A  118A  269F  120A  118A  	fcall	_Lcd_Cmd
  3024  0567                     l49:
  3025  0567  0008               	return
  3026  0568                     __end_of_Lcd_Init:
  3027                           
  3028                           	psect	text12
  3029  069F                     __ptext12:	
  3030 ;; *************** function _Lcd_Cmd *****************
  3031 ;; Defined at:
  3032 ;;		line 16 in file "lcd.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  a               1    wreg     unsigned char 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  a               1    6[COMMON] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0, pclath, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         0       0       0       0       0
  3047 ;;      Locals:         1       0       0       0       0
  3048 ;;      Temps:          2       0       0       0       0
  3049 ;;      Totals:         3       0       0       0       0
  3050 ;;Total ram usage:        3 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    2
  3053 ;; This function calls:
  3054 ;;		_Lcd_Port
  3055 ;; This function is called by:
  3056 ;;		_Lcd_Set_Cursor
  3057 ;;		_Lcd_Init
  3058 ;;		_Lcd_Shift_Right
  3059 ;;		_Lcd_Shift_Left
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           
  3064                           ;psect for function _Lcd_Cmd
  3065  069F                     _Lcd_Cmd:
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3069                           ;Lcd_Cmd@a stored from wreg
  3070  069F  00F6               	movwf	Lcd_Cmd@a
  3071  06A0                     l1762:
  3072                           
  3073                           ;lcd.c: 16: void Lcd_Cmd(char a);lcd.c: 17: {;lcd.c: 18:  RE0 = 0;
  3074  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3075  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3076  06A2  1009               	bcf	9,0	;volatile
  3077  06A3                     l1764:
  3078                           
  3079                           ;lcd.c: 19:  Lcd_Port(a);
  3080  06A3  0876               	movf	Lcd_Cmd@a,w
  3081  06A4  120A  118A  26FF  120A  118A  	fcall	_Lcd_Port
  3082  06A9                     l1766:
  3083                           
  3084                           ;lcd.c: 20:  RE1 = 1;
  3085  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  3086  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  3087  06AB  1489               	bsf	9,1	;volatile
  3088  06AC                     l1768:
  3089                           
  3090                           ;lcd.c: 21:         _delay((unsigned long)((10)*(4000000/4000.0)));
  3091  06AC  300D               	movlw	13
  3092  06AD  00F5               	movwf	??_Lcd_Cmd+1
  3093  06AE  30FB               	movlw	251
  3094  06AF  00F4               	movwf	??_Lcd_Cmd
  3095  06B0                     u1167:
  3096  06B0  0BF4               	decfsz	??_Lcd_Cmd,f
  3097  06B1  2EB0               	goto	u1167
  3098  06B2  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3099  06B3  2EB0               	goto	u1167
  3100  06B4  2EB5               	nop2
  3101  06B5                     l1770:
  3102                           
  3103                           ;lcd.c: 22:         RE1 = 0;
  3104  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3105  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3106  06B7  1089               	bcf	9,1	;volatile
  3107  06B8                     l40:
  3108  06B8  0008               	return
  3109  06B9                     __end_of_Lcd_Cmd:
  3110                           
  3111                           	psect	text13
  3112  06FF                     __ptext13:	
  3113 ;; *************** function _Lcd_Port *****************
  3114 ;; Defined at:
  3115 ;;		line 12 in file "lcd.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  a               1    wreg     unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  a               1    3[COMMON] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         1       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         1       0       0       0       0
  3133 ;;Total ram usage:        1 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    1
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_Lcd_Cmd
  3140 ;;		_Lcd_Init
  3141 ;;		_Lcd_Write_Char
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function _Lcd_Port
  3147  06FF                     _Lcd_Port:
  3148                           
  3149                           ;incstack = 0
  3150                           ; Regs used in _Lcd_Port: [wreg]
  3151                           ;Lcd_Port@a stored from wreg
  3152  06FF  00F3               	movwf	Lcd_Port@a
  3153  0700                     l1760:
  3154                           
  3155                           ;lcd.c: 12: void Lcd_Port(char a);lcd.c: 13: {;lcd.c: 14:  PORTD = a;
  3156  0700  0873               	movf	Lcd_Port@a,w
  3157  0701  1283               	bcf	3,5	;RP0=0, select bank0
  3158  0702  1303               	bcf	3,6	;RP1=0, select bank0
  3159  0703  0088               	movwf	8	;volatile
  3160  0704                     l37:
  3161  0704  0008               	return
  3162  0705                     __end_of_Lcd_Port:
  3163                           
  3164                           	psect	text14
  3165  030E                     __ptext14:	
  3166 ;; *************** function _isr *****************
  3167 ;; Defined at:
  3168 ;;		line 71 in file "lab3.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0
  3184 ;;      Temps:          3       0       0       0       0
  3185 ;;      Totals:         3       0       0       0       0
  3186 ;;Total ram usage:        3 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		Interrupt level 1
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function _isr
  3197  030E                     _isr:
  3198  030E                     i1l1562:
  3199                           
  3200                           ;lab3.c: 72:         RC_temp = RCREG;
  3201  030E  138B               	bcf	11,7	;volatile
  3202                           
  3203                           ;lab3.c: 73:         }
  3204  030F  1D0B               	btfss	11,2	;volatile
  3205  0310  2B12               	goto	u76_21
  3206  0311  2B13               	goto	u76_20
  3207  0312                     u76_21:
  3208  0312  2B1A               	goto	i1l1568
  3209  0313                     u76_20:
  3210  0313                     i1l1564:
  3211                           
  3212                           ;lab3.c: 74:     }
  3213  0313  3001               	movlw	1
  3214  0314  00F0               	movwf	??_isr
  3215  0315  0870               	movf	??_isr,w
  3216  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0318  07C4               	addwf	_CONTX,f
  3219  0319                     i1l1566:
  3220                           
  3221                           ;lab3.c: 75: 
  3222  0319  110B               	bcf	11,2	;volatile
  3223  031A                     i1l1568:
  3224                           
  3225                           ;lab3.c: 78:             TXREG = C11 + 48;
  3226  031A  1283               	bcf	3,5	;RP0=0, select bank0
  3227  031B  1303               	bcf	3,6	;RP1=0, select bank0
  3228  031C  1F0C               	btfss	12,6	;volatile
  3229  031D  2B1F               	goto	u77_21
  3230  031E  2B20               	goto	u77_20
  3231  031F                     u77_21:
  3232  031F  2B35               	goto	i1l1588
  3233  0320                     u77_20:
  3234  0320                     i1l1570:
  3235                           
  3236                           ;lab3.c: 79:             bandera1 = 1;
  3237  0320  037A               	decf	_bandera,w
  3238  0321  1D03               	btfss	3,2
  3239  0322  2B24               	goto	u78_21
  3240  0323  2B25               	goto	u78_20
  3241  0324                     u78_21:
  3242  0324  2B2C               	goto	i1l1578
  3243  0325                     u78_20:
  3244  0325                     i1l1572:
  3245                           
  3246                           ;lab3.c: 80:         } else if (bandera1 == 1){
  3247  0325  081E               	movf	30,w	;volatile
  3248  0326  00F0               	movwf	??_isr
  3249  0327  0870               	movf	??_isr,w
  3250  0328  00CA               	movwf	_ADC1
  3251  0329                     i1l1574:
  3252                           
  3253                           ;lab3.c: 81:             TXREG = C12 + 48;
  3254  0329  151F               	bsf	31,2	;volatile
  3255  032A                     i1l1576:
  3256                           
  3257                           ;lab3.c: 82:             bandera1 = 2;
  3258  032A  01FA               	clrf	_bandera
  3259                           
  3260                           ;lab3.c: 83:         } else if (bandera1 == 2){
  3261  032B  2B33               	goto	i1l1584
  3262  032C                     i1l1578:
  3263                           
  3264                           ;lab3.c: 84:             TXREG = C13 + 48;
  3265  032C  081E               	movf	30,w	;volatile
  3266  032D  00F0               	movwf	??_isr
  3267  032E  0870               	movf	??_isr,w
  3268  032F  00C9               	movwf	_ADC2
  3269  0330                     i1l1580:
  3270                           
  3271                           ;lab3.c: 85:             bandera1 = 3;
  3272  0330  111F               	bcf	31,2	;volatile
  3273  0331                     i1l1582:
  3274                           
  3275                           ;lab3.c: 86:         } else if (bandera1 == 3){
  3276  0331  01FA               	clrf	_bandera
  3277  0332  0AFA               	incf	_bandera,f
  3278  0333                     i1l1584:
  3279                           
  3280                           ;lab3.c: 88:             bandera1 = 4;
  3281  0333  130C               	bcf	12,6	;volatile
  3282  0334                     i1l1586:
  3283                           
  3284                           ;lab3.c: 89:         }
  3285  0334  149F               	bsf	31,1	;volatile
  3286  0335                     i1l1588:
  3287                           
  3288                           ;lab3.c: 91:             TXREG = C21 + 48;
  3289  0335  1E8C               	btfss	12,5	;volatile
  3290  0336  2B38               	goto	u79_21
  3291  0337  2B39               	goto	u79_20
  3292  0338                     u79_21:
  3293  0338  2B78               	goto	i1l1610
  3294  0339                     u79_20:
  3295  0339                     i1l1590:
  3296                           
  3297                           ;lab3.c: 93:         } else if (bandera1 == 5){
  3298  0339  1785               	bsf	5,7	;volatile
  3299  033A                     i1l1592:
  3300                           
  3301                           ;lab3.c: 94:             TXREG = C22 + 48;
  3302  033A  300D               	movlw	13
  3303  033B  061A               	xorwf	26,w	;volatile
  3304  033C  1D03               	btfss	3,2
  3305  033D  2B3F               	goto	u80_21
  3306  033E  2B40               	goto	u80_20
  3307  033F                     u80_21:
  3308  033F  2B73               	goto	i1l1608
  3309  0340                     u80_20:
  3310  0340                     i1l1594:
  3311                           
  3312                           ;lab3.c: 95:             bandera1 = 6;
  3313  0340  1385               	bcf	5,7	;volatile
  3314  0341                     i1l1596:
  3315                           
  3316                           ;lab3.c: 96:         } else if (bandera1 == 6){
  3317  0341  302B               	movlw	43
  3318  0342  0679               	xorwf	_RC_temp,w
  3319  0343  1D03               	btfss	3,2
  3320  0344  2B46               	goto	u81_21
  3321  0345  2B47               	goto	u81_20
  3322  0346                     u81_21:
  3323  0346  2B59               	goto	i1l1602
  3324  0347                     u81_20:
  3325  0347                     i1l1598:
  3326                           
  3327                           ;lab3.c: 97:             TXREG = C23 + 48;
  3328  0347  3001               	movlw	1
  3329  0348  07B6               	addwf	_contador,f
  3330  0349  1803               	skipnc
  3331  034A  0AB7               	incf	_contador+1,f
  3332  034B  3000               	movlw	0
  3333  034C  07B7               	addwf	_contador+1,f
  3334                           
  3335                           ;lab3.c: 98:             bandera1 = 7;
  3336  034D  3001               	movlw	1
  3337  034E  0237               	subwf	_contador+1,w
  3338  034F  3000               	movlw	0
  3339  0350  1903               	skipnz
  3340  0351  0236               	subwf	_contador,w
  3341  0352  1C03               	skipc
  3342  0353  2B55               	goto	u82_21
  3343  0354  2B56               	goto	u82_20
  3344  0355                     u82_21:
  3345  0355  2B78               	goto	i1l1610
  3346  0356                     u82_20:
  3347  0356                     i1l1600:
  3348                           
  3349                           ;lab3.c: 99:         } else if (bandera1 == 7){
  3350  0356  01B6               	clrf	_contador
  3351  0357  01B7               	clrf	_contador+1
  3352  0358  2B78               	goto	i1l1610
  3353  0359                     i1l1602:
  3354  0359  302D               	movlw	45
  3355  035A  0679               	xorwf	_RC_temp,w
  3356  035B  1D03               	btfss	3,2
  3357  035C  2B5E               	goto	u83_21
  3358  035D  2B5F               	goto	u83_20
  3359  035E                     u83_21:
  3360  035E  2B78               	goto	i1l203
  3361  035F                     u83_20:
  3362  035F                     i1l1604:
  3363                           
  3364                           ;lab3.c: 102:         }
  3365  035F  3001               	movlw	1
  3366  0360  02B6               	subwf	_contador,f
  3367  0361  3000               	movlw	0
  3368  0362  1C03               	skipc
  3369  0363  03B7               	decf	_contador+1,f
  3370  0364  02B7               	subwf	_contador+1,f
  3371                           
  3372                           ;lab3.c: 104:     TXIE = 0;
  3373  0365  3001               	movlw	1
  3374  0366  0237               	subwf	_contador+1,w
  3375  0367  3000               	movlw	0
  3376  0368  1903               	skipnz
  3377  0369  0236               	subwf	_contador,w
  3378  036A  1C03               	skipc
  3379  036B  2B6D               	goto	u84_21
  3380  036C  2B6E               	goto	u84_20
  3381  036D                     u84_21:
  3382  036D  2B78               	goto	i1l203
  3383  036E                     u84_20:
  3384  036E                     i1l1606:
  3385                           
  3386                           ;lab3.c: 105:     }
  3387  036E  30FF               	movlw	255
  3388  036F  00B6               	movwf	_contador
  3389  0370  3000               	movlw	0
  3390  0371  00B7               	movwf	_contador+1
  3391  0372  2B78               	goto	i1l1610
  3392  0373                     i1l1608:
  3393                           
  3394                           ;lab3.c: 110:     Setup();
  3395  0373  081A               	movf	26,w	;volatile
  3396  0374  00F0               	movwf	??_isr
  3397  0375  0870               	movf	??_isr,w
  3398  0376  00F9               	movwf	_RC_temp
  3399  0377  2B78               	goto	i1l1610
  3400  0378                     i1l203:	
  3401                           ;lab3.c: 111:     while(1){
  3402                           
  3403  0378                     i1l1610:
  3404                           
  3405                           ;lab3.c: 114:             TXIE = 1;
  3406  0378  1E0C               	btfss	12,4	;volatile
  3407  0379  2B7B               	goto	u85_21
  3408  037A  2B7C               	goto	u85_20
  3409  037B                     u85_21:
  3410  037B  2BE6               	goto	i1l1660
  3411  037C                     u85_20:
  3412  037C                     i1l1612:
  3413                           
  3414                           ;lab3.c: 115:             }
  3415  037C  0878               	movf	_bandera1,w
  3416  037D  1D03               	btfss	3,2
  3417  037E  2B80               	goto	u86_21
  3418  037F  2B81               	goto	u86_20
  3419  0380                     u86_21:
  3420  0380  2B87               	goto	i1l1618
  3421  0381                     u86_20:
  3422  0381                     i1l1614:
  3423                           
  3424                           ;lab3.c: 116: 
  3425  0381  0842               	movf	_C11,w
  3426  0382  3E30               	addlw	48
  3427  0383  0099               	movwf	25	;volatile
  3428  0384                     i1l1616:
  3429                           
  3430                           ;lab3.c: 117: 
  3431  0384  01F8               	clrf	_bandera1
  3432  0385  0AF8               	incf	_bandera1,f
  3433                           
  3434                           ;lab3.c: 118:     C11 = ADC1 / 51;
  3435  0386  2BE3               	goto	i1l1658
  3436  0387                     i1l1618:
  3437  0387  0378               	decf	_bandera1,w
  3438  0388  1D03               	btfss	3,2
  3439  0389  2B8B               	goto	u87_21
  3440  038A  2B8C               	goto	u87_20
  3441  038B                     u87_21:
  3442  038B  2B94               	goto	i1l1624
  3443  038C                     u87_20:
  3444  038C                     i1l1620:
  3445                           
  3446                           ;lab3.c: 119:     C12 = ((ADC1 * 100 / 51) - (C11*100))/10;
  3447  038C  0841               	movf	_C12,w
  3448  038D  3E30               	addlw	48
  3449  038E  0099               	movwf	25	;volatile
  3450  038F                     i1l1622:
  3451                           
  3452                           ;lab3.c: 120:     C13 = ((ADC1 * 100 / 51) - (C11*100) - (C12*10));
  3453  038F  3002               	movlw	2
  3454  0390  00F0               	movwf	??_isr
  3455  0391  0870               	movf	??_isr,w
  3456  0392  00F8               	movwf	_bandera1
  3457                           
  3458                           ;lab3.c: 121: 
  3459  0393  2BE3               	goto	i1l1658
  3460  0394                     i1l1624:
  3461  0394  3002               	movlw	2
  3462  0395  0678               	xorwf	_bandera1,w
  3463  0396  1D03               	btfss	3,2
  3464  0397  2B99               	goto	u88_21
  3465  0398  2B9A               	goto	u88_20
  3466  0399                     u88_21:
  3467  0399  2BA2               	goto	i1l1630
  3468  039A                     u88_20:
  3469  039A                     i1l1626:
  3470                           
  3471                           ;lab3.c: 122:     C21 = ADC2 / 51;
  3472  039A  0840               	movf	_C13,w
  3473  039B  3E30               	addlw	48
  3474  039C  0099               	movwf	25	;volatile
  3475  039D                     i1l1628:
  3476                           
  3477                           ;lab3.c: 123:     C22 = (((ADC2 * 100) / 51) - (C21*100))/10;
  3478  039D  3003               	movlw	3
  3479  039E  00F0               	movwf	??_isr
  3480  039F  0870               	movf	??_isr,w
  3481  03A0  00F8               	movwf	_bandera1
  3482                           
  3483                           ;lab3.c: 124:     C23 = (((ADC2 * 100) / 51) - (C21*100) - (C22*10));
  3484  03A1  2BE3               	goto	i1l1658
  3485  03A2                     i1l1630:
  3486  03A2  3003               	movlw	3
  3487  03A3  0678               	xorwf	_bandera1,w
  3488  03A4  1D03               	btfss	3,2
  3489  03A5  2BA7               	goto	u89_21
  3490  03A6  2BA8               	goto	u89_20
  3491  03A7                     u89_21:
  3492  03A7  2BAF               	goto	i1l1634
  3493  03A8                     u89_20:
  3494  03A8                     i1l1632:
  3495                           
  3496                           ;lab3.c: 125: 
  3497  03A8  302D               	movlw	45
  3498  03A9  0099               	movwf	25	;volatile
  3499                           
  3500                           ;lab3.c: 126:     C31 = contador / 51;
  3501  03AA  3004               	movlw	4
  3502  03AB  00F0               	movwf	??_isr
  3503  03AC  0870               	movf	??_isr,w
  3504  03AD  00F8               	movwf	_bandera1
  3505                           
  3506                           ;lab3.c: 127:     C32 = ((contador * 100 / 51) - (C31*100))/10;
  3507  03AE  2BE3               	goto	i1l1658
  3508  03AF                     i1l1634:
  3509  03AF  3004               	movlw	4
  3510  03B0  0678               	xorwf	_bandera1,w
  3511  03B1  1D03               	btfss	3,2
  3512  03B2  2BB4               	goto	u90_21
  3513  03B3  2BB5               	goto	u90_20
  3514  03B4                     u90_21:
  3515  03B4  2BBD               	goto	i1l1640
  3516  03B5                     u90_20:
  3517  03B5                     i1l1636:
  3518                           
  3519                           ;lab3.c: 129: 
  3520  03B5  083F               	movf	_C21,w
  3521  03B6  3E30               	addlw	48
  3522  03B7  0099               	movwf	25	;volatile
  3523  03B8                     i1l1638:
  3524                           
  3525                           ;lab3.c: 130:     if (C12 > 9){
  3526  03B8  3005               	movlw	5
  3527  03B9  00F0               	movwf	??_isr
  3528  03BA  0870               	movf	??_isr,w
  3529  03BB  00F8               	movwf	_bandera1
  3530                           
  3531                           ;lab3.c: 131:         C12 = 9;
  3532  03BC  2BE3               	goto	i1l1658
  3533  03BD                     i1l1640:
  3534  03BD  3005               	movlw	5
  3535  03BE  0678               	xorwf	_bandera1,w
  3536  03BF  1D03               	btfss	3,2
  3537  03C0  2BC2               	goto	u91_21
  3538  03C1  2BC3               	goto	u91_20
  3539  03C2                     u91_21:
  3540  03C2  2BCB               	goto	i1l1646
  3541  03C3                     u91_20:
  3542  03C3                     i1l1642:
  3543                           
  3544                           ;lab3.c: 132:     }
  3545  03C3  083E               	movf	_C22,w
  3546  03C4  3E30               	addlw	48
  3547  03C5  0099               	movwf	25	;volatile
  3548  03C6                     i1l1644:
  3549                           
  3550                           ;lab3.c: 133:     if (C13 > 9){
  3551  03C6  3006               	movlw	6
  3552  03C7  00F0               	movwf	??_isr
  3553  03C8  0870               	movf	??_isr,w
  3554  03C9  00F8               	movwf	_bandera1
  3555                           
  3556                           ;lab3.c: 134:         C13 = 9;
  3557  03CA  2BE3               	goto	i1l1658
  3558  03CB                     i1l1646:
  3559  03CB  3006               	movlw	6
  3560  03CC  0678               	xorwf	_bandera1,w
  3561  03CD  1D03               	btfss	3,2
  3562  03CE  2BD0               	goto	u92_21
  3563  03CF  2BD1               	goto	u92_20
  3564  03D0                     u92_21:
  3565  03D0  2BD9               	goto	i1l1652
  3566  03D1                     u92_20:
  3567  03D1                     i1l1648:
  3568                           
  3569                           ;lab3.c: 135:     }
  3570  03D1  083D               	movf	_C23,w
  3571  03D2  3E30               	addlw	48
  3572  03D3  0099               	movwf	25	;volatile
  3573  03D4                     i1l1650:
  3574                           
  3575                           ;lab3.c: 136:     if (C22 > 9){
  3576  03D4  3007               	movlw	7
  3577  03D5  00F0               	movwf	??_isr
  3578  03D6  0870               	movf	??_isr,w
  3579  03D7  00F8               	movwf	_bandera1
  3580                           
  3581                           ;lab3.c: 137:         C22 = 9;
  3582  03D8  2BE3               	goto	i1l1658
  3583  03D9                     i1l1652:
  3584  03D9  3007               	movlw	7
  3585  03DA  0678               	xorwf	_bandera1,w
  3586  03DB  1D03               	btfss	3,2
  3587  03DC  2BDE               	goto	u93_21
  3588  03DD  2BDF               	goto	u93_20
  3589  03DE                     u93_21:
  3590  03DE  2BE3               	goto	i1l214
  3591  03DF                     u93_20:
  3592  03DF                     i1l1654:
  3593                           
  3594                           ;lab3.c: 138:     }
  3595  03DF  300D               	movlw	13
  3596  03E0  0099               	movwf	25	;volatile
  3597  03E1                     i1l1656:
  3598                           
  3599                           ;lab3.c: 139:     if (C23 > 9){
  3600  03E1  01F8               	clrf	_bandera1
  3601  03E2  2BE3               	goto	i1l1658
  3602  03E3                     i1l214:
  3603  03E3                     i1l1658:
  3604                           
  3605                           ;lab3.c: 142: 
  3606  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  3607  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  3608  03E5  120C               	bcf	12,4	;volatile
  3609  03E6                     i1l1660:
  3610                           
  3611                           ;lab3.c: 144:     Lcd_Write_Char(C11 +48);
  3612  03E6  178B               	bsf	11,7	;volatile
  3613  03E7                     i1l220:
  3614  03E7  0872               	movf	??_isr+2,w
  3615  03E8  008A               	movwf	10
  3616  03E9  0E71               	swapf	??_isr+1,w
  3617  03EA  0083               	movwf	3
  3618  03EB  0EFE               	swapf	btemp,f
  3619  03EC  0E7E               	swapf	btemp,w
  3620  03ED  0009               	retfie
  3621  03EE                     __end_of_isr:
  3622  007E                     btemp	set	126	;btemp
  3623  007E                     wtemp0	set	126
  3624                           
  3625                           	psect	intentry
  3626  0004                     __pintentry:	
  3627                           ;incstack = 0
  3628                           ; Regs used in _isr: [wreg+status,2+status,0]
  3629                           
  3630  0004                     interrupt_function:
  3631  007E                     saved_w	set	btemp
  3632  0004  00FE               	movwf	btemp
  3633  0005  0E03               	swapf	3,w
  3634  0006  00F1               	movwf	??_isr+1
  3635  0007  080A               	movf	10,w
  3636  0008  00F2               	movwf	??_isr+2
  3637  0009  120A  118A  2B0E   	ljmp	_isr
  3638                           
  3639                           	psect	config
  3640                           
  3641                           ;Config register CONFIG1 @ 0x2007
  3642                           ;	Oscillator Selection bits
  3643                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3644                           ;	Watchdog Timer Enable bit
  3645                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3646                           ;	Power-up Timer Enable bit
  3647                           ;	PWRTE = OFF, PWRT disabled
  3648                           ;	RE3/MCLR pin function select bit
  3649                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3650                           ;	Code Protection bit
  3651                           ;	CP = OFF, Program memory code protection is disabled
  3652                           ;	Data Code Protection bit
  3653                           ;	CPD = OFF, Data memory code protection is disabled
  3654                           ;	Brown Out Reset Selection bits
  3655                           ;	BOREN = OFF, BOR disabled
  3656                           ;	Internal External Switchover bit
  3657                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3658                           ;	Fail-Safe Clock Monitor Enabled bit
  3659                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3660                           ;	Low Voltage Programming Enable bit
  3661                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3662                           ;	In-Circuit Debugger Mode bit
  3663                           ;	DEBUG = 0x1, unprogrammed default
  3664  2007                     	org	8199
  3665  2007  20D4               	dw	8404
  3666                           
  3667                           ;Config register CONFIG2 @ 0x2008
  3668                           ;	Brown-out Reset Selection bit
  3669                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3670                           ;	Flash Program Memory Self Write Enable bits
  3671                           ;	WRT = OFF, Write protection off
  3672  2008                     	org	8200
  3673  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     22      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___awdiv
    _main->___lwdiv
    ___lwdiv->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___lwdiv->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Set_Cursor
    _Setup->_Lcd_Write_String

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    8485
                                             10 BANK0     12    12      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                              _Setup
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1756
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              7 COMMON     1     1      0
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     548
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1516
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0    2127
                                              3 BANK0      1     1      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _initADC
                          _initUSART
 ---------------------------------------------------------------------------------
 (2) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     408
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1604
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _initADC
     _initUSART
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 22:45:38 2021

                        _a 0038                          pc 0002             ___bmul@product 0075  
                       l20 0581                         l21 0586                         l22 058B  
                       l23 0590                         l40 06B8                         l24 0595  
                       l16 0572                         l25 059A                         l18 0577  
                       l26 05C1                         l19 057C                         l52 06E2  
                       l37 0704                         l46 0681                         l49 0567  
                       l58 065B                         l83 069E               ___awdiv@sign 0027  
                       fsr 0004        ___wmul@multiplicand 0075                        _C11 0042  
                      _C12 0041                        _C13 0040                        _C21 003F  
                      _C22 003E                        _C23 003D                        _C31 003C  
                      _C32 003B                        _C33 003A                        l322 0618  
                      l227 0233                        l236 04A0                        l324 0632  
                      l228 023D                        l229 0247                        l348 06CD  
                      l475 0509                        l594 0607                        _RA7 002F  
                      _RE0 0048                        _RE1 0049                        u600 04B3  
                      u601 04B2                        u610 04C4                        u611 04C3  
                      u630 04D6                        u710 05DE                        u631 04D5  
                      u711 05DD                        u625 04C8                        u705 05D0  
                      u650 04E7                        u570 06BF                        u730 05EF  
                      u651 04E6                        u571 06BE                        u731 05EE  
                      u580 06CC                        u645 04D7                        u581 06CB  
                      u725 05DF                        u670 04FB                        u590 04A8  
                      u750 0603                        u671 04FA                        u655 04E3  
                      u591 04A7                        u751 0602                        u735 05EB  
                      u680 0500                        u681 04FF                        u665 04EF  
                      u745 05F7                        u690 05CC                        u691 05CB  
                      u990 0664                        u991 0663                        _isr 030E  
                      fsr0 0004                        indf 0000                       l2000 05A7  
                     l1320 0570                       l1324 059F                       l1316 0569  
                     l1500 04B8                       l1318 056D                       l1510 04CE  
                     l1502 04BC                       l1520 04EE                       l1512 04D2  
                     l1504 04BE                       l1522 04F5                       l1514 04D6  
                     l1506 04C4                       l1380 068C                       l1372 0682  
                     l1516 04E7                       l1508 04C7                       l1524 04FB  
                     l1540 05D6                       l1532 05C2                       l1390 0697  
                     l1382 068F                       l1374 0686                       l1526 0500  
                     l1518 04ED                       l1550 05F6                       l1542 05DA  
                     l1534 05C6                       l1800 052B                       l1392 0698  
                     l1384 0690                       l1376 0688                       l1528 0505  
                     l1480 06C3                       l1552 05FD                       l1544 05DE  
                     l1536 05CC                       l1810 0555                       l1802 0536  
                     l1394 069B                       l1386 0693                       l1378 0689  
                     l1490 04A4                       l1482 06C5                       l1474 06BA  
                     l1546 05EF                       l1538 05CF                       l1554 0603  
                     l1812 055B                       l1804 0543                       l1820 0646  
                     l1396 069C                       l1388 0696                       l1492 04A8  
                     l1484 06CC                       l1476 06BB                       l1548 05F5  
                     l1814 0561                       l1806 0549                       l1822 064E  
                     l1398 069D                       l1830 0400                       l1494 04AD  
                     l1478 06BF                       l1910 0030                       l1902 001F  
                     _ADC1 004A                       l1760 0700                       l1808 054F  
                     l1816 0636                       l1840 041A                       l1832 0403  
                     l1824 03EE                       l1496 04AF                       l1488 04A1  
                     l1920 00F2                       l1912 0047                       l1904 0024  
                     _ADC2 0049                       l1770 06B5                       l1762 06A0  
                     l1818 0639                       l1850 042C                       l1842 0420  
                     l1834 040F                       l1826 03F9                       l1498 04B3  
                     l1930 01D6                       l1922 0131                       l1914 0086  
                     l1906 002C                       l1764 06A3                       l1780 06DF  
                     l1772 06CF                       l1860 0438                       l1852 0430  
                     l1844 0426                       l1836 0414                       l1828 03FD  
                     l1940 0243                       l1932 01E9                       l1924 0144  
                     l1916 0099                       l1908 002D                       l1766 06A9  
                     l1790 0676                       l1782 065F                       l1774 06D2  
                     l1870 0464                       l1862 0444                       l1854 0431  
                     l1846 0429                       l1838 0417                       l1950 026E  
                     l1942 024D                       l1934 0229                       l1926 0187  
                     l1918 00DC                       l1768 06AC                       l1792 067B  
                     l1784 0664                       l1776 06D8                       l1880 048E  
                     l1872 046A                       l1864 044A                       l1856 0432  
                     l1848 042A                       l1960 02A1                       l1952 0277  
                     l1944 0251                       l1936 022F                       l1928 019A  
                     l1794 050A                       l1786 0669                       l1778 06DB  
                     l1882 049A                       l1874 0476                       l1866 0452  
                     l1858 0433                       l1890 061F                       l1970 02D7  
                     l1962 02AD                       l1954 0283                       l1946 0259  
                     l1938 0239                       l1796 0514                       l1788 0670  
                     l1876 047C                       l1868 0458                       l1892 0626  
                     l1884 0608                       l1972 02E0                       l1964 02B6  
                     l1956 028C                       l1948 0262                       l1798 051A  
                     l1878 0488                       l1894 062C                       l1886 060C  
                     l1974 02EC                       l1966 02C2                       l1958 0298  
                     l1888 0610                       l1976 02F5                       l1968 02CB  
                     l1978 0301                       _ADIF 0066                       ?_isr 0070  
                     STR_1 06EE                       STR_2 06E9                       STR_3 06F1  
                     STR_4 06E9                       STR_5 06F4                       STR_6 06E9  
                     u1000 0676                       u1001 0675                       u1010 065B  
                     u1011 065A                       u1020 0610                       u1100 024D  
                     u1021 060F                       u1101 024C                       u1050 062C  
                     u1051 062B                       u1035 0619                       u1060 002C  
                     u1117 06DD                       u1045 0620                       u1061 002B  
                     u1070 022F                       u1127 0510                       u1071 022E  
                     u1080 0239                       u1137 0520                       u1081 0238  
                     u1090 0243                       u1147 0531                       u1091 0242  
                     u1157 0540                       u1167 06B0                       _TMR0 0001  
                     _TXIE 0464                       _TXIF 0064          ?_Lcd_Write_String 0070  
                     _main 001F                       _ughh 0045                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 06B9  
        ___bmul@multiplier 0076                      ??_isr 0070                initADC@IRCF 0075  
                    ?_main 0070            __end_of___awdiv 050A                      _ANSEL 0188  
          ___awdiv@divisor 0022                      _CONTX 0044            __end_of___lwdiv 0608  
                    i1l203 0378                      i1l220 03E7                      i1l214 03E3  
          ___awdiv@counter 0026                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    u80_20 0340                      u80_21 033F                      u81_20 0347  
                    u81_21 0346    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    u90_20 03B5                      u82_20 0356                      u90_21 03B4  
                    u82_21 0355                      u91_20 03C3                      u83_20 035F  
                    u91_21 03C2                      u83_21 035E                      u92_20 03D1  
                    u84_20 036E                      u76_20 0313                      u92_21 03D0  
                    u84_21 036D                      u76_21 0312                      u93_20 03DF  
                    u85_20 037C                      u77_20 0320                      u93_21 03DE  
                    u85_21 037B                      u77_21 031F                      u86_20 0381  
                    u78_20 0325                      u86_21 0380                      u78_21 0324  
                    u87_20 038C                      u79_20 0339                      u87_21 038B  
                    u79_21 0338                      u88_20 039A                      u88_21 0399  
                    u89_20 03A8                      u89_21 03A7                      _TXREG 0019  
                    _Setup 03EE            __end_of_initADC 05C2                      _cont1 0047  
                    _cont2 0046                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0568           __end_of_Lcd_Port 0705  
          __initialization 000F               __end_of_main 030E                     ??_main 002A  
                   ?_Setup 0070                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E           ___awdiv@dividend 0024                     i1l1600 0356  
                   i1l1602 0359                     i1l1610 0378                     i1l1620 038C  
                   i1l1612 037C                     i1l1604 035F                     i1l1630 03A2  
                   i1l1622 038F                     i1l1614 0381                     i1l1606 036E  
                   i1l1640 03BD                     i1l1632 03A8                     i1l1624 0394  
                   i1l1616 0384                     i1l1608 0373                     i1l1650 03D4  
                   i1l1642 03C3                     i1l1634 03AF                     i1l1626 039A  
                   i1l1618 0387                     i1l1570 0320                     i1l1562 030E  
                   i1l1652 03D9                     i1l1644 03C6                     i1l1636 03B5  
                   i1l1628 039D                     i1l1660 03E6                     i1l1580 0330  
                   i1l1572 0325                     i1l1564 0313                     i1l1654 03DF  
                   i1l1646 03CB                     i1l1638 03B8                     i1l1590 0339  
                   i1l1582 0331                     i1l1574 0329                     i1l1566 0319  
                   i1l1656 03E1                     i1l1648 03D1                     i1l1592 033A  
                   i1l1584 0333                     i1l1576 032A                     i1l1568 031A  
                   i1l1658 03E3                     i1l1594 0340                     i1l1586 0334  
                   i1l1578 032C                     i1l1596 0341                     i1l1588 0335  
                   i1l1598 0347                  ??_Lcd_Cmd 0074                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0015                     ___bmul 06B9                     ___wmul 0608  
                ??___awdiv 0077                  ??___lwdiv 0077           ___awdiv@quotient 0028  
                ??_initADC 0073                     saved_w 007E            Lcd_Set_Cursor@a 0021  
          Lcd_Set_Cursor@b 0077    __end_of__initialization 001B        ___bmul@multiplicand 0073  
           __pcstackCOMMON 0070              __end_of_Setup 04A1             _Lcd_Set_Cursor 065C  
           _OPTION_REGbits 0081                    ??_Setup 0023                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0036         __size_of_initUSART 001D  
               __pmaintext 001F                    ?___bmul 0073                    ?___wmul 0073  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0682  
               ??_Lcd_Init 0020                 ??_Lcd_Port 0073                 __stringtab 06E3  
                  _RC_temp 0079             _Lcd_Write_Char 06CE                    _Lcd_Cmd 069F  
          __size_of___bmul 0015                    ___awdiv 04A1            __size_of___wmul 002B  
                  ___lwdiv 05C2                    _bandera 007A                  _ANSELbits 0188  
          ?_Lcd_Set_Cursor 0077          __end_of_initUSART 069F                    __ptext1 0608  
                  __ptext2 05C2                    __ptext3 06B9                    __ptext4 04A1  
                  __ptext5 03EE                    __ptext6 0682                    __ptext7 0568  
                  __ptext8 0633                    __ptext9 06CE                    _initADC 0568  
             __size_of_isr 00E0                    clrloop0 06F8     __end_of_Lcd_Write_Char 06E3  
     end_of_initialization 001B                  _RCSTAbits 0018                  Lcd_Port@a 0073  
                _TRISAbits 0085                  _TRISCbits 0087                  _TRISEbits 0089  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022          Lcd_Write_String@i 0020  
                _TXSTAbits 0098             __end_of___bmul 06CE             __end_of___wmul 0633  
         _Lcd_Write_String 0633                _BAUDCTLbits 0187        start_initialization 000F  
              __end_of_isr 03EE          __size_of_Lcd_Init 005E          __size_of_Lcd_Port 0006  
                 ??___bmul 0074                   ??___wmul 0077            Lcd_Write_Char@a 0075  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
                _banderaTX 0043                   ?_Lcd_Cmd 0070                  _main$1182 0034  
                _main$1183 0032           ___lwdiv@dividend 0024           ??_Lcd_Set_Cursor 0020  
                 ?___awdiv 0022                   ?___lwdiv 0022                  __pstrings 06E3  
                 ?_initADC 0070                  _initUSART 0682             __size_of_Setup 00B3  
         ___lwdiv@quotient 0026          interrupt_function 0004             ___wmul@product 0020  
                clear_ram0 06F7                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                 _ADCON0bits 001F                __stringbase 06E8  
        ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074                 ?_initUSART 0070  
                 _Lcd_Init 050A                   _Lcd_Port 06FF   __end_of_Lcd_Write_String 065C  
         __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069           __size_of___lwdiv 0046  
       __end_of__stringtab 06E9                   _bandera1 0078           __size_of_initADC 005A  
          ___lwdiv@divisor 0022            ___lwdiv@counter 0028                   __ptext10 065C  
                 __ptext11 050A                   __ptext12 069F                   __ptext13 06FF  
                 __ptext14 030E                   _contador 0036              __size_of_main 02EF  
             _var_contador 0048                 _INTCONbits 000B                ??_initUSART 0073  
                 intlevel1 0000                  stringcode 06E3         Lcd_Set_Cursor@temp 0022  
                 stringdir 06E3                   stringtab 06E3  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 13:43:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  000E                     	;# 
   467  000F                     	;# 
   468  0010                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0013                     	;# 
   472  0014                     	;# 
   473  0015                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  001D                     	;# 
   484  001E                     	;# 
   485  001F                     	;# 
   486  0081                     	;# 
   487  0085                     	;# 
   488  0086                     	;# 
   489  0087                     	;# 
   490  0088                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  0018                     _RCSTAbits	set	24
   530  0008                     _PORTD	set	8
   531  0005                     _PORTA	set	5
   532  001F                     _ADCON0	set	31
   533  000B                     _INTCONbits	set	11
   534  001F                     _ADCON0bits	set	31
   535  001E                     _ADRESH	set	30
   536  0049                     _RE1	set	73
   537  0048                     _RE0	set	72
   538  002B                     _RA3	set	43
   539  002C                     _RA4	set	44
   540  0066                     _ADIF	set	102
   541  008F                     _OSCCONbits	set	143
   542  009A                     _SPBRGH	set	154
   543  0099                     _SPBRG	set	153
   544  0098                     _TXSTAbits	set	152
   545  0089                     _TRISEbits	set	137
   546  0085                     _TRISAbits	set	133
   547  0089                     _TRISE	set	137
   548  0088                     _TRISD	set	136
   549  008C                     _PIE1bits	set	140
   550  0085                     _TRISA	set	133
   551  009F                     _ADCON1	set	159
   552  0187                     _BAUDCTLbits	set	391
   553  0188                     _ANSELbits	set	392
   554                           
   555                           	psect	strings
   556  01B0                     __pstrings:
   557  01B0                     stringtab:
   558  01B0                     __stringtab:
   559  01B0                     stringcode:	
   560                           ;	String table - string pointers are 1 byte each
   561                           
   562  01B0                     stringdir:
   563  01B0  3001               	movlw	high stringdir
   564  01B1  008A               	movwf	10
   565  01B2  0804               	movf	4,w
   566  01B3  0A84               	incf	4,f
   567  01B4  0782               	addwf	2,f
   568  01B5                     __stringbase:
   569  01B5  3400               	retlw	0
   570  01B6                     __end_of__stringtab:
   571  01B6                     STR_5:
   572  01B6  3477               	retlw	119	;'w'
   573  01B7  3477               	retlw	119	;'w'
   574  01B8  3477               	retlw	119	;'w'
   575  01B9  342E               	retlw	46	;'.'
   576  01BA  3465               	retlw	101	;'e'
   577  01BB  346C               	retlw	108	;'l'
   578  01BC  3465               	retlw	101	;'e'
   579  01BD  3463               	retlw	99	;'c'
   580  01BE  3474               	retlw	116	;'t'
   581  01BF  3472               	retlw	114	;'r'
   582  01C0  346F               	retlw	111	;'o'
   583  01C1  3453               	retlw	83	;'S'
   584  01C2  346F               	retlw	111	;'o'
   585  01C3  346D               	retlw	109	;'m'
   586  01C4  3465               	retlw	101	;'e'
   587  01C5  342E               	retlw	46	;'.'
   588  01C6  3463               	retlw	99	;'c'
   589  01C7  346F               	retlw	111	;'o'
   590  01C8  346D               	retlw	109	;'m'
   591  01C9  3400               	retlw	0
   592  01CA                     STR_1:
   593  01CA  344C               	retlw	76	;'L'
   594  01CB  3443               	retlw	67	;'C'
   595  01CC  3444               	retlw	68	;'D'
   596  01CD  3420               	retlw	32	;' '
   597  01CE  344C               	retlw	76	;'L'
   598  01CF  3469               	retlw	105	;'i'
   599  01D0  3462               	retlw	98	;'b'
   600  01D1  3472               	retlw	114	;'r'
   601  01D2  3461               	retlw	97	;'a'
   602  01D3  3472               	retlw	114	;'r'
   603  01D4  3479               	retlw	121	;'y'
   604  01D5  3420               	retlw	32	;' '
   605  01D6  3466               	retlw	102	;'f'
   606  01D7  346F               	retlw	111	;'o'
   607  01D8  3472               	retlw	114	;'r'
   608  01D9  3400               	retlw	0
   609  01DA                     STR_3:
   610  01DA  3444               	retlw	68	;'D'
   611  01DB  3465               	retlw	101	;'e'
   612  01DC  3476               	retlw	118	;'v'
   613  01DD  3465               	retlw	101	;'e'
   614  01DE  346C               	retlw	108	;'l'
   615  01DF  346F               	retlw	111	;'o'
   616  01E0  3470               	retlw	112	;'p'
   617  01E1  3465               	retlw	101	;'e'
   618  01E2  3464               	retlw	100	;'d'
   619  01E3  3420               	retlw	32	;' '
   620  01E4  3442               	retlw	66	;'B'
   621  01E5  3479               	retlw	121	;'y'
   622  01E6  3400               	retlw	0
   623  01E7                     STR_4:
   624  01E7  3465               	retlw	101	;'e'
   625  01E8  346C               	retlw	108	;'l'
   626  01E9  3465               	retlw	101	;'e'
   627  01EA  3463               	retlw	99	;'c'
   628  01EB  3474               	retlw	116	;'t'
   629  01EC  3472               	retlw	114	;'r'
   630  01ED  346F               	retlw	111	;'o'
   631  01EE  3453               	retlw	83	;'S'
   632  01EF  346F               	retlw	111	;'o'
   633  01F0  346D               	retlw	109	;'m'
   634  01F1  3465               	retlw	101	;'e'
   635  01F2  3400               	retlw	0
   636  01F3                     STR_2:
   637  01F3  344D               	retlw	77	;'M'
   638  01F4  3450               	retlw	80	;'P'
   639  01F5  344C               	retlw	76	;'L'
   640  01F6  3441               	retlw	65	;'A'
   641  01F7  3442               	retlw	66	;'B'
   642  01F8  3420               	retlw	32	;' '
   643  01F9  3458               	retlw	88	;'X'
   644  01FA  3443               	retlw	67	;'C'
   645  01FB  3438               	retlw	56	;'8'
   646  01FC  3400               	retlw	0
   647                           
   648                           	psect	cinit
   649  000F                     start_initialization:	
   650                           ; #config settings
   651                           
   652  000F                     __initialization:
   653                           
   654                           ; Clear objects allocated to COMMON
   655  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   656  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   657  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   658                           
   659                           ; Clear objects allocated to BANK0
   660  0012  1283               	bcf	3,5	;RP0=0, select bank0
   661  0013  1303               	bcf	3,6	;RP1=0, select bank0
   662  0014  01A6               	clrf	__pbssBANK0& (0+127)
   663  0015  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   664  0016                     end_of_initialization:	
   665                           ;End of C runtime variable initialization code
   666                           
   667  0016                     __end_of__initialization:
   668  0016  0183               	clrf	3
   669  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   670                           
   671                           	psect	bssCOMMON
   672  0078                     __pbssCOMMON:
   673  0078                     _a:
   674  0078                     	ds	2
   675  007A                     _bandera:
   676  007A                     	ds	1
   677                           
   678                           	psect	bssBANK0
   679  0026                     __pbssBANK0:
   680  0026                     _ADC2:
   681  0026                     	ds	1
   682  0027                     _ADC1:
   683  0027                     	ds	1
   684                           
   685                           	psect	cstackCOMMON
   686  0070                     __pcstackCOMMON:
   687  0070                     ?_Setup:
   688  0070                     ?_Lcd_Clear:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_Lcd_Write_String:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_Lcd_Shift_Left:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_Lcd_Shift_Right:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_Lcd_Write_Char:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_initADC:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_Lcd_Init:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_isr:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ??_isr:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_main:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_Lcd_Port:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_Lcd_Cmd:	
   722                           ; 1 bytes @ 0x0
   723                           
   724                           
   725                           ; 1 bytes @ 0x0
   726  0070                     	ds	3
   727  0073                     ??_initADC:
   728  0073                     ??_Lcd_Port:	
   729                           ; 1 bytes @ 0x3
   730                           
   731  0073                     Lcd_Port@a:	
   732                           ; 1 bytes @ 0x3
   733                           
   734                           
   735                           ; 1 bytes @ 0x3
   736  0073                     	ds	1
   737  0074                     ??_Lcd_Write_Char:
   738  0074                     ??_Lcd_Cmd:	
   739                           ; 1 bytes @ 0x4
   740                           
   741                           
   742                           ; 1 bytes @ 0x4
   743  0074                     	ds	1
   744  0075                     Lcd_Write_Char@temp:
   745  0075                     initADC@IRCF:	
   746                           ; 1 bytes @ 0x5
   747                           
   748                           
   749                           ; 1 bytes @ 0x5
   750  0075                     	ds	1
   751  0076                     Lcd_Cmd@a:
   752  0076                     Lcd_Write_Char@y:	
   753                           ; 1 bytes @ 0x6
   754                           
   755                           
   756                           ; 1 bytes @ 0x6
   757  0076                     	ds	1
   758  0077                     ??_Setup:
   759  0077                     ??_Lcd_Clear:	
   760                           ; 1 bytes @ 0x7
   761                           
   762  0077                     ?_Lcd_Set_Cursor:	
   763                           ; 1 bytes @ 0x7
   764                           
   765  0077                     ??_Lcd_Shift_Left:	
   766                           ; 1 bytes @ 0x7
   767                           
   768  0077                     ??_Lcd_Shift_Right:	
   769                           ; 1 bytes @ 0x7
   770                           
   771  0077                     Lcd_Set_Cursor@b:	
   772                           ; 1 bytes @ 0x7
   773                           
   774  0077                     Lcd_Write_Char@a:	
   775                           ; 1 bytes @ 0x7
   776                           
   777                           
   778                           ; 1 bytes @ 0x7
   779  0077                     	ds	1
   780  0078                     ??_Lcd_Write_String:
   781                           
   782                           	psect	cstackBANK0
   783  0020                     __pcstackBANK0:	
   784                           ; 1 bytes @ 0x8
   785                           
   786  0020                     ??_Lcd_Set_Cursor:
   787  0020                     ??_Lcd_Init:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0020                     Lcd_Write_String@i:	
   791                           ; 1 bytes @ 0x0
   792                           
   793                           
   794                           ; 2 bytes @ 0x0
   795  0020                     	ds	1
   796  0021                     Lcd_Set_Cursor@a:
   797                           
   798                           ; 1 bytes @ 0x1
   799  0021                     	ds	1
   800  0022                     Lcd_Set_Cursor@temp:
   801  0022                     Lcd_Write_String@a:	
   802                           ; 1 bytes @ 0x2
   803                           
   804                           
   805                           ; 1 bytes @ 0x2
   806  0022                     	ds	1
   807  0023                     ??_main:
   808                           
   809                           ; 1 bytes @ 0x3
   810  0023                     	ds	3
   811                           
   812                           	psect	maintext
   813  001A                     __pmaintext:	
   814 ;;
   815 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   816 ;;
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 70 in file "lab3.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : B00/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0
   835 ;;      Temps:          0       3       0       0       0
   836 ;;      Totals:         0       3       0       0       0
   837 ;;Total ram usage:        3 bytes
   838 ;; Hardware stack levels required when called:    5
   839 ;; This function calls:
   840 ;;		_Lcd_Clear
   841 ;;		_Lcd_Set_Cursor
   842 ;;		_Lcd_Shift_Left
   843 ;;		_Lcd_Shift_Right
   844 ;;		_Lcd_Write_Char
   845 ;;		_Lcd_Write_String
   846 ;;		_Setup
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _main
   854  001A                     _main:
   855  001A                     l1229:	
   856                           ;incstack = 0
   857                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   858                           
   859                           
   860                           ;lab3.c: 71:   }
   861  001A  120A  118A  225F  120A  118A  	fcall	_Setup
   862  001F                     l1231:
   863                           
   864                           ;lab3.c: 73: ;lab3.c: 74: void Setup(void){
   865  001F  120A  118A  2305  120A  118A  	fcall	_Lcd_Clear
   866  0024                     l1233:
   867                           
   868                           ;lab3.c: 75:     INTCONbits.GIE = 1;
   869  0024  01F7               	clrf	Lcd_Set_Cursor@b
   870  0025  0AF7               	incf	Lcd_Set_Cursor@b,f
   871  0026  3001               	movlw	1
   872  0027  120A  118A  2285  120A  118A  	fcall	_Lcd_Set_Cursor
   873                           
   874                           ;lab3.c: 76:     INTCONbits.PEIE = 1;
   875  002C  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   876  002D  120A  118A  2236  120A  118A  	fcall	_Lcd_Write_String
   877  0032                     l1235:
   878                           
   879                           ;lab3.c: 77:     ADCON0 = 0b10000011;
   880  0032  01F7               	clrf	Lcd_Set_Cursor@b
   881  0033  0AF7               	incf	Lcd_Set_Cursor@b,f
   882  0034  3002               	movlw	2
   883  0035  120A  118A  2285  120A  118A  	fcall	_Lcd_Set_Cursor
   884  003A                     l1237:
   885                           
   886                           ;lab3.c: 78:     ADCON1 = 0;
   887  003A  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   888  003B  120A  118A  2236  120A  118A  	fcall	_Lcd_Write_String
   889  0040                     l1239:
   890                           
   891                           ;lab3.c: 79:     TRISA = 0;
   892  0040  3015               	movlw	21
   893  0041  1283               	bcf	3,5	;RP0=0, select bank0
   894  0042  1303               	bcf	3,6	;RP1=0, select bank0
   895  0043  00A5               	movwf	??_main+2
   896  0044  304B               	movlw	75
   897  0045  00A4               	movwf	??_main+1
   898  0046  30BD               	movlw	189
   899  0047  00A3               	movwf	??_main
   900  0048                     u227:
   901  0048  0BA3               	decfsz	??_main,f
   902  0049  2848               	goto	u227
   903  004A  0BA4               	decfsz	??_main+1,f
   904  004B  2848               	goto	u227
   905  004C  0BA5               	decfsz	??_main+2,f
   906  004D  2848               	goto	u227
   907  004E  284F               	nop2
   908  004F                     l1241:
   909                           
   910                           ;lab3.c: 80:     PORTA = 0;
   911  004F  120A  118A  2305  120A  118A  	fcall	_Lcd_Clear
   912  0054                     l1243:
   913                           
   914                           ;lab3.c: 81:     PIE1bits.ADIE = 1;
   915  0054  01F7               	clrf	Lcd_Set_Cursor@b
   916  0055  0AF7               	incf	Lcd_Set_Cursor@b,f
   917  0056  3001               	movlw	1
   918  0057  120A  118A  2285  120A  118A  	fcall	_Lcd_Set_Cursor
   919  005C                     l1245:
   920                           
   921                           ;lab3.c: 82:     initADC(0);
   922  005C  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   923  005D  120A  118A  2236  120A  118A  	fcall	_Lcd_Write_String
   924  0062                     l1247:
   925                           
   926                           ;lab3.c: 83:     initADC(1);
   927  0062  01F7               	clrf	Lcd_Set_Cursor@b
   928  0063  0AF7               	incf	Lcd_Set_Cursor@b,f
   929  0064  3002               	movlw	2
   930  0065  120A  118A  2285  120A  118A  	fcall	_Lcd_Set_Cursor
   931  006A                     l1249:
   932                           
   933                           ;lab3.c: 84:     TRISD = 0x00;
   934  006A  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   935  006B  120A  118A  2236  120A  118A  	fcall	_Lcd_Write_String
   936                           
   937                           ;lab3.c: 85:     TRISE = 0;
   938  0070  3015               	movlw	21
   939  0071  1283               	bcf	3,5	;RP0=0, select bank0
   940  0072  1303               	bcf	3,6	;RP1=0, select bank0
   941  0073  00A5               	movwf	??_main+2
   942  0074  304B               	movlw	75
   943  0075  00A4               	movwf	??_main+1
   944  0076  30BD               	movlw	189
   945  0077  00A3               	movwf	??_main
   946  0078                     u237:
   947  0078  0BA3               	decfsz	??_main,f
   948  0079  2878               	goto	u237
   949  007A  0BA4               	decfsz	??_main+1,f
   950  007B  2878               	goto	u237
   951  007C  0BA5               	decfsz	??_main+2,f
   952  007D  2878               	goto	u237
   953  007E  287F               	nop2
   954  007F                     l1251:
   955                           
   956                           ;lab3.c: 86:     Lcd_Init();
   957  007F  120A  118A  2305  120A  118A  	fcall	_Lcd_Clear
   958  0084                     l1253:
   959                           
   960                           ;lab3.c: 87: }
   961  0084  01F7               	clrf	Lcd_Set_Cursor@b
   962  0085  0AF7               	incf	Lcd_Set_Cursor@b,f
   963  0086  3001               	movlw	1
   964  0087  120A  118A  2285  120A  118A  	fcall	_Lcd_Set_Cursor
   965  008C                     l1255:
   966  008C  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   967  008D  120A  118A  2236  120A  118A  	fcall	_Lcd_Write_String
   968  0092                     l1257:
   969  0092  01F8               	clrf	_a
   970  0093  01F9               	clrf	_a+1
   971  0094                     l1263:
   972  0094  3004               	movlw	4
   973  0095  1283               	bcf	3,5	;RP0=0, select bank0
   974  0096  1303               	bcf	3,6	;RP1=0, select bank0
   975  0097  00A5               	movwf	??_main+2
   976  0098  300C               	movlw	12
   977  0099  00A4               	movwf	??_main+1
   978  009A  3033               	movlw	51
   979  009B  00A3               	movwf	??_main
   980  009C                     u247:
   981  009C  0BA3               	decfsz	??_main,f
   982  009D  289C               	goto	u247
   983  009E  0BA4               	decfsz	??_main+1,f
   984  009F  289C               	goto	u247
   985  00A0  0BA5               	decfsz	??_main+2,f
   986  00A1  289C               	goto	u247
   987  00A2                     l1265:
   988  00A2  120A  118A  22F8  120A  118A  	fcall	_Lcd_Shift_Left
   989  00A7                     l1267:
   990  00A7  3001               	movlw	1
   991  00A8  07F8               	addwf	_a,f
   992  00A9  1803               	skipnc
   993  00AA  0AF9               	incf	_a+1,f
   994  00AB  3000               	movlw	0
   995  00AC  07F9               	addwf	_a+1,f
   996  00AD                     l1269:
   997  00AD  3000               	movlw	0
   998  00AE  0279               	subwf	_a+1,w
   999  00AF  300F               	movlw	15
  1000  00B0  1903               	skipnz
  1001  00B1  0278               	subwf	_a,w
  1002  00B2  1C03               	skipc
  1003  00B3  28B5               	goto	u201
  1004  00B4  28B6               	goto	u200
  1005  00B5                     u201:
  1006  00B5  2894               	goto	l1263
  1007  00B6                     u200:
  1008  00B6                     l1271:
  1009  00B6  01F8               	clrf	_a
  1010  00B7  01F9               	clrf	_a+1
  1011  00B8                     l1277:
  1012  00B8  3004               	movlw	4
  1013  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1014  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1015  00BB  00A5               	movwf	??_main+2
  1016  00BC  300C               	movlw	12
  1017  00BD  00A4               	movwf	??_main+1
  1018  00BE  3033               	movlw	51
  1019  00BF  00A3               	movwf	??_main
  1020  00C0                     u257:
  1021  00C0  0BA3               	decfsz	??_main,f
  1022  00C1  28C0               	goto	u257
  1023  00C2  0BA4               	decfsz	??_main+1,f
  1024  00C3  28C0               	goto	u257
  1025  00C4  0BA5               	decfsz	??_main+2,f
  1026  00C5  28C0               	goto	u257
  1027  00C6                     l1279:
  1028  00C6  120A  118A  22EB  120A  118A  	fcall	_Lcd_Shift_Right
  1029  00CB                     l1281:
  1030  00CB  3001               	movlw	1
  1031  00CC  07F8               	addwf	_a,f
  1032  00CD  1803               	skipnc
  1033  00CE  0AF9               	incf	_a+1,f
  1034  00CF  3000               	movlw	0
  1035  00D0  07F9               	addwf	_a+1,f
  1036  00D1                     l1283:
  1037  00D1  3000               	movlw	0
  1038  00D2  0279               	subwf	_a+1,w
  1039  00D3  300F               	movlw	15
  1040  00D4  1903               	skipnz
  1041  00D5  0278               	subwf	_a,w
  1042  00D6  1C03               	skipc
  1043  00D7  28D9               	goto	u211
  1044  00D8  28DA               	goto	u210
  1045  00D9                     u211:
  1046  00D9  28B8               	goto	l1277
  1047  00DA                     u210:
  1048  00DA                     l1285:
  1049  00DA  120A  118A  2305  120A  118A  	fcall	_Lcd_Clear
  1050  00DF  01F7               	clrf	Lcd_Set_Cursor@b
  1051  00E0  0AF7               	incf	Lcd_Set_Cursor@b,f
  1052  00E1  3002               	movlw	2
  1053  00E2  120A  118A  2285  120A  118A  	fcall	_Lcd_Set_Cursor
  1054  00E7  3065               	movlw	101
  1055  00E8  120A  118A  21FD  120A  118A  	fcall	_Lcd_Write_Char
  1056  00ED  3053               	movlw	83
  1057  00EE  120A  118A  21FD  120A  118A  	fcall	_Lcd_Write_Char
  1058  00F3                     l1287:
  1059  00F3  3015               	movlw	21
  1060  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1061  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1062  00F6  00A5               	movwf	??_main+2
  1063  00F7  304B               	movlw	75
  1064  00F8  00A4               	movwf	??_main+1
  1065  00F9  30BD               	movlw	189
  1066  00FA  00A3               	movwf	??_main
  1067  00FB                     u267:
  1068  00FB  0BA3               	decfsz	??_main,f
  1069  00FC  28FB               	goto	u267
  1070  00FD  0BA4               	decfsz	??_main+1,f
  1071  00FE  28FB               	goto	u267
  1072  00FF  0BA5               	decfsz	??_main+2,f
  1073  0100  28FB               	goto	u267
  1074  0101  2902               	nop2
  1075  0102  281F               	goto	l1231
  1076  0103  120A  118A  280C   	ljmp	start
  1077  0106                     __end_of_main:
  1078                           
  1079                           	psect	text1
  1080  025F                     __ptext1:	
  1081 ;; *************** function _Setup *****************
  1082 ;; Defined at:
  1083 ;;		line 110 in file "lab3.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    4
  1104 ;; This function calls:
  1105 ;;		_Lcd_Init
  1106 ;;		_initADC
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _Setup
  1114  025F                     _Setup:
  1115  025F                     l1181:	
  1116                           ;incstack = 0
  1117                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1118                           
  1119  025F  178B               	bsf	11,7	;volatile
  1120  0260  170B               	bsf	11,6	;volatile
  1121  0261                     l1183:
  1122  0261  3083               	movlw	131
  1123  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0264  009F               	movwf	31	;volatile
  1126  0265                     l1185:
  1127  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0266  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0267  019F               	clrf	31	;volatile
  1130  0268                     l1187:
  1131  0268  0185               	clrf	5	;volatile
  1132  0269                     l1189:
  1133  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1134  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1135  026B  0185               	clrf	5	;volatile
  1136  026C                     l1191:
  1137  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1138  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1139  026E  170C               	bsf	12,6	;volatile
  1140  026F                     l1193:
  1141  026F  3000               	movlw	0
  1142  0270  120A  118A  2106  120A  118A  	fcall	_initADC
  1143  0275                     l1195:
  1144  0275  3001               	movlw	1
  1145  0276  120A  118A  2106  120A  118A  	fcall	_initADC
  1146  027B                     l1197:
  1147  027B  1683               	bsf	3,5	;RP0=1, select bank1
  1148  027C  1303               	bcf	3,6	;RP1=0, select bank1
  1149  027D  0188               	clrf	8	;volatile
  1150  027E                     l1199:
  1151  027E  0189               	clrf	9	;volatile
  1152  027F                     l1201:
  1153  027F  120A  118A  2160  120A  118A  	fcall	_Lcd_Init
  1154  0284                     l77:
  1155  0284  0008               	return
  1156  0285                     __end_of_Setup:
  1157                           
  1158                           	psect	text2
  1159  0106                     __ptext2:	
  1160 ;; *************** function _initADC *****************
  1161 ;; Defined at:
  1162 ;;		line 4 in file "ADC.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  IRCF            1    wreg     unsigned char 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  IRCF            1    5[COMMON] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       0       0       0       0
  1177 ;;      Locals:         1       0       0       0       0
  1178 ;;      Temps:          2       0       0       0       0
  1179 ;;      Totals:         3       0       0       0       0
  1180 ;;Total ram usage:        3 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_Setup
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _initADC
  1192  0106                     _initADC:
  1193                           
  1194                           ;incstack = 0
  1195                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  1196                           ;initADC@IRCF stored from wreg
  1197  0106  00F5               	movwf	initADC@IRCF
  1198  0107                     l797:
  1199                           
  1200                           ;ADC.c: 6:     ADCON0 = 0b10000011;
  1201  0107  3083               	movlw	131
  1202  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1204  010A  009F               	movwf	31	;volatile
  1205  010B                     l799:
  1206                           
  1207                           ;ADC.c: 7:     ADCON1 = 0;
  1208  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1209  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1210  010D  019F               	clrf	31	;volatile
  1211  010E                     l801:
  1212                           
  1213                           ;ADC.c: 8:     PIE1bits.ADIE = 1;
  1214  010E  170C               	bsf	12,6	;volatile
  1215                           
  1216                           ;ADC.c: 9:     switch(IRCF){
  1217  010F  293D               	goto	l805
  1218  0110                     l134:	
  1219                           ;ADC.c: 10:         case 0:
  1220                           
  1221                           
  1222                           ;ADC.c: 11:             TRISAbits.TRISA0 = 1;
  1223  0110  1405               	bsf	5,0	;volatile
  1224                           
  1225                           ;ADC.c: 12:             ANSELbits.ANS0 = 1;
  1226  0111  1683               	bsf	3,5	;RP0=1, select bank3
  1227  0112  1703               	bsf	3,6	;RP1=1, select bank3
  1228  0113  1408               	bsf	8,0	;volatile
  1229                           
  1230                           ;ADC.c: 13:             break;
  1231  0114  295F               	goto	l144
  1232  0115                     l136:	
  1233                           ;ADC.c: 14:         case 1:
  1234                           
  1235                           
  1236                           ;ADC.c: 15:             TRISAbits.TRISA1 = 1;
  1237  0115  1485               	bsf	5,1	;volatile
  1238                           
  1239                           ;ADC.c: 16:             ANSELbits.ANS1 = 1;
  1240  0116  1683               	bsf	3,5	;RP0=1, select bank3
  1241  0117  1703               	bsf	3,6	;RP1=1, select bank3
  1242  0118  1488               	bsf	8,1	;volatile
  1243                           
  1244                           ;ADC.c: 17:             break;
  1245  0119  295F               	goto	l144
  1246  011A                     l137:	
  1247                           ;ADC.c: 18:         case 2:
  1248                           
  1249                           
  1250                           ;ADC.c: 19:             TRISAbits.TRISA2 = 1;
  1251  011A  1505               	bsf	5,2	;volatile
  1252                           
  1253                           ;ADC.c: 20:             ANSELbits.ANS2 = 1;
  1254  011B  1683               	bsf	3,5	;RP0=1, select bank3
  1255  011C  1703               	bsf	3,6	;RP1=1, select bank3
  1256  011D  1508               	bsf	8,2	;volatile
  1257                           
  1258                           ;ADC.c: 21:             break;
  1259  011E  295F               	goto	l144
  1260  011F                     l138:	
  1261                           ;ADC.c: 22:         case 3:
  1262                           
  1263                           
  1264                           ;ADC.c: 23:             TRISAbits.TRISA3 = 1;
  1265  011F  1585               	bsf	5,3	;volatile
  1266                           
  1267                           ;ADC.c: 24:             ANSELbits.ANS3 = 1;
  1268  0120  1683               	bsf	3,5	;RP0=1, select bank3
  1269  0121  1703               	bsf	3,6	;RP1=1, select bank3
  1270  0122  1588               	bsf	8,3	;volatile
  1271                           
  1272                           ;ADC.c: 25:             break;
  1273  0123  295F               	goto	l144
  1274  0124                     l139:	
  1275                           ;ADC.c: 26:         case 4:
  1276                           
  1277                           
  1278                           ;ADC.c: 27:             TRISAbits.TRISA5 = 1;
  1279  0124  1685               	bsf	5,5	;volatile
  1280                           
  1281                           ;ADC.c: 28:             ANSELbits.ANS4 = 1;
  1282  0125  1683               	bsf	3,5	;RP0=1, select bank3
  1283  0126  1703               	bsf	3,6	;RP1=1, select bank3
  1284  0127  1608               	bsf	8,4	;volatile
  1285                           
  1286                           ;ADC.c: 29:             break;
  1287  0128  295F               	goto	l144
  1288  0129                     l140:	
  1289                           ;ADC.c: 30:         case 5:
  1290                           
  1291                           
  1292                           ;ADC.c: 31:             TRISEbits.TRISE0 = 1;
  1293  0129  1409               	bsf	9,0	;volatile
  1294                           
  1295                           ;ADC.c: 32:             ANSELbits.ANS5 = 1;
  1296  012A  1683               	bsf	3,5	;RP0=1, select bank3
  1297  012B  1703               	bsf	3,6	;RP1=1, select bank3
  1298  012C  1688               	bsf	8,5	;volatile
  1299                           
  1300                           ;ADC.c: 33:             break;
  1301  012D  295F               	goto	l144
  1302  012E                     l141:	
  1303                           ;ADC.c: 34:         case 6:
  1304                           
  1305                           
  1306                           ;ADC.c: 35:             TRISEbits.TRISE1 = 1;
  1307  012E  1489               	bsf	9,1	;volatile
  1308                           
  1309                           ;ADC.c: 36:             ANSELbits.ANS6 = 1;
  1310  012F  1683               	bsf	3,5	;RP0=1, select bank3
  1311  0130  1703               	bsf	3,6	;RP1=1, select bank3
  1312  0131  1708               	bsf	8,6	;volatile
  1313                           
  1314                           ;ADC.c: 37:             break;
  1315  0132  295F               	goto	l144
  1316  0133                     l142:	
  1317                           ;ADC.c: 38:         case 7:
  1318                           
  1319                           
  1320                           ;ADC.c: 39:             TRISEbits.TRISE2 = 1;
  1321  0133  1509               	bsf	9,2	;volatile
  1322                           
  1323                           ;ADC.c: 40:             ANSELbits.ANS7 = 1;
  1324  0134  1683               	bsf	3,5	;RP0=1, select bank3
  1325  0135  1703               	bsf	3,6	;RP1=1, select bank3
  1326  0136  1788               	bsf	8,7	;volatile
  1327                           
  1328                           ;ADC.c: 41:             break;
  1329  0137  295F               	goto	l144
  1330  0138                     l143:	
  1331                           ;ADC.c: 42:         default:
  1332                           
  1333                           
  1334                           ;ADC.c: 43:             TRISAbits.TRISA0 = 1;
  1335  0138  1405               	bsf	5,0	;volatile
  1336                           
  1337                           ;ADC.c: 44:             ANSELbits.ANS0 = 1;
  1338  0139  1683               	bsf	3,5	;RP0=1, select bank3
  1339  013A  1703               	bsf	3,6	;RP1=1, select bank3
  1340  013B  1408               	bsf	8,0	;volatile
  1341                           
  1342                           ;ADC.c: 45:             break;
  1343  013C  295F               	goto	l144
  1344  013D                     l805:
  1345  013D  0875               	movf	initADC@IRCF,w
  1346  013E  00F3               	movwf	??_initADC
  1347  013F  01F4               	clrf	??_initADC+1
  1348                           
  1349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1350                           ; Switch size 1, requested type "simple"
  1351                           ; Number of cases is 1, Range of values is 0 to 0
  1352                           ; switch strategies available:
  1353                           ; Name         Instructions Cycles
  1354                           ; simple_byte            4     3 (average)
  1355                           ; direct_byte           11     8 (fixed)
  1356                           ; jumptable            260     6 (fixed)
  1357                           ;	Chosen strategy is simple_byte
  1358  0140  0874               	movf	??_initADC+1,w
  1359  0141  3A00               	xorlw	0	; case 0
  1360  0142  1903               	skipnz
  1361  0143  2945               	goto	l1309
  1362  0144  2938               	goto	l143
  1363  0145                     l1309:
  1364                           
  1365                           ; Switch size 1, requested type "simple"
  1366                           ; Number of cases is 8, Range of values is 0 to 7
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte           25    13 (average)
  1370                           ; direct_byte           32     8 (fixed)
  1371                           ; jumptable            260     6 (fixed)
  1372                           ;	Chosen strategy is simple_byte
  1373  0145  0873               	movf	??_initADC,w
  1374  0146  3A00               	xorlw	0	; case 0
  1375  0147  1903               	skipnz
  1376  0148  2910               	goto	l134
  1377  0149  3A01               	xorlw	1	; case 1
  1378  014A  1903               	skipnz
  1379  014B  2915               	goto	l136
  1380  014C  3A03               	xorlw	3	; case 2
  1381  014D  1903               	skipnz
  1382  014E  291A               	goto	l137
  1383  014F  3A01               	xorlw	1	; case 3
  1384  0150  1903               	skipnz
  1385  0151  291F               	goto	l138
  1386  0152  3A07               	xorlw	7	; case 4
  1387  0153  1903               	skipnz
  1388  0154  2924               	goto	l139
  1389  0155  3A01               	xorlw	1	; case 5
  1390  0156  1903               	skipnz
  1391  0157  2929               	goto	l140
  1392  0158  3A03               	xorlw	3	; case 6
  1393  0159  1903               	skipnz
  1394  015A  292E               	goto	l141
  1395  015B  3A01               	xorlw	1	; case 7
  1396  015C  1903               	skipnz
  1397  015D  2933               	goto	l142
  1398  015E  2938               	goto	l143
  1399  015F                     l144:
  1400  015F  0008               	return
  1401  0160                     __end_of_initADC:
  1402                           
  1403                           	psect	text3
  1404  0160                     __ptext3:	
  1405 ;; *************** function _Lcd_Init *****************
  1406 ;; Defined at:
  1407 ;;		line 46 in file "lcd.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0
  1423 ;;      Temps:          0       2       0       0       0
  1424 ;;      Totals:         0       2       0       0       0
  1425 ;;Total ram usage:        2 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    3
  1428 ;; This function calls:
  1429 ;;		_Lcd_Cmd
  1430 ;;		_Lcd_Port
  1431 ;; This function is called by:
  1432 ;;		_Setup
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _Lcd_Init
  1438  0160                     _Lcd_Init:
  1439  0160                     l1171:	
  1440                           ;incstack = 0
  1441                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1442                           
  1443                           
  1444                           ;lcd.c: 48:   Lcd_Port(0x00);
  1445  0160  3000               	movlw	0
  1446  0161  120A  118A  2312  120A  118A  	fcall	_Lcd_Port
  1447  0166                     l1173:
  1448                           
  1449                           ;lcd.c: 49:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1450  0166  3034               	movlw	52
  1451  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1453  0169  00A1               	movwf	??_Lcd_Init+1
  1454  016A  30F1               	movlw	241
  1455  016B  00A0               	movwf	??_Lcd_Init
  1456  016C                     u277:
  1457  016C  0BA0               	decfsz	??_Lcd_Init,f
  1458  016D  296C               	goto	u277
  1459  016E  0BA1               	decfsz	??_Lcd_Init+1,f
  1460  016F  296C               	goto	u277
  1461  0170                     l1175:
  1462                           
  1463                           ;lcd.c: 50:   Lcd_Cmd(0x030);
  1464  0170  3030               	movlw	48
  1465  0171  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1466                           
  1467                           ;lcd.c: 51:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1468  0176  300D               	movlw	13
  1469  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0179  00A1               	movwf	??_Lcd_Init+1
  1472  017A  30FB               	movlw	251
  1473  017B  00A0               	movwf	??_Lcd_Init
  1474  017C                     u287:
  1475  017C  0BA0               	decfsz	??_Lcd_Init,f
  1476  017D  297C               	goto	u287
  1477  017E  0BA1               	decfsz	??_Lcd_Init+1,f
  1478  017F  297C               	goto	u287
  1479  0180                     l1177:
  1480                           
  1481                           ;lcd.c: 52:   Lcd_Cmd(0x030);
  1482  0180  3030               	movlw	48
  1483  0181  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1484  0186                     l1179:
  1485                           
  1486                           ;lcd.c: 53:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1487  0186  301D               	movlw	29
  1488  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0189  00A1               	movwf	??_Lcd_Init+1
  1491  018A  3090               	movlw	144
  1492  018B  00A0               	movwf	??_Lcd_Init
  1493  018C                     u297:
  1494  018C  0BA0               	decfsz	??_Lcd_Init,f
  1495  018D  298C               	goto	u297
  1496  018E  0BA1               	decfsz	??_Lcd_Init+1,f
  1497  018F  298C               	goto	u297
  1498  0190  0000               	nop
  1499                           
  1500                           ;lcd.c: 54:   Lcd_Cmd(0x030);
  1501  0191  3030               	movlw	48
  1502  0192  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1503                           
  1504                           ;lcd.c: 57:   Lcd_Cmd(0x038);
  1505  0197  3038               	movlw	56
  1506  0198  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1507                           
  1508                           ;lcd.c: 58:   Lcd_Cmd(0x008);
  1509  019D  3008               	movlw	8
  1510  019E  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1511                           
  1512                           ;lcd.c: 59:   Lcd_Cmd(0x001);
  1513  01A3  3001               	movlw	1
  1514  01A4  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1515                           
  1516                           ;lcd.c: 60:   Lcd_Cmd(0x006);
  1517  01A9  3006               	movlw	6
  1518  01AA  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1519  01AF                     l103:
  1520  01AF  0008               	return
  1521  01B0                     __end_of_Lcd_Init:
  1522                           
  1523                           	psect	text4
  1524  0236                     __ptext4:	
  1525 ;; *************** function _Lcd_Write_String *****************
  1526 ;; Defined at:
  1527 ;;		line 79 in file "lcd.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  a               1    wreg     PTR unsigned char 
  1530 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
  1531 ;;		 -> STR_1(16), 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  a               1    2[BANK0 ] PTR unsigned char 
  1534 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
  1535 ;;		 -> STR_1(16), 
  1536 ;;  i               2    0[BANK0 ] int 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       0       0       0       0
  1547 ;;      Locals:         0       3       0       0       0
  1548 ;;      Temps:          0       0       0       0       0
  1549 ;;      Totals:         0       3       0       0       0
  1550 ;;Total ram usage:        3 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    3
  1553 ;; This function calls:
  1554 ;;		_Lcd_Write_Char
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _Lcd_Write_String
  1562  0236                     _Lcd_Write_String:
  1563                           
  1564                           ;incstack = 0
  1565                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1566                           ;Lcd_Write_String@a stored from wreg
  1567  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0238  00A2               	movwf	Lcd_Write_String@a
  1570  0239                     l1217:
  1571                           
  1572                           ;lcd.c: 79: void Lcd_Write_String(char *a);lcd.c: 80: {;lcd.c: 81:  int i;;lcd.c: 82:  f
      +                          or(i=0;a[i]!='\0';i++)
  1573  0239  01A0               	clrf	Lcd_Write_String@i
  1574  023A  01A1               	clrf	Lcd_Write_String@i+1
  1575  023B  2A51               	goto	l1223
  1576  023C                     l1219:
  1577                           
  1578                           ;lcd.c: 83:     Lcd_Write_Char(a[i]);
  1579  023C  0820               	movf	Lcd_Write_String@i,w
  1580  023D  0722               	addwf	Lcd_Write_String@a,w
  1581  023E  0084               	movwf	4
  1582  023F  120A  118A  21B0  120A  118A  	fcall	stringdir
  1583  0244  120A  118A  21FD  120A  118A  	fcall	_Lcd_Write_Char
  1584  0249                     l1221:
  1585  0249  3001               	movlw	1
  1586  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1587  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1588  024C  07A0               	addwf	Lcd_Write_String@i,f
  1589  024D  1803               	skipnc
  1590  024E  0AA1               	incf	Lcd_Write_String@i+1,f
  1591  024F  3000               	movlw	0
  1592  0250  07A1               	addwf	Lcd_Write_String@i+1,f
  1593  0251                     l1223:
  1594  0251  0820               	movf	Lcd_Write_String@i,w
  1595  0252  0722               	addwf	Lcd_Write_String@a,w
  1596  0253  0084               	movwf	4
  1597  0254  120A  118A  21B0  120A  118A  	fcall	stringdir
  1598  0259  3A00               	xorlw	0
  1599  025A  1D03               	skipz
  1600  025B  2A5D               	goto	u191
  1601  025C  2A5E               	goto	u190
  1602  025D                     u191:
  1603  025D  2A3C               	goto	l1219
  1604  025E                     u190:
  1605  025E                     l112:
  1606  025E  0008               	return
  1607  025F                     __end_of_Lcd_Write_String:
  1608                           
  1609                           	psect	text5
  1610  01FD                     __ptext5:	
  1611 ;; *************** function _Lcd_Write_Char *****************
  1612 ;; Defined at:
  1613 ;;		line 63 in file "lcd.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  a               1    wreg     unsigned char 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  a               1    7[COMMON] unsigned char 
  1618 ;;  y               1    6[COMMON] unsigned char 
  1619 ;;  temp            1    5[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         3       0       0       0       0
  1631 ;;      Temps:          1       0       0       0       0
  1632 ;;      Totals:         4       0       0       0       0
  1633 ;;Total ram usage:        4 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    2
  1636 ;; This function calls:
  1637 ;;		_Lcd_Port
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;;		_Lcd_Write_String
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _Lcd_Write_Char
  1646  01FD                     _Lcd_Write_Char:
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1650                           ;Lcd_Write_Char@a stored from wreg
  1651  01FD  00F7               	movwf	Lcd_Write_Char@a
  1652  01FE                     l1151:
  1653                           
  1654                           ;lcd.c: 63: void Lcd_Write_Char(char a);lcd.c: 64: {;lcd.c: 65:    char temp,y;;lcd.c: 6
      +                          6:    temp = a&0x0F;
  1655  01FE  0877               	movf	Lcd_Write_Char@a,w
  1656  01FF  390F               	andlw	15
  1657  0200  00F4               	movwf	??_Lcd_Write_Char
  1658  0201  0874               	movf	??_Lcd_Write_Char,w
  1659  0202  00F5               	movwf	Lcd_Write_Char@temp
  1660                           
  1661                           ;lcd.c: 67:    y = a&0xF0;
  1662  0203  0877               	movf	Lcd_Write_Char@a,w
  1663  0204  39F0               	andlw	240
  1664  0205  00F4               	movwf	??_Lcd_Write_Char
  1665  0206  0874               	movf	??_Lcd_Write_Char,w
  1666  0207  00F6               	movwf	Lcd_Write_Char@y
  1667  0208                     l1153:
  1668                           
  1669                           ;lcd.c: 68:             RE0 = 1;
  1670  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1672  020A  1409               	bsf	9,0	;volatile
  1673  020B                     l1155:
  1674                           
  1675                           ;lcd.c: 69:    Lcd_Port(y>>4);
  1676  020B  0876               	movf	Lcd_Write_Char@y,w
  1677  020C  00F4               	movwf	??_Lcd_Write_Char
  1678  020D  3004               	movlw	4
  1679  020E                     u165:
  1680  020E  1003               	clrc
  1681  020F  0CF4               	rrf	??_Lcd_Write_Char,f
  1682  0210  3EFF               	addlw	-1
  1683  0211  1D03               	skipz
  1684  0212  2A0E               	goto	u165
  1685  0213  0874               	movf	??_Lcd_Write_Char,w
  1686  0214  120A  118A  2312  120A  118A  	fcall	_Lcd_Port
  1687  0219                     l1157:
  1688                           
  1689                           ;lcd.c: 70:    RE1 = 1;
  1690  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1691  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1692  021B  1489               	bsf	9,1	;volatile
  1693  021C                     l1159:
  1694                           
  1695                           ;lcd.c: 71:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1696  021C  301A               	movlw	26
  1697  021D  00F4               	movwf	??_Lcd_Write_Char
  1698  021E                     u307:
  1699  021E  0BF4               	decfsz	??_Lcd_Write_Char,f
  1700  021F  2A1E               	goto	u307
  1701  0220  0000               	nop
  1702  0221                     l1161:
  1703                           
  1704                           ;lcd.c: 72:    RE1 = 0;
  1705  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0223  1089               	bcf	9,1	;volatile
  1708  0224                     l1163:
  1709                           
  1710                           ;lcd.c: 73:    Lcd_Port(temp);
  1711  0224  0875               	movf	Lcd_Write_Char@temp,w
  1712  0225  120A  118A  2312  120A  118A  	fcall	_Lcd_Port
  1713  022A                     l1165:
  1714                           
  1715                           ;lcd.c: 74:    RE1 = 1;
  1716  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1717  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1718  022C  1489               	bsf	9,1	;volatile
  1719  022D                     l1167:
  1720                           
  1721                           ;lcd.c: 75:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1722  022D  301A               	movlw	26
  1723  022E  00F4               	movwf	??_Lcd_Write_Char
  1724  022F                     u317:
  1725  022F  0BF4               	decfsz	??_Lcd_Write_Char,f
  1726  0230  2A2F               	goto	u317
  1727  0231  0000               	nop
  1728  0232                     l1169:
  1729                           
  1730                           ;lcd.c: 76:    RE1 = 0;
  1731  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0234  1089               	bcf	9,1	;volatile
  1734  0235                     l106:
  1735  0235  0008               	return
  1736  0236                     __end_of_Lcd_Write_Char:
  1737                           
  1738                           	psect	text6
  1739  02EB                     __ptext6:	
  1740 ;; *************** function _Lcd_Shift_Right *****************
  1741 ;; Defined at:
  1742 ;;		line 86 in file "lcd.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    3
  1763 ;; This function calls:
  1764 ;;		_Lcd_Cmd
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _Lcd_Shift_Right
  1772  02EB                     _Lcd_Shift_Right:
  1773  02EB                     l1227:	
  1774                           ;incstack = 0
  1775                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1776                           
  1777                           
  1778                           ;lcd.c: 88:  Lcd_Cmd(0x01);
  1779  02EB  3001               	movlw	1
  1780  02EC  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1781                           
  1782                           ;lcd.c: 89:  Lcd_Cmd(0x0C);
  1783  02F1  300C               	movlw	12
  1784  02F2  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1785  02F7                     l115:
  1786  02F7  0008               	return
  1787  02F8                     __end_of_Lcd_Shift_Right:
  1788                           
  1789                           	psect	text7
  1790  02F8                     __ptext7:	
  1791 ;; *************** function _Lcd_Shift_Left *****************
  1792 ;; Defined at:
  1793 ;;		line 92 in file "lcd.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    3
  1814 ;; This function calls:
  1815 ;;		_Lcd_Cmd
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           
  1822                           ;psect for function _Lcd_Shift_Left
  1823  02F8                     _Lcd_Shift_Left:
  1824  02F8                     l1225:	
  1825                           ;incstack = 0
  1826                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1827                           
  1828                           
  1829                           ;lcd.c: 94:  Lcd_Cmd(0x01);
  1830  02F8  3001               	movlw	1
  1831  02F9  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1832                           
  1833                           ;lcd.c: 95:  Lcd_Cmd(0x08);
  1834  02FE  3008               	movlw	8
  1835  02FF  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1836  0304                     l118:
  1837  0304  0008               	return
  1838  0305                     __end_of_Lcd_Shift_Left:
  1839                           
  1840                           	psect	text8
  1841  0285                     __ptext8:	
  1842 ;; *************** function _Lcd_Set_Cursor *****************
  1843 ;; Defined at:
  1844 ;;		line 31 in file "lcd.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  a               1    wreg     unsigned char 
  1847 ;;  b               1    7[COMMON] unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  a               1    1[BANK0 ] unsigned char 
  1850 ;;  temp            1    2[BANK0 ] unsigned char 
  1851 ;;  y               1    0        unsigned char 
  1852 ;;  z               1    0        unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         1       0       0       0       0
  1863 ;;      Locals:         0       2       0       0       0
  1864 ;;      Temps:          0       1       0       0       0
  1865 ;;      Totals:         1       3       0       0       0
  1866 ;;Total ram usage:        4 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    3
  1869 ;; This function calls:
  1870 ;;		_Lcd_Cmd
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _Lcd_Set_Cursor
  1878  0285                     _Lcd_Set_Cursor:
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1882                           ;Lcd_Set_Cursor@a stored from wreg
  1883  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0287  00A1               	movwf	Lcd_Set_Cursor@a
  1886  0288                     l1205:
  1887                           
  1888                           ;lcd.c: 31: void Lcd_Set_Cursor(char a, char b);lcd.c: 32: {;lcd.c: 33:  char temp,z,y;;
      +                          lcd.c: 34:  if(a == 1)
  1889  0288  0321               	decf	Lcd_Set_Cursor@a,w
  1890  0289  1D03               	btfss	3,2
  1891  028A  2A8C               	goto	u171
  1892  028B  2A8D               	goto	u170
  1893  028C                     u171:
  1894  028C  2A99               	goto	l1211
  1895  028D                     u170:
  1896  028D                     l1207:
  1897                           
  1898                           ;lcd.c: 35:  {;lcd.c: 36:    temp = 0x80 + b - 1;
  1899  028D  0877               	movf	Lcd_Set_Cursor@b,w
  1900  028E  3E7F               	addlw	127
  1901  028F  00A0               	movwf	??_Lcd_Set_Cursor
  1902  0290  0820               	movf	??_Lcd_Set_Cursor,w
  1903  0291  00A2               	movwf	Lcd_Set_Cursor@temp
  1904  0292                     l1209:
  1905                           
  1906                           ;lcd.c: 37:   Lcd_Cmd(temp);
  1907  0292  0822               	movf	Lcd_Set_Cursor@temp,w
  1908  0293  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1909                           
  1910                           ;lcd.c: 38:  }
  1911  0298  2AAA               	goto	l100
  1912  0299                     l1211:
  1913  0299  3002               	movlw	2
  1914  029A  0621               	xorwf	Lcd_Set_Cursor@a,w
  1915  029B  1D03               	btfss	3,2
  1916  029C  2A9E               	goto	u181
  1917  029D  2A9F               	goto	u180
  1918  029E                     u181:
  1919  029E  2AAA               	goto	l100
  1920  029F                     u180:
  1921  029F                     l1213:
  1922                           
  1923                           ;lcd.c: 40:  {;lcd.c: 41:   temp = 0xC0 + b - 1;
  1924  029F  0877               	movf	Lcd_Set_Cursor@b,w
  1925  02A0  3EBF               	addlw	191
  1926  02A1  00A0               	movwf	??_Lcd_Set_Cursor
  1927  02A2  0820               	movf	??_Lcd_Set_Cursor,w
  1928  02A3  00A2               	movwf	Lcd_Set_Cursor@temp
  1929  02A4                     l1215:
  1930                           
  1931                           ;lcd.c: 42:   Lcd_Cmd(temp);
  1932  02A4  0822               	movf	Lcd_Set_Cursor@temp,w
  1933  02A5  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1934  02AA                     l100:
  1935  02AA  0008               	return
  1936  02AB                     __end_of_Lcd_Set_Cursor:
  1937                           
  1938                           	psect	text9
  1939  0305                     __ptext9:	
  1940 ;; *************** function _Lcd_Clear *****************
  1941 ;; Defined at:
  1942 ;;		line 25 in file "lcd.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    3
  1963 ;; This function calls:
  1964 ;;		_Lcd_Cmd
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _Lcd_Clear
  1972  0305                     _Lcd_Clear:
  1973  0305                     l1203:	
  1974                           ;incstack = 0
  1975                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1976                           
  1977                           
  1978                           ;lcd.c: 27:  Lcd_Cmd(0);
  1979  0305  3000               	movlw	0
  1980  0306  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1981                           
  1982                           ;lcd.c: 28:  Lcd_Cmd(1);
  1983  030B  3001               	movlw	1
  1984  030C  120A  118A  22D1  120A  118A  	fcall	_Lcd_Cmd
  1985  0311                     l94:
  1986  0311  0008               	return
  1987  0312                     __end_of_Lcd_Clear:
  1988                           
  1989                           	psect	text10
  1990  02D1                     __ptext10:	
  1991 ;; *************** function _Lcd_Cmd *****************
  1992 ;; Defined at:
  1993 ;;		line 16 in file "lcd.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  a               1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  a               1    6[COMMON] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0
  2009 ;;      Temps:          2       0       0       0       0
  2010 ;;      Totals:         3       0       0       0       0
  2011 ;;Total ram usage:        3 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    2
  2014 ;; This function calls:
  2015 ;;		_Lcd_Port
  2016 ;; This function is called by:
  2017 ;;		_Lcd_Clear
  2018 ;;		_Lcd_Set_Cursor
  2019 ;;		_Lcd_Init
  2020 ;;		_Lcd_Shift_Right
  2021 ;;		_Lcd_Shift_Left
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _Lcd_Cmd
  2027  02D1                     _Lcd_Cmd:
  2028                           
  2029                           ;incstack = 0
  2030                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2031                           ;Lcd_Cmd@a stored from wreg
  2032  02D1  00F6               	movwf	Lcd_Cmd@a
  2033  02D2                     l1141:
  2034                           
  2035                           ;lcd.c: 16: void Lcd_Cmd(char a);lcd.c: 17: {;lcd.c: 18:  RE0 = 0;
  2036  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2037  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2038  02D4  1009               	bcf	9,0	;volatile
  2039  02D5                     l1143:
  2040                           
  2041                           ;lcd.c: 19:  Lcd_Port(a);
  2042  02D5  0876               	movf	Lcd_Cmd@a,w
  2043  02D6  120A  118A  2312  120A  118A  	fcall	_Lcd_Port
  2044  02DB                     l1145:
  2045                           
  2046                           ;lcd.c: 20:  RE1 = 1;
  2047  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2048  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2049  02DD  1489               	bsf	9,1	;volatile
  2050  02DE                     l1147:
  2051                           
  2052                           ;lcd.c: 21:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2053  02DE  300B               	movlw	11
  2054  02DF  00F5               	movwf	??_Lcd_Cmd+1
  2055  02E0  3062               	movlw	98
  2056  02E1  00F4               	movwf	??_Lcd_Cmd
  2057  02E2                     u327:
  2058  02E2  0BF4               	decfsz	??_Lcd_Cmd,f
  2059  02E3  2AE2               	goto	u327
  2060  02E4  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2061  02E5  2AE2               	goto	u327
  2062  02E6  0000               	nop
  2063  02E7                     l1149:
  2064                           
  2065                           ;lcd.c: 22:         RE1 = 0;
  2066  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2067  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2068  02E9  1089               	bcf	9,1	;volatile
  2069  02EA                     l91:
  2070  02EA  0008               	return
  2071  02EB                     __end_of_Lcd_Cmd:
  2072                           
  2073                           	psect	text11
  2074  0312                     __ptext11:	
  2075 ;; *************** function _Lcd_Port *****************
  2076 ;; Defined at:
  2077 ;;		line 12 in file "lcd.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  a               1    wreg     unsigned char 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  a               1    3[COMMON] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       0       0       0       0
  2092 ;;      Locals:         1       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0
  2094 ;;      Totals:         1       0       0       0       0
  2095 ;;Total ram usage:        1 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    1
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_Lcd_Cmd
  2102 ;;		_Lcd_Init
  2103 ;;		_Lcd_Write_Char
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _Lcd_Port
  2109  0312                     _Lcd_Port:
  2110                           
  2111                           ;incstack = 0
  2112                           ; Regs used in _Lcd_Port: [wreg]
  2113                           ;Lcd_Port@a stored from wreg
  2114  0312  00F3               	movwf	Lcd_Port@a
  2115  0313                     l1139:
  2116                           
  2117                           ;lcd.c: 12: void Lcd_Port(char a);lcd.c: 13: {;lcd.c: 14:  PORTD = a;
  2118  0313  0873               	movf	Lcd_Port@a,w
  2119  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0316  0088               	movwf	8	;volatile
  2122  0317                     l88:
  2123  0317  0008               	return
  2124  0318                     __end_of_Lcd_Port:
  2125                           
  2126                           	psect	text12
  2127  02AB                     __ptext12:	
  2128 ;; *************** function _isr *****************
  2129 ;; Defined at:
  2130 ;;		line 50 in file "lab3.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          3       0       0       0       0
  2147 ;;      Totals:         3       0       0       0       0
  2148 ;;Total ram usage:        3 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		Interrupt level 1
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _isr
  2159  02AB                     _isr:
  2160  02AB                     i1l1033:
  2161                           
  2162                           ;lab3.c: 51:     Lcd_Set_Cursor(1,1);
  2163  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2164  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2165  02AD  1F0C               	btfss	12,6	;volatile
  2166  02AE  2AB0               	goto	u12_21
  2167  02AF  2AB1               	goto	u12_20
  2168  02B0                     u12_21:
  2169  02B0  2ACA               	goto	i1l62
  2170  02B1                     u12_20:
  2171  02B1                     i1l1035:
  2172                           
  2173                           ;lab3.c: 52:     Lcd_Write_String("www.electroSome.com");
  2174  02B1  037A               	decf	_bandera,w
  2175  02B2  1D03               	btfss	3,2
  2176  02B3  2AB5               	goto	u13_21
  2177  02B4  2AB6               	goto	u13_20
  2178  02B5                     u13_21:
  2179  02B5  2ABF               	goto	i1l60
  2180  02B6                     u13_20:
  2181  02B6                     i1l1037:
  2182                           
  2183                           ;lab3.c: 53: 
  2184  02B6  01FA               	clrf	_bandera
  2185  02B7                     i1l1039:
  2186                           
  2187                           ;lab3.c: 54:     for(a=0;a<15;a++)
  2188  02B7  081E               	movf	30,w	;volatile
  2189  02B8  00F0               	movwf	??_isr
  2190  02B9  0870               	movf	??_isr,w
  2191  02BA  00A7               	movwf	_ADC1
  2192  02BB                     i1l1041:
  2193                           
  2194                           ;lab3.c: 55:     {
  2195  02BB  151F               	bsf	31,2	;volatile
  2196  02BC                     i1l1043:
  2197                           
  2198                           ;lab3.c: 56:         _delay((unsigned long)((300)*(8000000/4000.0)));
  2199  02BC  1605               	bsf	5,4	;volatile
  2200  02BD                     i1l1045:
  2201                           
  2202                           ;lab3.c: 57:         Lcd_Shift_Left();
  2203  02BD  1185               	bcf	5,3	;volatile
  2204                           
  2205                           ;lab3.c: 58:     }
  2206  02BE  2AC8               	goto	i1l1055
  2207  02BF                     i1l60:
  2208                           
  2209                           ;lab3.c: 59: 
  2210  02BF  01FA               	clrf	_bandera
  2211  02C0  0AFA               	incf	_bandera,f
  2212  02C1                     i1l1047:
  2213                           
  2214                           ;lab3.c: 60:     for(a=0;a<15;a++)
  2215  02C1  081E               	movf	30,w	;volatile
  2216  02C2  00F0               	movwf	??_isr
  2217  02C3  0870               	movf	??_isr,w
  2218  02C4  00A6               	movwf	_ADC2
  2219  02C5                     i1l1049:
  2220                           
  2221                           ;lab3.c: 61:     {
  2222  02C5  111F               	bcf	31,2	;volatile
  2223  02C6                     i1l1051:
  2224                           
  2225                           ;lab3.c: 62:         _delay((unsigned long)((300)*(8000000/4000.0)));
  2226  02C6  1205               	bcf	5,4	;volatile
  2227  02C7                     i1l1053:
  2228                           
  2229                           ;lab3.c: 63:         Lcd_Shift_Right();
  2230  02C7  1585               	bsf	5,3	;volatile
  2231  02C8                     i1l1055:
  2232                           
  2233                           ;lab3.c: 65: 
  2234  02C8  130C               	bcf	12,6	;volatile
  2235  02C9                     i1l1057:
  2236                           
  2237                           ;lab3.c: 66:     Lcd_Clear();
  2238  02C9  149F               	bsf	31,1	;volatile
  2239  02CA                     i1l62:
  2240  02CA  0872               	movf	??_isr+2,w
  2241  02CB  008A               	movwf	10
  2242  02CC  0E71               	swapf	??_isr+1,w
  2243  02CD  0083               	movwf	3
  2244  02CE  0EFE               	swapf	btemp,f
  2245  02CF  0E7E               	swapf	btemp,w
  2246  02D0  0009               	retfie
  2247  02D1                     __end_of_isr:
  2248  007E                     btemp	set	126	;btemp
  2249  007E                     wtemp0	set	126
  2250                           
  2251                           	psect	intentry
  2252  0004                     __pintentry:	
  2253                           ;incstack = 0
  2254                           ; Regs used in _isr: [wreg+status,2+status,0]
  2255                           
  2256  0004                     interrupt_function:
  2257  007E                     saved_w	set	btemp
  2258  0004  00FE               	movwf	btemp
  2259  0005  0E03               	swapf	3,w
  2260  0006  00F1               	movwf	??_isr+1
  2261  0007  080A               	movf	10,w
  2262  0008  00F2               	movwf	??_isr+2
  2263  0009  120A  118A  2AAB   	ljmp	_isr
  2264                           
  2265                           	psect	config
  2266                           
  2267                           ;Config register CONFIG1 @ 0x2007
  2268                           ;	Oscillator Selection bits
  2269                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2270                           ;	Watchdog Timer Enable bit
  2271                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2272                           ;	Power-up Timer Enable bit
  2273                           ;	PWRTE = OFF, PWRT disabled
  2274                           ;	RE3/MCLR pin function select bit
  2275                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2276                           ;	Code Protection bit
  2277                           ;	CP = OFF, Program memory code protection is disabled
  2278                           ;	Data Code Protection bit
  2279                           ;	CPD = OFF, Data memory code protection is disabled
  2280                           ;	Brown Out Reset Selection bits
  2281                           ;	BOREN = OFF, BOR disabled
  2282                           ;	Internal External Switchover bit
  2283                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2284                           ;	Fail-Safe Clock Monitor Enabled bit
  2285                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2286                           ;	Low Voltage Programming Enable bit
  2287                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2288                           ;	In-Circuit Debugger Mode bit
  2289                           ;	DEBUG = 0x1, unprogrammed default
  2290  2007                     	org	8199
  2291  2007  20D4               	dw	8404
  2292                           
  2293                           ;Config register CONFIG2 @ 0x2008
  2294                           ;	Brown-out Reset Selection bit
  2295                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2296                           ;	Flash Program Memory Self Write Enable bits
  2297                           ;	WRT = OFF, Write protection off
  2298  2008                     	org	8200
  2299  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      6       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _Setup->_Lcd_Init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1523
                                              3 BANK0      3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      81
                           _Lcd_Init
                            _initADC
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     422
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     112
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     776
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _initADC

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 13:43:16 2021

                        _a 0078                          pc 0002                         l91 02EA  
                       l77 0284                         l94 0311                         l88 0317  
                       fsr 0004                        l100 02AA                        l103 01AF  
                      l112 025E                        l106 0235                        l115 02F7  
                      l140 0129                        l141 012E                        l118 0304  
                      l142 0133                        l134 0110                        l143 0138  
                      l136 0115                        l144 015F                        l137 011A  
                      l138 011F                        l139 0124                        l801 010E  
                      l805 013D                        l797 0107                        l799 010B  
                      _RA3 002B                        _RA4 002C                        _RE0 0048  
                      _RE1 0049                        u200 00B6                        u201 00B5  
                      u210 00DA                        u211 00D9                        u170 028D  
                      u171 028C                        u307 021E                        u227 0048  
                      u180 029F                        u181 029E                        u317 022F  
                      u165 020E                        u237 0078                        u190 025E  
                      u327 02E2                        u191 025D                        u247 009C  
                      u257 00C0                        u267 00FB                        u277 016C  
                      u287 017C                        u297 018C                        _isr 02AB  
                      fsr0 0004                       l1201 027F                       l1203 0305  
                     l1211 0299                       l1141 02D2                       l1213 029F  
                     l1205 0288                       l1221 0249                       l1143 02D5  
                     l1215 02A4                       l1207 028D                       l1151 01FE  
                     l1223 0251                       l1231 001F                       l1145 02DB  
                     l1209 0292                       l1225 02F8                       l1161 0221  
                     l1153 0208                       l1217 0239                       l1241 004F  
                     l1233 0024                       l1139 0313                       l1147 02DE  
                     l1227 02EB                       l1163 0224                       l1155 020B  
                     l1219 023C                       l1171 0160                       l1251 007F  
                     l1243 0054                       l1235 0032                       l1149 02E7  
                     l1165 022A                       l1157 0219                       l1173 0166  
                     l1309 0145                       l1181 025F                       l1253 0084  
                     l1245 005C                       l1237 003A                       l1229 001A  
                     l1167 022D                       l1159 021C                       l1175 0170  
                     l1191 026C                       l1183 0261                       l1271 00B6  
                     l1263 0094                       l1255 008C                       l1247 0062  
                     l1239 0040                       l1169 0232                       l1177 0180  
                     l1193 026F                       l1185 0265                       l1281 00CB  
                     l1265 00A2                       l1257 0092                       l1249 006A  
                     l1179 0186                       l1195 0275                       l1187 0268  
                     l1283 00D1                       l1267 00A7                       l1197 027B  
                     l1189 0269                       l1285 00DA                       l1277 00B8  
                     l1269 00AD                       l1199 027E                       l1287 00F3  
                     l1279 00C6                       _ADC1 0027                       _ADC2 0026  
                     _ADIF 0066                       ?_isr 0070                       STR_1 01CA  
                     STR_2 01F3                       STR_3 01DA                       STR_4 01E7  
                     STR_5 01B6                       i1l60 02BF                       i1l62 02CA  
        ?_Lcd_Write_String 0070                       _main 001A                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0078            __end_of_Lcd_Cmd 02EB  
                    ??_isr 0070                initADC@IRCF 0075                      ?_main 0070  
                    u12_20 02B1                      u12_21 02B0                      u13_20 02B6  
                    u13_21 02B5                      _SPBRG 0099                      _PORTA 0005  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISD 0088                      _TRISE 0089                      _Setup 025F  
          __end_of_initADC 0160    __size_of_Lcd_Shift_Left 000D                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 01B0  
         __end_of_Lcd_Port 0318            __initialization 000F               __end_of_main 0106  
                   ??_main 0023         __size_of_Lcd_Clear 000D                     ?_Setup 0070  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
                   i1l1041 02BB                     i1l1033 02AB                     i1l1051 02C6  
                   i1l1043 02BC                     i1l1035 02B1                     i1l1053 02C7  
                   i1l1045 02BD                     i1l1037 02B6                     i1l1047 02C1  
                   i1l1055 02C8                     i1l1039 02B7                     i1l1057 02C9  
                   i1l1049 02C5                  ??_Lcd_Cmd 0074                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0039   __size_of_Lcd_Shift_Right 000D                  ??_initADC 0073  
                   saved_w 007E            Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077  
  __end_of__initialization 0016          __end_of_Lcd_Clear 0312             __pcstackCOMMON 0070  
            __end_of_Setup 0285             _Lcd_Set_Cursor 0285                    ??_Setup 0077  
           _Lcd_Shift_Left 02F8                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 0026                 __pmaintext 001A                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 02AB     __end_of_Lcd_Shift_Left 0305  
        ??_Lcd_Shift_Right 0077                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
               __stringtab 01B0             _Lcd_Write_Char 01FD                    _Lcd_Cmd 02D1  
                  _bandera 007A                  _ANSELbits 0188            ?_Lcd_Set_Cursor 0077  
                  __ptext1 025F                    __ptext2 0106                    __ptext3 0160  
                  __ptext4 0236                    __ptext5 01FD                    __ptext6 02EB  
                  __ptext7 02F8                    __ptext8 0285                    __ptext9 0305  
                  _initADC 0106               __size_of_isr 0026            ?_Lcd_Shift_Left 0070  
   __end_of_Lcd_Write_Char 0236       end_of_initialization 0016                  _RCSTAbits 0018  
                Lcd_Port@a 0073                  _TRISAbits 0085                  _TRISEbits 0089  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022          Lcd_Write_String@i 0020  
                _TXSTAbits 0098                  _Lcd_Clear 0305           _Lcd_Write_String 0236  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_isr 02D1  
        __size_of_Lcd_Init 0050          __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 02EB            Lcd_Write_Char@a 0077            Lcd_Write_Char@y 0076  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0020           ??_Lcd_Shift_Left 0077  
                __pstrings 01B0                   ?_initADC 0070             __size_of_Setup 0026  
        interrupt_function 0004    __end_of_Lcd_Shift_Right 02F8                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                ??_Lcd_Clear 0077                 _ADCON0bits 001F  
              __stringbase 01B5           ??_Lcd_Write_Char 0074                   _Lcd_Init 0160  
                 _Lcd_Port 0312   __end_of_Lcd_Write_String 025F           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 01B6           __size_of_initADC 005A                   __ptext10 02D1  
                 __ptext11 0312                   __ptext12 02AB              __size_of_main 00EC  
         ?_Lcd_Shift_Right 0070                 _INTCONbits 000B         Lcd_Write_Char@temp 0075  
                 intlevel1 0000                  stringcode 01B0                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0022                   stringdir 01B0                   stringtab 01B0  

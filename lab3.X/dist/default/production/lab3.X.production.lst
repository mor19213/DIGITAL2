

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 23:16:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0001                     _TMR0	set	1
   455  0006                     _PORTB	set	6
   456  0005                     _PORTA	set	5
   457  0019                     _TXREG	set	25
   458  001A                     _RCREG	set	26
   459  000C                     _PIR1bits	set	12
   460  001F                     _ADCON0bits	set	31
   461  001E                     _ADRESH	set	30
   462  000B                     _INTCONbits	set	11
   463  0018                     _RCSTAbits	set	24
   464  0008                     _PORTD	set	8
   465  001F                     _ADCON0	set	31
   466  0064                     _TXIF	set	100
   467  002F                     _RA7	set	47
   468  0066                     _ADIF	set	102
   469  0049                     _RE1	set	73
   470  0048                     _RE0	set	72
   471  0081                     _OPTION_REGbits	set	129
   472  0086                     _TRISB	set	134
   473  0089                     _TRISE	set	137
   474  0088                     _TRISD	set	136
   475  0085                     _TRISA	set	133
   476  009A                     _SPBRGH	set	154
   477  0098                     _TXSTAbits	set	152
   478  0099                     _SPBRG	set	153
   479  0087                     _TRISCbits	set	135
   480  0089                     _TRISEbits	set	137
   481  0085                     _TRISAbits	set	133
   482  008C                     _PIE1bits	set	140
   483  009F                     _ADCON1	set	159
   484  0464                     _TXIE	set	1124
   485  0188                     _ANSEL	set	392
   486  0187                     _BAUDCTLbits	set	391
   487  0188                     _ANSELbits	set	392
   488                           
   489                           	psect	strings
   490  0719                     __pstrings:
   491  0719                     stringtab:
   492  0719                     __stringtab:
   493  0719                     stringcode:	
   494                           ;	String table - string pointers are 1 byte each
   495                           
   496  0719                     stringdir:
   497  0719  3007               	movlw	high stringdir
   498  071A  008A               	movwf	10
   499  071B  0804               	movf	4,w
   500  071C  0A84               	incf	4,f
   501  071D  0782               	addwf	2,f
   502  071E                     __stringbase:
   503  071E  3400               	retlw	0
   504  071F                     __end_of__stringtab:
   505  071F                     STR_2:
   506  071F  3430               	retlw	48	;'0'
   507  0720  342E               	retlw	46	;'.'
   508  0721  3430               	retlw	48	;'0'
   509  0722  3430               	retlw	48	;'0'
   510  0723  3400               	retlw	0
   511  0724                     STR_1:
   512  0724  3453               	retlw	83	;'S'
   513  0725  3431               	retlw	49	;'1'
   514  0726  3400               	retlw	0
   515  0727                     STR_3:
   516  0727  3453               	retlw	83	;'S'
   517  0728  3432               	retlw	50	;'2'
   518  0729  3400               	retlw	0
   519  072A                     STR_5:
   520  072A  3453               	retlw	83	;'S'
   521  072B  3433               	retlw	51	;'3'
   522  072C  3400               	retlw	0
   523  071F                     
   524                           	psect	cinit
   525  000F                     start_initialization:	
   526                           ; #config settings
   527                           
   528  000F                     __initialization:
   529                           
   530                           ; Clear objects allocated to COMMON
   531  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   532  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   533  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   534                           
   535                           ; Clear objects allocated to BANK0
   536  0012  1383               	bcf	3,7	;select IRP bank0
   537  0013  3036               	movlw	low __pbssBANK0
   538  0014  0084               	movwf	4
   539  0015  304B               	movlw	low (__pbssBANK0+21)
   540  0016  120A  118A  272D  120A  118A  	fcall	clear_ram0
   541  001B                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  001B                     __end_of__initialization:
   545  001B  0183               	clrf	3
   546  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMMON
   549  0078                     __pbssCOMMON:
   550  0078                     _bandera1:
   551  0078                     	ds	1
   552  0079                     _RC_temp:
   553  0079                     	ds	1
   554  007A                     _bandera:
   555  007A                     	ds	1
   556                           
   557                           	psect	bssBANK0
   558  0036                     __pbssBANK0:
   559  0036                     _contador:
   560  0036                     	ds	2
   561  0038                     _a:
   562  0038                     	ds	2
   563  003A                     _C33:
   564  003A                     	ds	1
   565  003B                     _C32:
   566  003B                     	ds	1
   567  003C                     _C31:
   568  003C                     	ds	1
   569  003D                     _C23:
   570  003D                     	ds	1
   571  003E                     _C22:
   572  003E                     	ds	1
   573  003F                     _C21:
   574  003F                     	ds	1
   575  0040                     _C13:
   576  0040                     	ds	1
   577  0041                     _C12:
   578  0041                     	ds	1
   579  0042                     _C11:
   580  0042                     	ds	1
   581  0043                     _banderaTX:
   582  0043                     	ds	1
   583  0044                     _CONTX:
   584  0044                     	ds	1
   585  0045                     _ughh:
   586  0045                     	ds	1
   587  0046                     _cont2:
   588  0046                     	ds	1
   589  0047                     _cont1:
   590  0047                     	ds	1
   591  0048                     _var_contador:
   592  0048                     	ds	1
   593  0049                     _ADC2:
   594  0049                     	ds	1
   595  004A                     _ADC1:
   596  004A                     	ds	1
   597                           
   598                           	psect	clrtext
   599  072D                     clear_ram0:	
   600                           ;	Called with FSR containing the base address, and
   601                           ;	W with the last address+1
   602                           
   603  072D  0064               	clrwdt	;clear the watchdog before getting into this loop
   604  072E                     clrloop0:
   605  072E  0180               	clrf	0	;clear RAM location pointed to by FSR
   606  072F  0A84               	incf	4,f	;increment pointer
   607  0730  0604               	xorwf	4,w	;XOR with final address
   608  0731  1903               	btfsc	3,2	;have we reached the end yet?
   609  0732  3400               	retlw	0	;all done for this memory range, return
   610  0733  0604               	xorwf	4,w	;XOR again to restore value
   611  0734  2F2E               	goto	clrloop0	;do the next byte
   612                           
   613                           	psect	cstackCOMMON
   614  0070                     __pcstackCOMMON:
   615  0070                     ?_Setup:
   616  0070                     ?_initADC:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_Lcd_Port:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_Lcd_Cmd:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_Lcd_Init:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_Lcd_Write_Char:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_Lcd_Write_String:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_initUSART:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_isr:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_isr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_main:	
   644                           ; 1 bytes @ 0x0
   645                           
   646                           
   647                           ; 1 bytes @ 0x0
   648  0070                     	ds	3
   649  0073                     ??_initADC:
   650  0073                     ??_Lcd_Port:	
   651                           ; 1 bytes @ 0x3
   652                           
   653  0073                     ??_initUSART:	
   654                           ; 1 bytes @ 0x3
   655                           
   656  0073                     ?___bmul:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     ?___wmul:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     Lcd_Port@a:	
   663                           ; 2 bytes @ 0x3
   664                           
   665  0073                     ___bmul@multiplicand:	
   666                           ; 1 bytes @ 0x3
   667                           
   668  0073                     ___wmul@multiplier:	
   669                           ; 1 bytes @ 0x3
   670                           
   671                           
   672                           ; 2 bytes @ 0x3
   673  0073                     	ds	1
   674  0074                     ??_Lcd_Cmd:
   675  0074                     ??_Lcd_Write_Char:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     ??___bmul:	
   679                           ; 1 bytes @ 0x4
   680                           
   681                           
   682                           ; 1 bytes @ 0x4
   683  0074                     	ds	1
   684  0075                     initADC@IRCF:
   685  0075                     Lcd_Write_Char@a:	
   686                           ; 1 bytes @ 0x5
   687                           
   688  0075                     ___bmul@product:	
   689                           ; 1 bytes @ 0x5
   690                           
   691  0075                     ___wmul@multiplicand:	
   692                           ; 1 bytes @ 0x5
   693                           
   694                           
   695                           ; 2 bytes @ 0x5
   696  0075                     	ds	1
   697  0076                     ??_Lcd_Write_String:
   698  0076                     Lcd_Cmd@a:	
   699                           ; 1 bytes @ 0x6
   700                           
   701  0076                     ___bmul@multiplier:	
   702                           ; 1 bytes @ 0x6
   703                           
   704                           
   705                           ; 1 bytes @ 0x6
   706  0076                     	ds	1
   707  0077                     ?_Lcd_Set_Cursor:
   708  0077                     ??___wmul:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     ??___awdiv:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0077                     ??___lwdiv:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0077                     Lcd_Set_Cursor@b:	
   718                           ; 1 bytes @ 0x7
   719                           
   720                           
   721                           ; 1 bytes @ 0x7
   722  0077                     	ds	1
   723                           
   724                           	psect	cstackBANK0
   725  0020                     __pcstackBANK0:
   726  0020                     ??_Lcd_Set_Cursor:
   727  0020                     ??_Lcd_Init:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     Lcd_Write_String@i:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ___wmul@product:	
   734                           ; 2 bytes @ 0x0
   735                           
   736                           
   737                           ; 2 bytes @ 0x0
   738  0020                     	ds	1
   739  0021                     Lcd_Set_Cursor@a:
   740                           
   741                           ; 1 bytes @ 0x1
   742  0021                     	ds	1
   743  0022                     ?___awdiv:
   744  0022                     ?___lwdiv:	
   745                           ; 2 bytes @ 0x2
   746                           
   747  0022                     Lcd_Set_Cursor@temp:	
   748                           ; 2 bytes @ 0x2
   749                           
   750  0022                     Lcd_Write_String@a:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0022                     ___awdiv@divisor:	
   754                           ; 1 bytes @ 0x2
   755                           
   756  0022                     ___lwdiv@divisor:	
   757                           ; 2 bytes @ 0x2
   758                           
   759                           
   760                           ; 2 bytes @ 0x2
   761  0022                     	ds	1
   762  0023                     ??_Setup:
   763                           
   764                           ; 1 bytes @ 0x3
   765  0023                     	ds	1
   766  0024                     ___awdiv@dividend:
   767  0024                     ___lwdiv@dividend:	
   768                           ; 2 bytes @ 0x4
   769                           
   770                           
   771                           ; 2 bytes @ 0x4
   772  0024                     	ds	2
   773  0026                     ___awdiv@counter:
   774  0026                     ___lwdiv@quotient:	
   775                           ; 1 bytes @ 0x6
   776                           
   777                           
   778                           ; 2 bytes @ 0x6
   779  0026                     	ds	1
   780  0027                     ___awdiv@sign:
   781                           
   782                           ; 1 bytes @ 0x7
   783  0027                     	ds	1
   784  0028                     ___lwdiv@counter:
   785  0028                     ___awdiv@quotient:	
   786                           ; 1 bytes @ 0x8
   787                           
   788                           
   789                           ; 2 bytes @ 0x8
   790  0028                     	ds	2
   791  002A                     ??_main:
   792                           
   793                           ; 1 bytes @ 0xA
   794  002A                     	ds	8
   795  0032                     _main$1183:
   796                           
   797                           ; 2 bytes @ 0x12
   798  0032                     	ds	2
   799  0034                     _main$1182:
   800                           
   801                           ; 2 bytes @ 0x14
   802  0034                     	ds	2
   803                           
   804                           	psect	maintext
   805  001F                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 153 in file "lab3.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : B00/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       4       0       0       0
   827 ;;      Temps:          0       8       0       0       0
   828 ;;      Totals:         0      12       0       0       0
   829 ;;Total ram usage:       12 bytes
   830 ;; Hardware stack levels required when called:    5
   831 ;; This function calls:
   832 ;;		_Lcd_Set_Cursor
   833 ;;		_Lcd_Write_Char
   834 ;;		_Setup
   835 ;;		___awdiv
   836 ;;		___bmul
   837 ;;		___lwdiv
   838 ;;		___wmul
   839 ;; This function is called by:
   840 ;;		Startup code after reset
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _main
   846  001F                     _main:
   847  001F                     l1933:	
   848                           ;incstack = 0
   849                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   850                           
   851                           
   852                           ;lab3.c: 154:     }
   853  001F  120A  118A  2424  120A  118A  	fcall	_Setup
   854  0024                     l1935:
   855                           
   856                           ;lab3.c: 156:         C11 = 5;
   857  0024  3010               	movlw	16
   858  0025  1283               	bcf	3,5	;RP0=0, select bank0
   859  0026  1303               	bcf	3,6	;RP1=0, select bank0
   860  0027  0244               	subwf	_CONTX,w
   861  0028  1C03               	skipc
   862  0029  282B               	goto	u1161
   863  002A  282C               	goto	u1160
   864  002B                     u1161:
   865  002B  2830               	goto	l1941
   866  002C                     u1160:
   867  002C                     l1937:
   868                           
   869                           ;lab3.c: 157:     }
   870  002C  01C4               	clrf	_CONTX
   871  002D                     l1939:
   872                           
   873                           ;lab3.c: 158: 
   874  002D  1683               	bsf	3,5	;RP0=1, select bank1
   875  002E  1303               	bcf	3,6	;RP1=0, select bank1
   876  002F  160C               	bsf	12,4	;volatile
   877  0030                     l1941:
   878                           
   879                           ;lab3.c: 162:     Lcd_Write_Char(C12 + 48);
   880  0030  3033               	movlw	51
   881  0031  1283               	bcf	3,5	;RP0=0, select bank0
   882  0032  00A2               	movwf	___awdiv@divisor
   883  0033  3000               	movlw	0
   884  0034  00A3               	movwf	___awdiv@divisor+1
   885  0035  084A               	movf	_ADC1,w
   886  0036  00AA               	movwf	??_main
   887  0037  01AB               	clrf	??_main+1
   888  0038  082A               	movf	??_main,w
   889  0039  00A4               	movwf	___awdiv@dividend
   890  003A  082B               	movf	??_main+1,w
   891  003B  00A5               	movwf	___awdiv@dividend+1
   892  003C  120A  118A  24D7  120A  118A  	fcall	___awdiv
   893  0041  1283               	bcf	3,5	;RP0=0, select bank0
   894  0042  1303               	bcf	3,6	;RP1=0, select bank0
   895  0043  0822               	movf	?___awdiv,w
   896  0044  00AC               	movwf	??_main+2
   897  0045  082C               	movf	??_main+2,w
   898  0046  00C2               	movwf	_C11
   899  0047                     l1943:
   900                           
   901                           ;lab3.c: 163:     Lcd_Set_Cursor(2,4);
   902  0047  3033               	movlw	51
   903  0048  00A2               	movwf	___awdiv@divisor
   904  0049  3000               	movlw	0
   905  004A  00A3               	movwf	___awdiv@divisor+1
   906  004B  084A               	movf	_ADC1,w
   907  004C  00AA               	movwf	??_main
   908  004D  01AB               	clrf	??_main+1
   909  004E  082A               	movf	??_main,w
   910  004F  00F3               	movwf	___wmul@multiplier
   911  0050  082B               	movf	??_main+1,w
   912  0051  00F4               	movwf	___wmul@multiplier+1
   913  0052  3064               	movlw	100
   914  0053  00F5               	movwf	___wmul@multiplicand
   915  0054  3000               	movlw	0
   916  0055  00F6               	movwf	___wmul@multiplicand+1
   917  0056  120A  118A  263E  120A  118A  	fcall	___wmul
   918  005B  0874               	movf	?___wmul+1,w
   919  005C  1283               	bcf	3,5	;RP0=0, select bank0
   920  005D  1303               	bcf	3,6	;RP1=0, select bank0
   921  005E  00A5               	movwf	___awdiv@dividend+1
   922  005F  0873               	movf	?___wmul,w
   923  0060  00A4               	movwf	___awdiv@dividend
   924  0061  120A  118A  24D7  120A  118A  	fcall	___awdiv
   925  0066  1283               	bcf	3,5	;RP0=0, select bank0
   926  0067  1303               	bcf	3,6	;RP1=0, select bank0
   927  0068  0822               	movf	?___awdiv,w
   928  0069  00AC               	movwf	??_main+2
   929  006A  0823               	movf	?___awdiv+1,w
   930  006B  00AD               	movwf	??_main+3
   931  006C  0842               	movf	_C11,w
   932  006D  00AE               	movwf	??_main+4
   933  006E  01AF               	clrf	??_main+5
   934  006F  082E               	movf	??_main+4,w
   935  0070  00F3               	movwf	___wmul@multiplier
   936  0071  082F               	movf	??_main+5,w
   937  0072  00F4               	movwf	___wmul@multiplier+1
   938  0073  309C               	movlw	156
   939  0074  00F5               	movwf	___wmul@multiplicand
   940  0075  30FF               	movlw	255
   941  0076  00F6               	movwf	___wmul@multiplicand+1
   942  0077  120A  118A  263E  120A  118A  	fcall	___wmul
   943  007C  0873               	movf	?___wmul,w
   944  007D  1283               	bcf	3,5	;RP0=0, select bank0
   945  007E  1303               	bcf	3,6	;RP1=0, select bank0
   946  007F  072C               	addwf	??_main+2,w
   947  0080  00B4               	movwf	_main$1182
   948  0081  0874               	movf	?___wmul+1,w
   949  0082  1803               	skipnc
   950  0083  0A74               	incf	?___wmul+1,w
   951  0084  072D               	addwf	??_main+3,w
   952  0085  00B5               	movwf	_main$1182+1
   953  0086                     l1945:
   954                           
   955                           ;lab3.c: 163:     Lcd_Set_Cursor(2,4);
   956  0086  300A               	movlw	10
   957  0087  00A2               	movwf	___awdiv@divisor
   958  0088  3000               	movlw	0
   959  0089  00A3               	movwf	___awdiv@divisor+1
   960  008A  0835               	movf	_main$1182+1,w
   961  008B  00A5               	movwf	___awdiv@dividend+1
   962  008C  0834               	movf	_main$1182,w
   963  008D  00A4               	movwf	___awdiv@dividend
   964  008E  120A  118A  24D7  120A  118A  	fcall	___awdiv
   965  0093  1283               	bcf	3,5	;RP0=0, select bank0
   966  0094  1303               	bcf	3,6	;RP1=0, select bank0
   967  0095  0822               	movf	?___awdiv,w
   968  0096  00AA               	movwf	??_main
   969  0097  082A               	movf	??_main,w
   970  0098  00C1               	movwf	_C12
   971  0099                     l1947:
   972                           
   973                           ;lab3.c: 164:     Lcd_Write_Char(C13 + 48);
   974  0099  3033               	movlw	51
   975  009A  00A2               	movwf	___awdiv@divisor
   976  009B  3000               	movlw	0
   977  009C  00A3               	movwf	___awdiv@divisor+1
   978  009D  084A               	movf	_ADC1,w
   979  009E  00AA               	movwf	??_main
   980  009F  01AB               	clrf	??_main+1
   981  00A0  082A               	movf	??_main,w
   982  00A1  00F3               	movwf	___wmul@multiplier
   983  00A2  082B               	movf	??_main+1,w
   984  00A3  00F4               	movwf	___wmul@multiplier+1
   985  00A4  3064               	movlw	100
   986  00A5  00F5               	movwf	___wmul@multiplicand
   987  00A6  3000               	movlw	0
   988  00A7  00F6               	movwf	___wmul@multiplicand+1
   989  00A8  120A  118A  263E  120A  118A  	fcall	___wmul
   990  00AD  0874               	movf	?___wmul+1,w
   991  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   992  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   993  00B0  00A5               	movwf	___awdiv@dividend+1
   994  00B1  0873               	movf	?___wmul,w
   995  00B2  00A4               	movwf	___awdiv@dividend
   996  00B3  120A  118A  24D7  120A  118A  	fcall	___awdiv
   997  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   998  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   999  00BA  0822               	movf	?___awdiv,w
  1000  00BB  00AC               	movwf	??_main+2
  1001  00BC  0823               	movf	?___awdiv+1,w
  1002  00BD  00AD               	movwf	??_main+3
  1003  00BE  309C               	movlw	156
  1004  00BF  00AE               	movwf	??_main+4
  1005  00C0  082E               	movf	??_main+4,w
  1006  00C1  00F3               	movwf	___bmul@multiplicand
  1007  00C2  0842               	movf	_C11,w
  1008  00C3  120A  118A  26EF  120A  118A  	fcall	___bmul
  1009  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1010  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1011  00CA  00AF               	movwf	??_main+5
  1012  00CB  30F6               	movlw	246
  1013  00CC  00B0               	movwf	??_main+6
  1014  00CD  0830               	movf	??_main+6,w
  1015  00CE  00F3               	movwf	___bmul@multiplicand
  1016  00CF  0841               	movf	_C12,w
  1017  00D0  120A  118A  26EF  120A  118A  	fcall	___bmul
  1018  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1019  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1020  00D7  072F               	addwf	??_main+5,w
  1021  00D8  072C               	addwf	??_main+2,w
  1022  00D9  00B1               	movwf	??_main+7
  1023  00DA  0831               	movf	??_main+7,w
  1024  00DB  00C0               	movwf	_C13
  1025  00DC                     l1949:
  1026                           
  1027                           ;lab3.c: 166:     Lcd_Set_Cursor(2,7);
  1028  00DC  3033               	movlw	51
  1029  00DD  00A2               	movwf	___awdiv@divisor
  1030  00DE  3000               	movlw	0
  1031  00DF  00A3               	movwf	___awdiv@divisor+1
  1032  00E0  0849               	movf	_ADC2,w
  1033  00E1  00AA               	movwf	??_main
  1034  00E2  01AB               	clrf	??_main+1
  1035  00E3  082A               	movf	??_main,w
  1036  00E4  00A4               	movwf	___awdiv@dividend
  1037  00E5  082B               	movf	??_main+1,w
  1038  00E6  00A5               	movwf	___awdiv@dividend+1
  1039  00E7  120A  118A  24D7  120A  118A  	fcall	___awdiv
  1040  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1041  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1042  00EE  0822               	movf	?___awdiv,w
  1043  00EF  00AC               	movwf	??_main+2
  1044  00F0  082C               	movf	??_main+2,w
  1045  00F1  00BF               	movwf	_C21
  1046  00F2                     l1951:
  1047                           
  1048                           ;lab3.c: 167:     Lcd_Write_Char(C21 +48);
  1049  00F2  3033               	movlw	51
  1050  00F3  00A2               	movwf	___awdiv@divisor
  1051  00F4  3000               	movlw	0
  1052  00F5  00A3               	movwf	___awdiv@divisor+1
  1053  00F6  0849               	movf	_ADC2,w
  1054  00F7  00AA               	movwf	??_main
  1055  00F8  01AB               	clrf	??_main+1
  1056  00F9  082A               	movf	??_main,w
  1057  00FA  00F3               	movwf	___wmul@multiplier
  1058  00FB  082B               	movf	??_main+1,w
  1059  00FC  00F4               	movwf	___wmul@multiplier+1
  1060  00FD  3064               	movlw	100
  1061  00FE  00F5               	movwf	___wmul@multiplicand
  1062  00FF  3000               	movlw	0
  1063  0100  00F6               	movwf	___wmul@multiplicand+1
  1064  0101  120A  118A  263E  120A  118A  	fcall	___wmul
  1065  0106  0874               	movf	?___wmul+1,w
  1066  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0109  00A5               	movwf	___awdiv@dividend+1
  1069  010A  0873               	movf	?___wmul,w
  1070  010B  00A4               	movwf	___awdiv@dividend
  1071  010C  120A  118A  24D7  120A  118A  	fcall	___awdiv
  1072  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0113  0822               	movf	?___awdiv,w
  1075  0114  00AC               	movwf	??_main+2
  1076  0115  0823               	movf	?___awdiv+1,w
  1077  0116  00AD               	movwf	??_main+3
  1078  0117  083F               	movf	_C21,w
  1079  0118  00AE               	movwf	??_main+4
  1080  0119  01AF               	clrf	??_main+5
  1081  011A  082E               	movf	??_main+4,w
  1082  011B  00F3               	movwf	___wmul@multiplier
  1083  011C  082F               	movf	??_main+5,w
  1084  011D  00F4               	movwf	___wmul@multiplier+1
  1085  011E  309C               	movlw	156
  1086  011F  00F5               	movwf	___wmul@multiplicand
  1087  0120  30FF               	movlw	255
  1088  0121  00F6               	movwf	___wmul@multiplicand+1
  1089  0122  120A  118A  263E  120A  118A  	fcall	___wmul
  1090  0127  0873               	movf	?___wmul,w
  1091  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1093  012A  072C               	addwf	??_main+2,w
  1094  012B  00B4               	movwf	_main$1182
  1095  012C  0874               	movf	?___wmul+1,w
  1096  012D  1803               	skipnc
  1097  012E  0A74               	incf	?___wmul+1,w
  1098  012F  072D               	addwf	??_main+3,w
  1099  0130  00B5               	movwf	_main$1182+1
  1100  0131                     l1953:
  1101                           
  1102                           ;lab3.c: 167:     Lcd_Write_Char(C21 +48);
  1103  0131  300A               	movlw	10
  1104  0132  00A2               	movwf	___awdiv@divisor
  1105  0133  3000               	movlw	0
  1106  0134  00A3               	movwf	___awdiv@divisor+1
  1107  0135  0835               	movf	_main$1182+1,w
  1108  0136  00A5               	movwf	___awdiv@dividend+1
  1109  0137  0834               	movf	_main$1182,w
  1110  0138  00A4               	movwf	___awdiv@dividend
  1111  0139  120A  118A  24D7  120A  118A  	fcall	___awdiv
  1112  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1113  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0140  0822               	movf	?___awdiv,w
  1115  0141  00AA               	movwf	??_main
  1116  0142  082A               	movf	??_main,w
  1117  0143  00BE               	movwf	_C22
  1118  0144                     l1955:
  1119                           
  1120                           ;lab3.c: 168:     Lcd_Set_Cursor(2,9);
  1121  0144  3033               	movlw	51
  1122  0145  00A2               	movwf	___awdiv@divisor
  1123  0146  3000               	movlw	0
  1124  0147  00A3               	movwf	___awdiv@divisor+1
  1125  0148  0849               	movf	_ADC2,w
  1126  0149  00AA               	movwf	??_main
  1127  014A  01AB               	clrf	??_main+1
  1128  014B  082A               	movf	??_main,w
  1129  014C  00F3               	movwf	___wmul@multiplier
  1130  014D  082B               	movf	??_main+1,w
  1131  014E  00F4               	movwf	___wmul@multiplier+1
  1132  014F  3064               	movlw	100
  1133  0150  00F5               	movwf	___wmul@multiplicand
  1134  0151  3000               	movlw	0
  1135  0152  00F6               	movwf	___wmul@multiplicand+1
  1136  0153  120A  118A  263E  120A  118A  	fcall	___wmul
  1137  0158  0874               	movf	?___wmul+1,w
  1138  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1139  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1140  015B  00A5               	movwf	___awdiv@dividend+1
  1141  015C  0873               	movf	?___wmul,w
  1142  015D  00A4               	movwf	___awdiv@dividend
  1143  015E  120A  118A  24D7  120A  118A  	fcall	___awdiv
  1144  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0165  0822               	movf	?___awdiv,w
  1147  0166  00AC               	movwf	??_main+2
  1148  0167  0823               	movf	?___awdiv+1,w
  1149  0168  00AD               	movwf	??_main+3
  1150  0169  309C               	movlw	156
  1151  016A  00AE               	movwf	??_main+4
  1152  016B  082E               	movf	??_main+4,w
  1153  016C  00F3               	movwf	___bmul@multiplicand
  1154  016D  083F               	movf	_C21,w
  1155  016E  120A  118A  26EF  120A  118A  	fcall	___bmul
  1156  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0175  00AF               	movwf	??_main+5
  1159  0176  30F6               	movlw	246
  1160  0177  00B0               	movwf	??_main+6
  1161  0178  0830               	movf	??_main+6,w
  1162  0179  00F3               	movwf	___bmul@multiplicand
  1163  017A  083E               	movf	_C22,w
  1164  017B  120A  118A  26EF  120A  118A  	fcall	___bmul
  1165  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0182  072F               	addwf	??_main+5,w
  1168  0183  072C               	addwf	??_main+2,w
  1169  0184  00B1               	movwf	??_main+7
  1170  0185  0831               	movf	??_main+7,w
  1171  0186  00BD               	movwf	_C23
  1172  0187                     l1957:
  1173                           
  1174                           ;lab3.c: 170:     Lcd_Set_Cursor(2,10);
  1175  0187  3033               	movlw	51
  1176  0188  00A2               	movwf	___lwdiv@divisor
  1177  0189  3000               	movlw	0
  1178  018A  00A3               	movwf	___lwdiv@divisor+1
  1179  018B  0837               	movf	_contador+1,w
  1180  018C  00A5               	movwf	___lwdiv@dividend+1
  1181  018D  0836               	movf	_contador,w
  1182  018E  00A4               	movwf	___lwdiv@dividend
  1183  018F  120A  118A  25F8  120A  118A  	fcall	___lwdiv
  1184  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0196  0822               	movf	?___lwdiv,w
  1187  0197  00AA               	movwf	??_main
  1188  0198  082A               	movf	??_main,w
  1189  0199  00BC               	movwf	_C31
  1190  019A                     l1959:
  1191                           
  1192                           ;lab3.c: 171:     Lcd_Write_Char(C23 + 48);
  1193  019A  3033               	movlw	51
  1194  019B  00A2               	movwf	___lwdiv@divisor
  1195  019C  3000               	movlw	0
  1196  019D  00A3               	movwf	___lwdiv@divisor+1
  1197  019E  0837               	movf	_contador+1,w
  1198  019F  00F4               	movwf	___wmul@multiplier+1
  1199  01A0  0836               	movf	_contador,w
  1200  01A1  00F3               	movwf	___wmul@multiplier
  1201  01A2  3064               	movlw	100
  1202  01A3  00F5               	movwf	___wmul@multiplicand
  1203  01A4  3000               	movlw	0
  1204  01A5  00F6               	movwf	___wmul@multiplicand+1
  1205  01A6  120A  118A  263E  120A  118A  	fcall	___wmul
  1206  01AB  0874               	movf	?___wmul+1,w
  1207  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1208  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1209  01AE  00A5               	movwf	___lwdiv@dividend+1
  1210  01AF  0873               	movf	?___wmul,w
  1211  01B0  00A4               	movwf	___lwdiv@dividend
  1212  01B1  120A  118A  25F8  120A  118A  	fcall	___lwdiv
  1213  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01B8  0822               	movf	?___lwdiv,w
  1216  01B9  00AA               	movwf	??_main
  1217  01BA  0823               	movf	?___lwdiv+1,w
  1218  01BB  00AB               	movwf	??_main+1
  1219  01BC  083C               	movf	_C31,w
  1220  01BD  00AC               	movwf	??_main+2
  1221  01BE  01AD               	clrf	??_main+3
  1222  01BF  082C               	movf	??_main+2,w
  1223  01C0  00F3               	movwf	___wmul@multiplier
  1224  01C1  082D               	movf	??_main+3,w
  1225  01C2  00F4               	movwf	___wmul@multiplier+1
  1226  01C3  309C               	movlw	156
  1227  01C4  00F5               	movwf	___wmul@multiplicand
  1228  01C5  30FF               	movlw	255
  1229  01C6  00F6               	movwf	___wmul@multiplicand+1
  1230  01C7  120A  118A  263E  120A  118A  	fcall	___wmul
  1231  01CC  0873               	movf	?___wmul,w
  1232  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1233  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1234  01CF  072A               	addwf	??_main,w
  1235  01D0  00B2               	movwf	_main$1183
  1236  01D1  0874               	movf	?___wmul+1,w
  1237  01D2  1803               	skipnc
  1238  01D3  0A74               	incf	?___wmul+1,w
  1239  01D4  072B               	addwf	??_main+1,w
  1240  01D5  00B3               	movwf	_main$1183+1
  1241  01D6                     l1961:
  1242                           
  1243                           ;lab3.c: 171:     Lcd_Write_Char(C23 + 48);
  1244  01D6  300A               	movlw	10
  1245  01D7  00A2               	movwf	___lwdiv@divisor
  1246  01D8  3000               	movlw	0
  1247  01D9  00A3               	movwf	___lwdiv@divisor+1
  1248  01DA  0833               	movf	_main$1183+1,w
  1249  01DB  00A5               	movwf	___lwdiv@dividend+1
  1250  01DC  0832               	movf	_main$1183,w
  1251  01DD  00A4               	movwf	___lwdiv@dividend
  1252  01DE  120A  118A  25F8  120A  118A  	fcall	___lwdiv
  1253  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01E5  0822               	movf	?___lwdiv,w
  1256  01E6  00AA               	movwf	??_main
  1257  01E7  082A               	movf	??_main,w
  1258  01E8  00BB               	movwf	_C32
  1259  01E9                     l1963:
  1260                           
  1261                           ;lab3.c: 172: 
  1262  01E9  3033               	movlw	51
  1263  01EA  00A2               	movwf	___lwdiv@divisor
  1264  01EB  3000               	movlw	0
  1265  01EC  00A3               	movwf	___lwdiv@divisor+1
  1266  01ED  0837               	movf	_contador+1,w
  1267  01EE  00F4               	movwf	___wmul@multiplier+1
  1268  01EF  0836               	movf	_contador,w
  1269  01F0  00F3               	movwf	___wmul@multiplier
  1270  01F1  3064               	movlw	100
  1271  01F2  00F5               	movwf	___wmul@multiplicand
  1272  01F3  3000               	movlw	0
  1273  01F4  00F6               	movwf	___wmul@multiplicand+1
  1274  01F5  120A  118A  263E  120A  118A  	fcall	___wmul
  1275  01FA  0874               	movf	?___wmul+1,w
  1276  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1277  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1278  01FD  00A5               	movwf	___lwdiv@dividend+1
  1279  01FE  0873               	movf	?___wmul,w
  1280  01FF  00A4               	movwf	___lwdiv@dividend
  1281  0200  120A  118A  25F8  120A  118A  	fcall	___lwdiv
  1282  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0207  0822               	movf	?___lwdiv,w
  1285  0208  00AA               	movwf	??_main
  1286  0209  0823               	movf	?___lwdiv+1,w
  1287  020A  00AB               	movwf	??_main+1
  1288  020B  309C               	movlw	156
  1289  020C  00AC               	movwf	??_main+2
  1290  020D  082C               	movf	??_main+2,w
  1291  020E  00F3               	movwf	___bmul@multiplicand
  1292  020F  083C               	movf	_C31,w
  1293  0210  120A  118A  26EF  120A  118A  	fcall	___bmul
  1294  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0217  00AD               	movwf	??_main+3
  1297  0218  30F6               	movlw	246
  1298  0219  00AE               	movwf	??_main+4
  1299  021A  082E               	movf	??_main+4,w
  1300  021B  00F3               	movwf	___bmul@multiplicand
  1301  021C  083B               	movf	_C32,w
  1302  021D  120A  118A  26EF  120A  118A  	fcall	___bmul
  1303  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0224  072D               	addwf	??_main+3,w
  1306  0225  072A               	addwf	??_main,w
  1307  0226  00AF               	movwf	??_main+5
  1308  0227  082F               	movf	??_main+5,w
  1309  0228  00BA               	movwf	_C33
  1310  0229                     l1965:
  1311                           
  1312                           ;lab3.c: 174:     Lcd_Write_Char(C31 +48);
  1313  0229  300A               	movlw	10
  1314  022A  0241               	subwf	_C12,w
  1315  022B  1C03               	skipc
  1316  022C  2A2E               	goto	u1171
  1317  022D  2A2F               	goto	u1170
  1318  022E                     u1171:
  1319  022E  2A33               	goto	l231
  1320  022F                     u1170:
  1321  022F                     l1967:
  1322                           
  1323                           ;lab3.c: 175:     Lcd_Set_Cursor(2,15);
  1324  022F  3009               	movlw	9
  1325  0230  00AA               	movwf	??_main
  1326  0231  082A               	movf	??_main,w
  1327  0232  00C1               	movwf	_C12
  1328  0233                     l231:	
  1329                           ;lab3.c: 176:     Lcd_Write_Char(C32 + 48);
  1330                           
  1331                           
  1332                           ;lab3.c: 177:     Lcd_Set_Cursor(2,16);
  1333  0233  300A               	movlw	10
  1334  0234  0240               	subwf	_C13,w
  1335  0235  1C03               	skipc
  1336  0236  2A38               	goto	u1181
  1337  0237  2A39               	goto	u1180
  1338  0238                     u1181:
  1339  0238  2A3D               	goto	l232
  1340  0239                     u1180:
  1341  0239                     l1969:
  1342                           
  1343                           ;lab3.c: 178:     Lcd_Write_Char(C33 + 48);
  1344  0239  3009               	movlw	9
  1345  023A  00AA               	movwf	??_main
  1346  023B  082A               	movf	??_main,w
  1347  023C  00C0               	movwf	_C13
  1348  023D                     l232:	
  1349                           ;lab3.c: 179: 
  1350                           
  1351                           
  1352                           ;lab3.c: 180:   }
  1353  023D  300A               	movlw	10
  1354  023E  023E               	subwf	_C22,w
  1355  023F  1C03               	skipc
  1356  0240  2A42               	goto	u1191
  1357  0241  2A43               	goto	u1190
  1358  0242                     u1191:
  1359  0242  2A47               	goto	l233
  1360  0243                     u1190:
  1361  0243                     l1971:
  1362                           
  1363                           ;lab3.c: 181: }
  1364  0243  3009               	movlw	9
  1365  0244  00AA               	movwf	??_main
  1366  0245  082A               	movf	??_main,w
  1367  0246  00BE               	movwf	_C22
  1368  0247                     l233:	
  1369                           ;lab3.c: 182: 
  1370                           
  1371                           
  1372                           ;lab3.c: 183: void Setup(void){
  1373  0247  300A               	movlw	10
  1374  0248  023D               	subwf	_C23,w
  1375  0249  1C03               	skipc
  1376  024A  2A4C               	goto	u1201
  1377  024B  2A4D               	goto	u1200
  1378  024C                     u1201:
  1379  024C  2A51               	goto	l234
  1380  024D                     u1200:
  1381  024D                     l1973:
  1382                           
  1383                           ;lab3.c: 184: 
  1384  024D  3009               	movlw	9
  1385  024E  00AA               	movwf	??_main
  1386  024F  082A               	movf	??_main,w
  1387  0250  00BD               	movwf	_C23
  1388  0251                     l234:	
  1389                           ;lab3.c: 185:     TRISA = 0;
  1390                           
  1391                           
  1392                           ;lab3.c: 187:     PORTD = 0;
  1393  0251  3006               	movlw	6
  1394  0252  0242               	subwf	_C11,w
  1395  0253  1C03               	skipc
  1396  0254  2A56               	goto	u1211
  1397  0255  2A57               	goto	u1210
  1398  0256                     u1211:
  1399  0256  2A5B               	goto	l235
  1400  0257                     u1210:
  1401  0257                     l1975:
  1402                           
  1403                           ;lab3.c: 188:     TRISE = 0;
  1404  0257  3005               	movlw	5
  1405  0258  00AA               	movwf	??_main
  1406  0259  082A               	movf	??_main,w
  1407  025A  00C2               	movwf	_C11
  1408  025B                     l235:	
  1409                           ;lab3.c: 189:     TRISB = 0;
  1410                           
  1411                           
  1412                           ;lab3.c: 190: 
  1413  025B  3006               	movlw	6
  1414  025C  023F               	subwf	_C21,w
  1415  025D  1C03               	skipc
  1416  025E  2A60               	goto	u1221
  1417  025F  2A61               	goto	u1220
  1418  0260                     u1221:
  1419  0260  2A65               	goto	l236
  1420  0261                     u1220:
  1421  0261                     l1977:
  1422                           
  1423                           ;lab3.c: 191:     ADCON0 = 0b10000011;
  1424  0261  3005               	movlw	5
  1425  0262  00AA               	movwf	??_main
  1426  0263  082A               	movf	??_main,w
  1427  0264  00C2               	movwf	_C11
  1428  0265                     l236:	
  1429                           ;lab3.c: 192:     ADCON1 = 0;
  1430                           
  1431                           
  1432                           ;lab3.c: 193:     PORTA = 0;
  1433  0265  3006               	movlw	6
  1434  0266  023C               	subwf	_C31,w
  1435  0267  1C03               	skipc
  1436  0268  2A6A               	goto	u1231
  1437  0269  2A6B               	goto	u1230
  1438  026A                     u1231:
  1439  026A  2A6F               	goto	l1981
  1440  026B                     u1230:
  1441  026B                     l1979:
  1442                           
  1443                           ;lab3.c: 194:     ADCON0 = 0b10000011;
  1444  026B  3005               	movlw	5
  1445  026C  00AA               	movwf	??_main
  1446  026D  082A               	movf	??_main,w
  1447  026E  00C2               	movwf	_C11
  1448  026F                     l1981:
  1449                           
  1450                           ;lab3.c: 197:     PORTB = 0;
  1451  026F  01F7               	clrf	Lcd_Set_Cursor@b
  1452  0270  0AF7               	incf	Lcd_Set_Cursor@b,f
  1453  0271  3002               	movlw	2
  1454  0272  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1455  0277                     l1983:
  1456                           
  1457                           ;lab3.c: 198:     ANSEL = 0;
  1458  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0279  0842               	movf	_C11,w
  1461  027A  3E30               	addlw	48
  1462  027B  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1463  0280                     l1985:
  1464                           
  1465                           ;lab3.c: 199:     Lcd_Init();
  1466  0280  3003               	movlw	3
  1467  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0283  00AA               	movwf	??_main
  1470  0284  082A               	movf	??_main,w
  1471  0285  00F7               	movwf	Lcd_Set_Cursor@b
  1472  0286  3002               	movlw	2
  1473  0287  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1474  028C                     l1987:
  1475                           
  1476                           ;lab3.c: 200:     var_contador = 0;
  1477  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1478  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1479  028E  0841               	movf	_C12,w
  1480  028F  3E30               	addlw	48
  1481  0290  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1482  0295                     l1989:
  1483                           
  1484                           ;lab3.c: 201:     PIE1bits.ADIE = 1;
  1485  0295  3004               	movlw	4
  1486  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0298  00AA               	movwf	??_main
  1489  0299  082A               	movf	??_main,w
  1490  029A  00F7               	movwf	Lcd_Set_Cursor@b
  1491  029B  3002               	movlw	2
  1492  029C  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1493  02A1                     l1991:
  1494                           
  1495                           ;lab3.c: 202:     initADC(0);
  1496  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1497  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1498  02A3  0840               	movf	_C13,w
  1499  02A4  3E30               	addlw	48
  1500  02A5  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1501  02AA                     l1993:
  1502                           
  1503                           ;lab3.c: 204: 
  1504  02AA  3007               	movlw	7
  1505  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1506  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1507  02AD  00AA               	movwf	??_main
  1508  02AE  082A               	movf	??_main,w
  1509  02AF  00F7               	movwf	Lcd_Set_Cursor@b
  1510  02B0  3002               	movlw	2
  1511  02B1  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1512  02B6                     l1995:
  1513                           
  1514                           ;lab3.c: 205: 
  1515  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1516  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1517  02B8  083F               	movf	_C21,w
  1518  02B9  3E30               	addlw	48
  1519  02BA  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1520  02BF                     l1997:
  1521                           
  1522                           ;lab3.c: 206: 
  1523  02BF  3009               	movlw	9
  1524  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1525  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1526  02C2  00AA               	movwf	??_main
  1527  02C3  082A               	movf	??_main,w
  1528  02C4  00F7               	movwf	Lcd_Set_Cursor@b
  1529  02C5  3002               	movlw	2
  1530  02C6  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1531  02CB                     l1999:
  1532                           
  1533                           ;lab3.c: 207:     OPTION_REGbits.T0CS = 0;
  1534  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1535  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1536  02CD  083E               	movf	_C22,w
  1537  02CE  3E30               	addlw	48
  1538  02CF  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1539  02D4                     l2001:
  1540                           
  1541                           ;lab3.c: 208:     OPTION_REGbits.PSA = 0;
  1542  02D4  300A               	movlw	10
  1543  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1544  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1545  02D7  00AA               	movwf	??_main
  1546  02D8  082A               	movf	??_main,w
  1547  02D9  00F7               	movwf	Lcd_Set_Cursor@b
  1548  02DA  3002               	movlw	2
  1549  02DB  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1550  02E0                     l2003:
  1551                           
  1552                           ;lab3.c: 209:     OPTION_REGbits.PS = 111;
  1553  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1554  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1555  02E2  083D               	movf	_C23,w
  1556  02E3  3E30               	addlw	48
  1557  02E4  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1558  02E9                     l2005:
  1559                           
  1560                           ;lab3.c: 211: 
  1561  02E9  300D               	movlw	13
  1562  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1563  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1564  02EC  00AA               	movwf	??_main
  1565  02ED  082A               	movf	??_main,w
  1566  02EE  00F7               	movwf	Lcd_Set_Cursor@b
  1567  02EF  3002               	movlw	2
  1568  02F0  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1569  02F5                     l2007:
  1570                           
  1571                           ;lab3.c: 212: 
  1572  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1573  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1574  02F7  083C               	movf	_C31,w
  1575  02F8  3E30               	addlw	48
  1576  02F9  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1577  02FE                     l2009:
  1578                           
  1579                           ;lab3.c: 213:     INTCONbits.GIE = 1;
  1580  02FE  300F               	movlw	15
  1581  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0301  00AA               	movwf	??_main
  1584  0302  082A               	movf	??_main,w
  1585  0303  00F7               	movwf	Lcd_Set_Cursor@b
  1586  0304  3002               	movlw	2
  1587  0305  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1588  030A                     l2011:
  1589                           
  1590                           ;lab3.c: 214:     INTCONbits.T0IE = 1;
  1591  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1592  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1593  030C  083B               	movf	_C32,w
  1594  030D  3E30               	addlw	48
  1595  030E  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1596  0313                     l2013:
  1597                           
  1598                           ;lab3.c: 215:     INTCONbits.T0IF = 0;
  1599  0313  3010               	movlw	16
  1600  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0316  00AA               	movwf	??_main
  1603  0317  082A               	movf	??_main,w
  1604  0318  00F7               	movwf	Lcd_Set_Cursor@b
  1605  0319  3002               	movlw	2
  1606  031A  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  1607  031F                     l2015:
  1608                           
  1609                           ;lab3.c: 216: 
  1610  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0321  083A               	movf	_C33,w
  1613  0322  3E30               	addlw	48
  1614  0323  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  1615  0328  2824               	goto	l1935
  1616  0329  120A  118A  280C   	ljmp	start
  1617  032C                     __end_of_main:
  1618                           
  1619                           	psect	text1
  1620  063E                     __ptext1:	
  1621 ;; *************** function ___wmul *****************
  1622 ;; Defined at:
  1623 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  multiplier      2    3[COMMON] unsigned int 
  1626 ;;  multiplicand    2    5[COMMON] unsigned int 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  product         2    0[BANK0 ] unsigned int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2    3[COMMON] unsigned int 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         4       0       0       0       0
  1639 ;;      Locals:         0       2       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         4       2       0       0       0
  1642 ;;Total ram usage:        6 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function ___wmul
  1654  063E                     ___wmul:
  1655  063E                     l1915:	
  1656                           ;incstack = 0
  1657                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1658                           
  1659  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1660  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0640  01A0               	clrf	___wmul@product
  1662  0641  01A1               	clrf	___wmul@product+1
  1663  0642                     l1917:
  1664  0642  1C73               	btfss	___wmul@multiplier,0
  1665  0643  2E45               	goto	u1121
  1666  0644  2E46               	goto	u1120
  1667  0645                     u1121:
  1668  0645  2E4E               	goto	l329
  1669  0646                     u1120:
  1670  0646                     l1919:
  1671  0646  0875               	movf	___wmul@multiplicand,w
  1672  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0649  07A0               	addwf	___wmul@product,f
  1675  064A  1803               	skipnc
  1676  064B  0AA1               	incf	___wmul@product+1,f
  1677  064C  0876               	movf	___wmul@multiplicand+1,w
  1678  064D  07A1               	addwf	___wmul@product+1,f
  1679  064E                     l329:
  1680  064E  3001               	movlw	1
  1681  064F                     u1135:
  1682  064F  1003               	clrc
  1683  0650  0DF5               	rlf	___wmul@multiplicand,f
  1684  0651  0DF6               	rlf	___wmul@multiplicand+1,f
  1685  0652  3EFF               	addlw	-1
  1686  0653  1D03               	skipz
  1687  0654  2E4F               	goto	u1135
  1688  0655                     l1921:
  1689  0655  3001               	movlw	1
  1690  0656                     u1145:
  1691  0656  1003               	clrc
  1692  0657  0CF4               	rrf	___wmul@multiplier+1,f
  1693  0658  0CF3               	rrf	___wmul@multiplier,f
  1694  0659  3EFF               	addlw	-1
  1695  065A  1D03               	skipz
  1696  065B  2E56               	goto	u1145
  1697  065C                     l1923:
  1698  065C  0873               	movf	___wmul@multiplier,w
  1699  065D  0474               	iorwf	___wmul@multiplier+1,w
  1700  065E  1D03               	btfss	3,2
  1701  065F  2E61               	goto	u1151
  1702  0660  2E62               	goto	u1150
  1703  0661                     u1151:
  1704  0661  2E42               	goto	l1917
  1705  0662                     u1150:
  1706  0662                     l1925:
  1707  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0664  0821               	movf	___wmul@product+1,w
  1710  0665  00F4               	movwf	?___wmul+1
  1711  0666  0820               	movf	___wmul@product,w
  1712  0667  00F3               	movwf	?___wmul
  1713  0668                     l331:
  1714  0668  0008               	return
  1715  0669                     __end_of___wmul:
  1716                           
  1717                           	psect	text2
  1718  05F8                     __ptext2:	
  1719 ;; *************** function ___lwdiv *****************
  1720 ;; Defined at:
  1721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  divisor         2    2[BANK0 ] unsigned int 
  1724 ;;  dividend        2    4[BANK0 ] unsigned int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  quotient        2    6[BANK0 ] unsigned int 
  1727 ;;  counter         1    8[BANK0 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    2[BANK0 ] unsigned int 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       4       0       0       0
  1738 ;;      Locals:         0       3       0       0       0
  1739 ;;      Temps:          1       0       0       0       0
  1740 ;;      Totals:         1       7       0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function ___lwdiv
  1753  05F8                     ___lwdiv:
  1754  05F8                     l1551:	
  1755                           ;incstack = 0
  1756                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1757                           
  1758  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1759  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1760  05FA  01A6               	clrf	___lwdiv@quotient
  1761  05FB  01A7               	clrf	___lwdiv@quotient+1
  1762  05FC                     l1553:
  1763  05FC  0822               	movf	___lwdiv@divisor,w
  1764  05FD  0423               	iorwf	___lwdiv@divisor+1,w
  1765  05FE  1903               	btfsc	3,2
  1766  05FF  2E01               	goto	u741
  1767  0600  2E02               	goto	u740
  1768  0601                     u741:
  1769  0601  2E39               	goto	l1573
  1770  0602                     u740:
  1771  0602                     l1555:
  1772  0602  01A8               	clrf	___lwdiv@counter
  1773  0603  0AA8               	incf	___lwdiv@counter,f
  1774  0604  2E10               	goto	l1561
  1775  0605                     l1557:
  1776  0605  3001               	movlw	1
  1777  0606                     u755:
  1778  0606  1003               	clrc
  1779  0607  0DA2               	rlf	___lwdiv@divisor,f
  1780  0608  0DA3               	rlf	___lwdiv@divisor+1,f
  1781  0609  3EFF               	addlw	-1
  1782  060A  1D03               	skipz
  1783  060B  2E06               	goto	u755
  1784  060C                     l1559:
  1785  060C  3001               	movlw	1
  1786  060D  00F7               	movwf	??___lwdiv
  1787  060E  0877               	movf	??___lwdiv,w
  1788  060F  07A8               	addwf	___lwdiv@counter,f
  1789  0610                     l1561:
  1790  0610  1FA3               	btfss	___lwdiv@divisor+1,7
  1791  0611  2E13               	goto	u761
  1792  0612  2E14               	goto	u760
  1793  0613                     u761:
  1794  0613  2E05               	goto	l1557
  1795  0614                     u760:
  1796  0614                     l1563:
  1797  0614  3001               	movlw	1
  1798  0615                     u775:
  1799  0615  1003               	clrc
  1800  0616  0DA6               	rlf	___lwdiv@quotient,f
  1801  0617  0DA7               	rlf	___lwdiv@quotient+1,f
  1802  0618  3EFF               	addlw	-1
  1803  0619  1D03               	skipz
  1804  061A  2E15               	goto	u775
  1805  061B  0823               	movf	___lwdiv@divisor+1,w
  1806  061C  0225               	subwf	___lwdiv@dividend+1,w
  1807  061D  1D03               	skipz
  1808  061E  2E21               	goto	u785
  1809  061F  0822               	movf	___lwdiv@divisor,w
  1810  0620  0224               	subwf	___lwdiv@dividend,w
  1811  0621                     u785:
  1812  0621  1C03               	skipc
  1813  0622  2E24               	goto	u781
  1814  0623  2E25               	goto	u780
  1815  0624                     u781:
  1816  0624  2E2C               	goto	l1569
  1817  0625                     u780:
  1818  0625                     l1565:
  1819  0625  0822               	movf	___lwdiv@divisor,w
  1820  0626  02A4               	subwf	___lwdiv@dividend,f
  1821  0627  0823               	movf	___lwdiv@divisor+1,w
  1822  0628  1C03               	skipc
  1823  0629  03A5               	decf	___lwdiv@dividend+1,f
  1824  062A  02A5               	subwf	___lwdiv@dividend+1,f
  1825  062B                     l1567:
  1826  062B  1426               	bsf	___lwdiv@quotient,0
  1827  062C                     l1569:
  1828  062C  3001               	movlw	1
  1829  062D                     u795:
  1830  062D  1003               	clrc
  1831  062E  0CA3               	rrf	___lwdiv@divisor+1,f
  1832  062F  0CA2               	rrf	___lwdiv@divisor,f
  1833  0630  3EFF               	addlw	-1
  1834  0631  1D03               	skipz
  1835  0632  2E2D               	goto	u795
  1836  0633                     l1571:
  1837  0633  3001               	movlw	1
  1838  0634  02A8               	subwf	___lwdiv@counter,f
  1839  0635  1D03               	btfss	3,2
  1840  0636  2E38               	goto	u801
  1841  0637  2E39               	goto	u800
  1842  0638                     u801:
  1843  0638  2E14               	goto	l1563
  1844  0639                     u800:
  1845  0639                     l1573:
  1846  0639  0827               	movf	___lwdiv@quotient+1,w
  1847  063A  00A3               	movwf	?___lwdiv+1
  1848  063B  0826               	movf	___lwdiv@quotient,w
  1849  063C  00A2               	movwf	?___lwdiv
  1850  063D                     l601:
  1851  063D  0008               	return
  1852  063E                     __end_of___lwdiv:
  1853                           
  1854                           	psect	text3
  1855  06EF                     __ptext3:	
  1856 ;; *************** function ___bmul *****************
  1857 ;; Defined at:
  1858 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  multiplier      1    wreg     unsigned char 
  1861 ;;  multiplicand    1    3[COMMON] unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  multiplier      1    6[COMMON] unsigned char 
  1864 ;;  product         1    5[COMMON] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      unsigned char 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         1       0       0       0       0
  1875 ;;      Locals:         2       0       0       0       0
  1876 ;;      Temps:          1       0       0       0       0
  1877 ;;      Totals:         4       0       0       0       0
  1878 ;;Total ram usage:        4 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function ___bmul
  1890  06EF                     ___bmul:
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1894                           ;___bmul@multiplier stored from wreg
  1895  06EF  00F6               	movwf	___bmul@multiplier
  1896  06F0                     l1493:
  1897  06F0  01F5               	clrf	___bmul@product
  1898  06F1                     l1495:
  1899  06F1  1C76               	btfss	___bmul@multiplier,0
  1900  06F2  2EF4               	goto	u621
  1901  06F3  2EF5               	goto	u620
  1902  06F4                     u621:
  1903  06F4  2EF9               	goto	l1499
  1904  06F5                     u620:
  1905  06F5                     l1497:
  1906  06F5  0873               	movf	___bmul@multiplicand,w
  1907  06F6  00F4               	movwf	??___bmul
  1908  06F7  0874               	movf	??___bmul,w
  1909  06F8  07F5               	addwf	___bmul@product,f
  1910  06F9                     l1499:
  1911  06F9  1003               	clrc
  1912  06FA  0DF3               	rlf	___bmul@multiplicand,f
  1913  06FB                     l1501:
  1914  06FB  1003               	clrc
  1915  06FC  0CF6               	rrf	___bmul@multiplier,f
  1916  06FD  0876               	movf	___bmul@multiplier,w
  1917  06FE  1D03               	btfss	3,2
  1918  06FF  2F01               	goto	u631
  1919  0700  2F02               	goto	u630
  1920  0701                     u631:
  1921  0701  2EF1               	goto	l1495
  1922  0702                     u630:
  1923  0702                     l1503:
  1924  0702  0875               	movf	___bmul@product,w
  1925  0703                     l355:
  1926  0703  0008               	return
  1927  0704                     __end_of___bmul:
  1928                           
  1929                           	psect	text4
  1930  04D7                     __ptext4:	
  1931 ;; *************** function ___awdiv *****************
  1932 ;; Defined at:
  1933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  divisor         2    2[BANK0 ] int 
  1936 ;;  dividend        2    4[BANK0 ] int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  quotient        2    8[BANK0 ] int 
  1939 ;;  sign            1    7[BANK0 ] unsigned char 
  1940 ;;  counter         1    6[BANK0 ] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  2    2[BANK0 ] int 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1950 ;;      Params:         0       4       0       0       0
  1951 ;;      Locals:         0       4       0       0       0
  1952 ;;      Temps:          1       0       0       0       0
  1953 ;;      Totals:         1       8       0       0       0
  1954 ;;Total ram usage:        9 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function ___awdiv
  1966  04D7                     ___awdiv:
  1967  04D7                     l1507:	
  1968                           ;incstack = 0
  1969                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1970                           
  1971  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1972  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1973  04D9  01A7               	clrf	___awdiv@sign
  1974  04DA                     l1509:
  1975  04DA  1FA3               	btfss	___awdiv@divisor+1,7
  1976  04DB  2CDD               	goto	u641
  1977  04DC  2CDE               	goto	u640
  1978  04DD                     u641:
  1979  04DD  2CE5               	goto	l1515
  1980  04DE                     u640:
  1981  04DE                     l1511:
  1982  04DE  09A2               	comf	___awdiv@divisor,f
  1983  04DF  09A3               	comf	___awdiv@divisor+1,f
  1984  04E0  0AA2               	incf	___awdiv@divisor,f
  1985  04E1  1903               	skipnz
  1986  04E2  0AA3               	incf	___awdiv@divisor+1,f
  1987  04E3                     l1513:
  1988  04E3  01A7               	clrf	___awdiv@sign
  1989  04E4  0AA7               	incf	___awdiv@sign,f
  1990  04E5                     l1515:
  1991  04E5  1FA5               	btfss	___awdiv@dividend+1,7
  1992  04E6  2CE8               	goto	u651
  1993  04E7  2CE9               	goto	u650
  1994  04E8                     u651:
  1995  04E8  2CF2               	goto	l1521
  1996  04E9                     u650:
  1997  04E9                     l1517:
  1998  04E9  09A4               	comf	___awdiv@dividend,f
  1999  04EA  09A5               	comf	___awdiv@dividend+1,f
  2000  04EB  0AA4               	incf	___awdiv@dividend,f
  2001  04EC  1903               	skipnz
  2002  04ED  0AA5               	incf	___awdiv@dividend+1,f
  2003  04EE                     l1519:
  2004  04EE  3001               	movlw	1
  2005  04EF  00F7               	movwf	??___awdiv
  2006  04F0  0877               	movf	??___awdiv,w
  2007  04F1  06A7               	xorwf	___awdiv@sign,f
  2008  04F2                     l1521:
  2009  04F2  01A8               	clrf	___awdiv@quotient
  2010  04F3  01A9               	clrf	___awdiv@quotient+1
  2011  04F4                     l1523:
  2012  04F4  0822               	movf	___awdiv@divisor,w
  2013  04F5  0423               	iorwf	___awdiv@divisor+1,w
  2014  04F6  1903               	btfsc	3,2
  2015  04F7  2CF9               	goto	u661
  2016  04F8  2CFA               	goto	u660
  2017  04F9                     u661:
  2018  04F9  2D31               	goto	l1543
  2019  04FA                     u660:
  2020  04FA                     l1525:
  2021  04FA  01A6               	clrf	___awdiv@counter
  2022  04FB  0AA6               	incf	___awdiv@counter,f
  2023  04FC  2D08               	goto	l1531
  2024  04FD                     l1527:
  2025  04FD  3001               	movlw	1
  2026  04FE                     u675:
  2027  04FE  1003               	clrc
  2028  04FF  0DA2               	rlf	___awdiv@divisor,f
  2029  0500  0DA3               	rlf	___awdiv@divisor+1,f
  2030  0501  3EFF               	addlw	-1
  2031  0502  1D03               	skipz
  2032  0503  2CFE               	goto	u675
  2033  0504                     l1529:
  2034  0504  3001               	movlw	1
  2035  0505  00F7               	movwf	??___awdiv
  2036  0506  0877               	movf	??___awdiv,w
  2037  0507  07A6               	addwf	___awdiv@counter,f
  2038  0508                     l1531:
  2039  0508  1FA3               	btfss	___awdiv@divisor+1,7
  2040  0509  2D0B               	goto	u681
  2041  050A  2D0C               	goto	u680
  2042  050B                     u681:
  2043  050B  2CFD               	goto	l1527
  2044  050C                     u680:
  2045  050C                     l1533:
  2046  050C  3001               	movlw	1
  2047  050D                     u695:
  2048  050D  1003               	clrc
  2049  050E  0DA8               	rlf	___awdiv@quotient,f
  2050  050F  0DA9               	rlf	___awdiv@quotient+1,f
  2051  0510  3EFF               	addlw	-1
  2052  0511  1D03               	skipz
  2053  0512  2D0D               	goto	u695
  2054  0513  0823               	movf	___awdiv@divisor+1,w
  2055  0514  0225               	subwf	___awdiv@dividend+1,w
  2056  0515  1D03               	skipz
  2057  0516  2D19               	goto	u705
  2058  0517  0822               	movf	___awdiv@divisor,w
  2059  0518  0224               	subwf	___awdiv@dividend,w
  2060  0519                     u705:
  2061  0519  1C03               	skipc
  2062  051A  2D1C               	goto	u701
  2063  051B  2D1D               	goto	u700
  2064  051C                     u701:
  2065  051C  2D24               	goto	l1539
  2066  051D                     u700:
  2067  051D                     l1535:
  2068  051D  0822               	movf	___awdiv@divisor,w
  2069  051E  02A4               	subwf	___awdiv@dividend,f
  2070  051F  0823               	movf	___awdiv@divisor+1,w
  2071  0520  1C03               	skipc
  2072  0521  03A5               	decf	___awdiv@dividend+1,f
  2073  0522  02A5               	subwf	___awdiv@dividend+1,f
  2074  0523                     l1537:
  2075  0523  1428               	bsf	___awdiv@quotient,0
  2076  0524                     l1539:
  2077  0524  3001               	movlw	1
  2078  0525                     u715:
  2079  0525  1003               	clrc
  2080  0526  0CA3               	rrf	___awdiv@divisor+1,f
  2081  0527  0CA2               	rrf	___awdiv@divisor,f
  2082  0528  3EFF               	addlw	-1
  2083  0529  1D03               	skipz
  2084  052A  2D25               	goto	u715
  2085  052B                     l1541:
  2086  052B  3001               	movlw	1
  2087  052C  02A6               	subwf	___awdiv@counter,f
  2088  052D  1D03               	btfss	3,2
  2089  052E  2D30               	goto	u721
  2090  052F  2D31               	goto	u720
  2091  0530                     u721:
  2092  0530  2D0C               	goto	l1533
  2093  0531                     u720:
  2094  0531                     l1543:
  2095  0531  0827               	movf	___awdiv@sign,w
  2096  0532  1903               	btfsc	3,2
  2097  0533  2D35               	goto	u731
  2098  0534  2D36               	goto	u730
  2099  0535                     u731:
  2100  0535  2D3B               	goto	l1547
  2101  0536                     u730:
  2102  0536                     l1545:
  2103  0536  09A8               	comf	___awdiv@quotient,f
  2104  0537  09A9               	comf	___awdiv@quotient+1,f
  2105  0538  0AA8               	incf	___awdiv@quotient,f
  2106  0539  1903               	skipnz
  2107  053A  0AA9               	incf	___awdiv@quotient+1,f
  2108  053B                     l1547:
  2109  053B  0829               	movf	___awdiv@quotient+1,w
  2110  053C  00A3               	movwf	?___awdiv+1
  2111  053D  0828               	movf	___awdiv@quotient,w
  2112  053E  00A2               	movwf	?___awdiv
  2113  053F                     l482:
  2114  053F  0008               	return
  2115  0540                     __end_of___awdiv:
  2116                           
  2117                           	psect	text5
  2118  0424                     __ptext5:	
  2119 ;; *************** function _Setup *****************
  2120 ;; Defined at:
  2121 ;;		line 221 in file "lab3.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          0       1       0       0       0
  2138 ;;      Totals:         0       1       0       0       0
  2139 ;;Total ram usage:        1 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    4
  2142 ;; This function calls:
  2143 ;;		_Lcd_Init
  2144 ;;		_Lcd_Set_Cursor
  2145 ;;		_Lcd_Write_String
  2146 ;;		_initADC
  2147 ;;		_initUSART
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _Setup
  2155  0424                     _Setup:
  2156  0424                     l1855:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2159                           
  2160                           
  2161                           ;lab3.c: 223:     Lcd_Write_String("0.00");
  2162  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2163  0425  1303               	bcf	3,6	;RP1=0, select bank1
  2164  0426  0185               	clrf	5	;volatile
  2165                           
  2166                           ;lab3.c: 224:     Lcd_Set_Cursor(1,8);
  2167  0427  0188               	clrf	8	;volatile
  2168                           
  2169                           ;lab3.c: 225:     Lcd_Write_String("S2");
  2170  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2172  042A  0188               	clrf	8	;volatile
  2173                           
  2174                           ;lab3.c: 226:     Lcd_Set_Cursor(2,7);
  2175  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2176  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2177  042D  0189               	clrf	9	;volatile
  2178                           
  2179                           ;lab3.c: 227:     Lcd_Write_String("0.00");
  2180  042E  0186               	clrf	6	;volatile
  2181  042F                     l1857:
  2182                           
  2183                           ;lab3.c: 229:     Lcd_Write_String("S3");
  2184  042F  3083               	movlw	131
  2185  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0432  009F               	movwf	31	;volatile
  2188  0433                     l1859:
  2189                           
  2190                           ;lab3.c: 230:     Lcd_Set_Cursor(2,13);
  2191  0433  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0434  1303               	bcf	3,6	;RP1=0, select bank1
  2193  0435  019F               	clrf	31	;volatile
  2194  0436                     l1861:
  2195                           
  2196                           ;lab3.c: 231:     Lcd_Write_String("0.00");
  2197  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0438  0185               	clrf	5	;volatile
  2200  0439                     l1863:
  2201                           
  2202                           ;lab3.c: 232: 
  2203  0439  3083               	movlw	131
  2204  043A  009F               	movwf	31	;volatile
  2205                           
  2206                           ;lab3.c: 233: }
  2207  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2208  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2209  043D  019F               	clrf	31	;volatile
  2210  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2211  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0440  0185               	clrf	5	;volatile
  2213  0441  0186               	clrf	6	;volatile
  2214  0442  1683               	bsf	3,5	;RP0=1, select bank3
  2215  0443  1703               	bsf	3,6	;RP1=1, select bank3
  2216  0444  0188               	clrf	8	;volatile
  2217  0445                     l1865:
  2218  0445  120A  118A  2540  120A  118A  	fcall	_Lcd_Init
  2219  044A                     l1867:
  2220  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2221  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2222  044C  01C8               	clrf	_var_contador
  2223  044D                     l1869:
  2224  044D  1683               	bsf	3,5	;RP0=1, select bank1
  2225  044E  1303               	bcf	3,6	;RP1=0, select bank1
  2226  044F  170C               	bsf	12,6	;volatile
  2227  0450                     l1871:
  2228  0450  3000               	movlw	0
  2229  0451  120A  118A  259E  120A  118A  	fcall	_initADC
  2230  0456                     l1873:
  2231  0456  3001               	movlw	1
  2232  0457  120A  118A  259E  120A  118A  	fcall	_initADC
  2233  045C                     l1875:
  2234  045C  1683               	bsf	3,5	;RP0=1, select bank1
  2235  045D  1303               	bcf	3,6	;RP1=0, select bank1
  2236  045E  1281               	bcf	1,5	;volatile
  2237  045F                     l1877:
  2238  045F  1181               	bcf	1,3	;volatile
  2239  0460                     l1879:
  2240  0460  3007               	movlw	7
  2241  0461  0481               	iorwf	1,f	;volatile
  2242  0462                     l1881:
  2243  0462  300A               	movlw	10
  2244  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0465  0081               	movwf	1	;volatile
  2247  0466                     l1883:
  2248  0466  178B               	bsf	11,7	;volatile
  2249  0467                     l1885:
  2250  0467  168B               	bsf	11,5	;volatile
  2251  0468                     l1887:
  2252  0468  110B               	bcf	11,2	;volatile
  2253  0469                     l1889:
  2254  0469  120A  118A  26B8  120A  118A  	fcall	_initUSART
  2255  046E                     l1891:
  2256  046E  3003               	movlw	3
  2257  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0471  00A3               	movwf	??_Setup
  2260  0472  0823               	movf	??_Setup,w
  2261  0473  00F7               	movwf	Lcd_Set_Cursor@b
  2262  0474  3001               	movlw	1
  2263  0475  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  2264  047A                     l1893:
  2265  047A  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2266  047B  120A  118A  2669  120A  118A  	fcall	_Lcd_Write_String
  2267  0480                     l1895:
  2268  0480  01F7               	clrf	Lcd_Set_Cursor@b
  2269  0481  0AF7               	incf	Lcd_Set_Cursor@b,f
  2270  0482  3002               	movlw	2
  2271  0483  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  2272  0488                     l1897:
  2273  0488  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2274  0489  120A  118A  2669  120A  118A  	fcall	_Lcd_Write_String
  2275  048E                     l1899:
  2276  048E  3008               	movlw	8
  2277  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0491  00A3               	movwf	??_Setup
  2280  0492  0823               	movf	??_Setup,w
  2281  0493  00F7               	movwf	Lcd_Set_Cursor@b
  2282  0494  3001               	movlw	1
  2283  0495  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  2284  049A                     l1901:
  2285  049A  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2286  049B  120A  118A  2669  120A  118A  	fcall	_Lcd_Write_String
  2287  04A0                     l1903:
  2288  04A0  3007               	movlw	7
  2289  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2290  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2291  04A3  00A3               	movwf	??_Setup
  2292  04A4  0823               	movf	??_Setup,w
  2293  04A5  00F7               	movwf	Lcd_Set_Cursor@b
  2294  04A6  3002               	movlw	2
  2295  04A7  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  2296  04AC                     l1905:
  2297  04AC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2298  04AD  120A  118A  2669  120A  118A  	fcall	_Lcd_Write_String
  2299  04B2                     l1907:
  2300  04B2  300E               	movlw	14
  2301  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2302  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2303  04B5  00A3               	movwf	??_Setup
  2304  04B6  0823               	movf	??_Setup,w
  2305  04B7  00F7               	movwf	Lcd_Set_Cursor@b
  2306  04B8  3001               	movlw	1
  2307  04B9  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  2308  04BE                     l1909:
  2309  04BE  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2310  04BF  120A  118A  2669  120A  118A  	fcall	_Lcd_Write_String
  2311  04C4                     l1911:
  2312  04C4  300D               	movlw	13
  2313  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2314  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2315  04C7  00A3               	movwf	??_Setup
  2316  04C8  0823               	movf	??_Setup,w
  2317  04C9  00F7               	movwf	Lcd_Set_Cursor@b
  2318  04CA  3002               	movlw	2
  2319  04CB  120A  118A  2692  120A  118A  	fcall	_Lcd_Set_Cursor
  2320  04D0                     l1913:
  2321  04D0  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2322  04D1  120A  118A  2669  120A  118A  	fcall	_Lcd_Write_String
  2323  04D6                     l243:
  2324  04D6  0008               	return
  2325  04D7                     __end_of_Setup:
  2326                           
  2327                           	psect	text6
  2328  06B8                     __ptext6:	
  2329 ;; *************** function _initUSART *****************
  2330 ;; Defined at:
  2331 ;;		line 3 in file "USART.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0
  2348 ;;      Totals:         0       0       0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_Setup
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _initUSART
  2361  06B8                     _initUSART:
  2362  06B8                     l1391:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _initUSART: [wreg+status,2]
  2365                           
  2366                           
  2367                           ;USART.c: 5:     TRISCbits.TRISC6 = 0;
  2368  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  2369  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  2370  06BA  1307               	bcf	7,6	;volatile
  2371                           
  2372                           ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  2373  06BB  1787               	bsf	7,7	;volatile
  2374  06BC                     l1393:
  2375                           
  2376                           ;USART.c: 9:     SPBRG = 25;
  2377  06BC  3019               	movlw	25
  2378  06BD  0099               	movwf	25	;volatile
  2379  06BE                     l1395:
  2380                           
  2381                           ;USART.c: 10:     TXSTAbits.BRGH = 1;
  2382  06BE  1518               	bsf	24,2	;volatile
  2383  06BF                     l1397:
  2384                           
  2385                           ;USART.c: 11:     BAUDCTLbits.BRG16 = 0;
  2386  06BF  1683               	bsf	3,5	;RP0=1, select bank3
  2387  06C0  1703               	bsf	3,6	;RP1=1, select bank3
  2388  06C1  1187               	bcf	7,3	;volatile
  2389  06C2                     l1399:
  2390                           
  2391                           ;USART.c: 12:     SPBRGH = 0;
  2392  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  2393  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  2394  06C4  019A               	clrf	26	;volatile
  2395  06C5                     l1401:
  2396                           
  2397                           ;USART.c: 15:     TXSTAbits.SYNC = 0;
  2398  06C5  1218               	bcf	24,4	;volatile
  2399  06C6                     l1403:
  2400                           
  2401                           ;USART.c: 16:     RCSTAbits.SPEN = 1;
  2402  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2403  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2404  06C8  1798               	bsf	24,7	;volatile
  2405  06C9                     l1405:
  2406                           
  2407                           ;USART.c: 17:     TXSTAbits.TX9 = 0;
  2408  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  2409  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  2410  06CB  1318               	bcf	24,6	;volatile
  2411  06CC                     l1407:
  2412                           
  2413                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  2414  06CC  1698               	bsf	24,5	;volatile
  2415  06CD                     l1409:
  2416                           
  2417                           ;USART.c: 21:     PIE1bits.RCIE = 1;
  2418  06CD  168C               	bsf	12,5	;volatile
  2419  06CE                     l1411:
  2420                           
  2421                           ;USART.c: 22:     RCSTAbits.RX9 = 0;
  2422  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2423  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2424  06D0  1318               	bcf	24,6	;volatile
  2425  06D1                     l1413:
  2426                           
  2427                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  2428  06D1  1618               	bsf	24,4	;volatile
  2429  06D2                     l1415:
  2430                           
  2431                           ;USART.c: 26:     INTCONbits.GIE = 1;
  2432  06D2  178B               	bsf	11,7	;volatile
  2433  06D3                     l1417:
  2434                           
  2435                           ;USART.c: 27:     INTCONbits.PEIE = 1;
  2436  06D3  170B               	bsf	11,6	;volatile
  2437  06D4                     l83:
  2438  06D4  0008               	return
  2439  06D5                     __end_of_initUSART:
  2440                           
  2441                           	psect	text7
  2442  059E                     __ptext7:	
  2443 ;; *************** function _initADC *****************
  2444 ;; Defined at:
  2445 ;;		line 4 in file "ADC.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  IRCF            1    wreg     unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  IRCF            1    5[COMMON] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2459 ;;      Params:         0       0       0       0       0
  2460 ;;      Locals:         1       0       0       0       0
  2461 ;;      Temps:          2       0       0       0       0
  2462 ;;      Totals:         3       0       0       0       0
  2463 ;;Total ram usage:        3 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_Setup
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _initADC
  2475  059E                     _initADC:
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  2479                           ;initADC@IRCF stored from wreg
  2480  059E  00F5               	movwf	initADC@IRCF
  2481  059F                     l1335:
  2482                           
  2483                           ;ADC.c: 6:     ADCON0 = 0b10000011;
  2484  059F  3083               	movlw	131
  2485  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2486  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2487  05A2  009F               	movwf	31	;volatile
  2488  05A3                     l1337:
  2489                           
  2490                           ;ADC.c: 7:     ADCON1 = 0;
  2491  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  2492  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  2493  05A5  019F               	clrf	31	;volatile
  2494  05A6                     l1339:
  2495                           
  2496                           ;ADC.c: 8:     PIE1bits.ADIE = 1;
  2497  05A6  170C               	bsf	12,6	;volatile
  2498                           
  2499                           ;ADC.c: 9:     switch(IRCF){
  2500  05A7  2DD5               	goto	l1343
  2501  05A8                     l16:	
  2502                           ;ADC.c: 10:         case 0:
  2503                           
  2504                           
  2505                           ;ADC.c: 11:             TRISAbits.TRISA0 = 1;
  2506  05A8  1405               	bsf	5,0	;volatile
  2507                           
  2508                           ;ADC.c: 12:             ANSELbits.ANS0 = 1;
  2509  05A9  1683               	bsf	3,5	;RP0=1, select bank3
  2510  05AA  1703               	bsf	3,6	;RP1=1, select bank3
  2511  05AB  1408               	bsf	8,0	;volatile
  2512                           
  2513                           ;ADC.c: 13:             break;
  2514  05AC  2DF7               	goto	l26
  2515  05AD                     l18:	
  2516                           ;ADC.c: 14:         case 1:
  2517                           
  2518                           
  2519                           ;ADC.c: 15:             TRISAbits.TRISA1 = 1;
  2520  05AD  1485               	bsf	5,1	;volatile
  2521                           
  2522                           ;ADC.c: 16:             ANSELbits.ANS1 = 1;
  2523  05AE  1683               	bsf	3,5	;RP0=1, select bank3
  2524  05AF  1703               	bsf	3,6	;RP1=1, select bank3
  2525  05B0  1488               	bsf	8,1	;volatile
  2526                           
  2527                           ;ADC.c: 17:             break;
  2528  05B1  2DF7               	goto	l26
  2529  05B2                     l19:	
  2530                           ;ADC.c: 18:         case 2:
  2531                           
  2532                           
  2533                           ;ADC.c: 19:             TRISAbits.TRISA2 = 1;
  2534  05B2  1505               	bsf	5,2	;volatile
  2535                           
  2536                           ;ADC.c: 20:             ANSELbits.ANS2 = 1;
  2537  05B3  1683               	bsf	3,5	;RP0=1, select bank3
  2538  05B4  1703               	bsf	3,6	;RP1=1, select bank3
  2539  05B5  1508               	bsf	8,2	;volatile
  2540                           
  2541                           ;ADC.c: 21:             break;
  2542  05B6  2DF7               	goto	l26
  2543  05B7                     l20:	
  2544                           ;ADC.c: 22:         case 3:
  2545                           
  2546                           
  2547                           ;ADC.c: 23:             TRISAbits.TRISA3 = 1;
  2548  05B7  1585               	bsf	5,3	;volatile
  2549                           
  2550                           ;ADC.c: 24:             ANSELbits.ANS3 = 1;
  2551  05B8  1683               	bsf	3,5	;RP0=1, select bank3
  2552  05B9  1703               	bsf	3,6	;RP1=1, select bank3
  2553  05BA  1588               	bsf	8,3	;volatile
  2554                           
  2555                           ;ADC.c: 25:             break;
  2556  05BB  2DF7               	goto	l26
  2557  05BC                     l21:	
  2558                           ;ADC.c: 26:         case 4:
  2559                           
  2560                           
  2561                           ;ADC.c: 27:             TRISAbits.TRISA5 = 1;
  2562  05BC  1685               	bsf	5,5	;volatile
  2563                           
  2564                           ;ADC.c: 28:             ANSELbits.ANS4 = 1;
  2565  05BD  1683               	bsf	3,5	;RP0=1, select bank3
  2566  05BE  1703               	bsf	3,6	;RP1=1, select bank3
  2567  05BF  1608               	bsf	8,4	;volatile
  2568                           
  2569                           ;ADC.c: 29:             break;
  2570  05C0  2DF7               	goto	l26
  2571  05C1                     l22:	
  2572                           ;ADC.c: 30:         case 5:
  2573                           
  2574                           
  2575                           ;ADC.c: 31:             TRISEbits.TRISE0 = 1;
  2576  05C1  1409               	bsf	9,0	;volatile
  2577                           
  2578                           ;ADC.c: 32:             ANSELbits.ANS5 = 1;
  2579  05C2  1683               	bsf	3,5	;RP0=1, select bank3
  2580  05C3  1703               	bsf	3,6	;RP1=1, select bank3
  2581  05C4  1688               	bsf	8,5	;volatile
  2582                           
  2583                           ;ADC.c: 33:             break;
  2584  05C5  2DF7               	goto	l26
  2585  05C6                     l23:	
  2586                           ;ADC.c: 34:         case 6:
  2587                           
  2588                           
  2589                           ;ADC.c: 35:             TRISEbits.TRISE1 = 1;
  2590  05C6  1489               	bsf	9,1	;volatile
  2591                           
  2592                           ;ADC.c: 36:             ANSELbits.ANS6 = 1;
  2593  05C7  1683               	bsf	3,5	;RP0=1, select bank3
  2594  05C8  1703               	bsf	3,6	;RP1=1, select bank3
  2595  05C9  1708               	bsf	8,6	;volatile
  2596                           
  2597                           ;ADC.c: 37:             break;
  2598  05CA  2DF7               	goto	l26
  2599  05CB                     l24:	
  2600                           ;ADC.c: 38:         case 7:
  2601                           
  2602                           
  2603                           ;ADC.c: 39:             TRISEbits.TRISE2 = 1;
  2604  05CB  1509               	bsf	9,2	;volatile
  2605                           
  2606                           ;ADC.c: 40:             ANSELbits.ANS7 = 1;
  2607  05CC  1683               	bsf	3,5	;RP0=1, select bank3
  2608  05CD  1703               	bsf	3,6	;RP1=1, select bank3
  2609  05CE  1788               	bsf	8,7	;volatile
  2610                           
  2611                           ;ADC.c: 41:             break;
  2612  05CF  2DF7               	goto	l26
  2613  05D0                     l25:	
  2614                           ;ADC.c: 42:         default:
  2615                           
  2616                           
  2617                           ;ADC.c: 43:             TRISAbits.TRISA0 = 1;
  2618  05D0  1405               	bsf	5,0	;volatile
  2619                           
  2620                           ;ADC.c: 44:             ANSELbits.ANS0 = 1;
  2621  05D1  1683               	bsf	3,5	;RP0=1, select bank3
  2622  05D2  1703               	bsf	3,6	;RP1=1, select bank3
  2623  05D3  1408               	bsf	8,0	;volatile
  2624                           
  2625                           ;ADC.c: 45:             break;
  2626  05D4  2DF7               	goto	l26
  2627  05D5                     l1343:
  2628  05D5  0875               	movf	initADC@IRCF,w
  2629  05D6  00F3               	movwf	??_initADC
  2630  05D7  01F4               	clrf	??_initADC+1
  2631                           
  2632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2633                           ; Switch size 1, requested type "simple"
  2634                           ; Number of cases is 1, Range of values is 0 to 0
  2635                           ; switch strategies available:
  2636                           ; Name         Instructions Cycles
  2637                           ; simple_byte            4     3 (average)
  2638                           ; direct_byte           11     8 (fixed)
  2639                           ; jumptable            260     6 (fixed)
  2640                           ;	Chosen strategy is simple_byte
  2641  05D8  0874               	movf	??_initADC+1,w
  2642  05D9  3A00               	xorlw	0	; case 0
  2643  05DA  1903               	skipnz
  2644  05DB  2DDD               	goto	l2037
  2645  05DC  2DD0               	goto	l25
  2646  05DD                     l2037:
  2647                           
  2648                           ; Switch size 1, requested type "simple"
  2649                           ; Number of cases is 8, Range of values is 0 to 7
  2650                           ; switch strategies available:
  2651                           ; Name         Instructions Cycles
  2652                           ; simple_byte           25    13 (average)
  2653                           ; direct_byte           32     8 (fixed)
  2654                           ; jumptable            260     6 (fixed)
  2655                           ;	Chosen strategy is simple_byte
  2656  05DD  0873               	movf	??_initADC,w
  2657  05DE  3A00               	xorlw	0	; case 0
  2658  05DF  1903               	skipnz
  2659  05E0  2DA8               	goto	l16
  2660  05E1  3A01               	xorlw	1	; case 1
  2661  05E2  1903               	skipnz
  2662  05E3  2DAD               	goto	l18
  2663  05E4  3A03               	xorlw	3	; case 2
  2664  05E5  1903               	skipnz
  2665  05E6  2DB2               	goto	l19
  2666  05E7  3A01               	xorlw	1	; case 3
  2667  05E8  1903               	skipnz
  2668  05E9  2DB7               	goto	l20
  2669  05EA  3A07               	xorlw	7	; case 4
  2670  05EB  1903               	skipnz
  2671  05EC  2DBC               	goto	l21
  2672  05ED  3A01               	xorlw	1	; case 5
  2673  05EE  1903               	skipnz
  2674  05EF  2DC1               	goto	l22
  2675  05F0  3A03               	xorlw	3	; case 6
  2676  05F1  1903               	skipnz
  2677  05F2  2DC6               	goto	l23
  2678  05F3  3A01               	xorlw	1	; case 7
  2679  05F4  1903               	skipnz
  2680  05F5  2DCB               	goto	l24
  2681  05F6  2DD0               	goto	l25
  2682  05F7                     l26:
  2683  05F7  0008               	return
  2684  05F8                     __end_of_initADC:
  2685                           
  2686                           	psect	text8
  2687  0669                     __ptext8:	
  2688 ;; *************** function _Lcd_Write_String *****************
  2689 ;; Defined at:
  2690 ;;		line 72 in file "lcd.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  a               1    wreg     PTR unsigned char 
  2693 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  2694 ;;		 -> STR_2(5), STR_1(3), 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2697 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  2698 ;;		 -> STR_2(5), STR_1(3), 
  2699 ;;  i               2    0[BANK0 ] int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         0       3       0       0       0
  2711 ;;      Temps:          0       0       0       0       0
  2712 ;;      Totals:         0       3       0       0       0
  2713 ;;Total ram usage:        3 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    3
  2716 ;; This function calls:
  2717 ;;		_Lcd_Write_Char
  2718 ;; This function is called by:
  2719 ;;		_Setup
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _Lcd_Write_String
  2725  0669                     _Lcd_Write_String:
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2729                           ;Lcd_Write_String@a stored from wreg
  2730  0669  1283               	bcf	3,5	;RP0=0, select bank0
  2731  066A  1303               	bcf	3,6	;RP1=0, select bank0
  2732  066B  00A2               	movwf	Lcd_Write_String@a
  2733  066C                     l1847:
  2734                           
  2735                           ;lcd.c: 72: void Lcd_Write_String(char *a);lcd.c: 73: {;lcd.c: 74:  int i;;lcd.c: 75:  f
      +                          or(i=0;a[i]!='\0';i++)
  2736  066C  01A0               	clrf	Lcd_Write_String@i
  2737  066D  01A1               	clrf	Lcd_Write_String@i+1
  2738  066E  2E84               	goto	l1853
  2739  066F                     l1849:
  2740                           
  2741                           ;lcd.c: 76:     Lcd_Write_Char(a[i]);
  2742  066F  0820               	movf	Lcd_Write_String@i,w
  2743  0670  0722               	addwf	Lcd_Write_String@a,w
  2744  0671  0084               	movwf	4
  2745  0672  120A  118A  2719  120A  118A  	fcall	stringdir
  2746  0677  120A  118A  2704  120A  118A  	fcall	_Lcd_Write_Char
  2747  067C                     l1851:
  2748  067C  3001               	movlw	1
  2749  067D  1283               	bcf	3,5	;RP0=0, select bank0
  2750  067E  1303               	bcf	3,6	;RP1=0, select bank0
  2751  067F  07A0               	addwf	Lcd_Write_String@i,f
  2752  0680  1803               	skipnc
  2753  0681  0AA1               	incf	Lcd_Write_String@i+1,f
  2754  0682  3000               	movlw	0
  2755  0683  07A1               	addwf	Lcd_Write_String@i+1,f
  2756  0684                     l1853:
  2757  0684  0820               	movf	Lcd_Write_String@i,w
  2758  0685  0722               	addwf	Lcd_Write_String@a,w
  2759  0686  0084               	movwf	4
  2760  0687  120A  118A  2719  120A  118A  	fcall	stringdir
  2761  068C  3A00               	xorlw	0
  2762  068D  1D03               	skipz
  2763  068E  2E90               	goto	u1111
  2764  068F  2E91               	goto	u1110
  2765  0690                     u1111:
  2766  0690  2E6F               	goto	l1849
  2767  0691                     u1110:
  2768  0691                     l58:
  2769  0691  0008               	return
  2770  0692                     __end_of_Lcd_Write_String:
  2771                           
  2772                           	psect	text9
  2773  0704                     __ptext9:	
  2774 ;; *************** function _Lcd_Write_Char *****************
  2775 ;; Defined at:
  2776 ;;		line 63 in file "lcd.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  a               1    wreg     unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  a               1    5[COMMON] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         0       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0
  2792 ;;      Temps:          1       0       0       0       0
  2793 ;;      Totals:         2       0       0       0       0
  2794 ;;Total ram usage:        2 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    2
  2797 ;; This function calls:
  2798 ;;		_Lcd_Port
  2799 ;; This function is called by:
  2800 ;;		_Lcd_Write_String
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _Lcd_Write_Char
  2807  0704                     _Lcd_Write_Char:
  2808                           
  2809                           ;incstack = 0
  2810                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2811                           ;Lcd_Write_Char@a stored from wreg
  2812  0704  00F5               	movwf	Lcd_Write_Char@a
  2813  0705                     l1803:
  2814                           
  2815                           ;lcd.c: 63: void Lcd_Write_Char(char a);lcd.c: 64: {;lcd.c: 65:     RE0 = 1;
  2816  0705  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0706  1303               	bcf	3,6	;RP1=0, select bank0
  2818  0707  1409               	bsf	9,0	;volatile
  2819  0708                     l1805:
  2820                           
  2821                           ;lcd.c: 66:    Lcd_Port(a);
  2822  0708  0875               	movf	Lcd_Write_Char@a,w
  2823  0709  120A  118A  2735  120A  118A  	fcall	_Lcd_Port
  2824  070E                     l1807:
  2825                           
  2826                           ;lcd.c: 67:    RE1 = 1;
  2827  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2828  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0710  1489               	bsf	9,1	;volatile
  2830  0711                     l1809:
  2831                           
  2832                           ;lcd.c: 68:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2833  0711  300D               	movlw	13
  2834  0712  00F4               	movwf	??_Lcd_Write_Char
  2835  0713                     u1247:
  2836  0713  0BF4               	decfsz	??_Lcd_Write_Char,f
  2837  0714  2F13               	goto	u1247
  2838  0715                     l1811:
  2839                           
  2840                           ;lcd.c: 69:    RE1 = 0;
  2841  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0716  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0717  1089               	bcf	9,1	;volatile
  2844  0718                     l52:
  2845  0718  0008               	return
  2846  0719                     __end_of_Lcd_Write_Char:
  2847                           
  2848                           	psect	text10
  2849  0692                     __ptext10:	
  2850 ;; *************** function _Lcd_Set_Cursor *****************
  2851 ;; Defined at:
  2852 ;;		line 30 in file "lcd.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  a               1    wreg     unsigned char 
  2855 ;;  b               1    7[COMMON] unsigned char 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  a               1    1[BANK0 ] unsigned char 
  2858 ;;  temp            1    2[BANK0 ] unsigned char 
  2859 ;;  y               1    0        unsigned char 
  2860 ;;  z               1    0        unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         1       0       0       0       0
  2871 ;;      Locals:         0       2       0       0       0
  2872 ;;      Temps:          0       1       0       0       0
  2873 ;;      Totals:         1       3       0       0       0
  2874 ;;Total ram usage:        4 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    3
  2877 ;; This function calls:
  2878 ;;		_Lcd_Cmd
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;;		_Setup
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _Lcd_Set_Cursor
  2887  0692                     _Lcd_Set_Cursor:
  2888                           
  2889                           ;incstack = 0
  2890                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2891                           ;Lcd_Set_Cursor@a stored from wreg
  2892  0692  1283               	bcf	3,5	;RP0=0, select bank0
  2893  0693  1303               	bcf	3,6	;RP1=0, select bank0
  2894  0694  00A1               	movwf	Lcd_Set_Cursor@a
  2895  0695                     l1813:
  2896                           
  2897                           ;lcd.c: 30: void Lcd_Set_Cursor(char a, char b);lcd.c: 31: {;lcd.c: 32:  char temp,z,y;;
      +                          lcd.c: 33:  if(a == 1)
  2898  0695  0321               	decf	Lcd_Set_Cursor@a,w
  2899  0696  1D03               	btfss	3,2
  2900  0697  2E99               	goto	u1091
  2901  0698  2E9A               	goto	u1090
  2902  0699                     u1091:
  2903  0699  2EA6               	goto	l1819
  2904  069A                     u1090:
  2905  069A                     l1815:
  2906                           
  2907                           ;lcd.c: 34:  {;lcd.c: 35:    temp = 0x80 + b - 1;
  2908  069A  0877               	movf	Lcd_Set_Cursor@b,w
  2909  069B  3E7F               	addlw	127
  2910  069C  00A0               	movwf	??_Lcd_Set_Cursor
  2911  069D  0820               	movf	??_Lcd_Set_Cursor,w
  2912  069E  00A2               	movwf	Lcd_Set_Cursor@temp
  2913  069F                     l1817:
  2914                           
  2915                           ;lcd.c: 36:   Lcd_Cmd(temp);
  2916  069F  0822               	movf	Lcd_Set_Cursor@temp,w
  2917  06A0  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  2918                           
  2919                           ;lcd.c: 37:  }
  2920  06A5  2EB7               	goto	l46
  2921  06A6                     l1819:
  2922  06A6  3002               	movlw	2
  2923  06A7  0621               	xorwf	Lcd_Set_Cursor@a,w
  2924  06A8  1D03               	btfss	3,2
  2925  06A9  2EAB               	goto	u1101
  2926  06AA  2EAC               	goto	u1100
  2927  06AB                     u1101:
  2928  06AB  2EB7               	goto	l46
  2929  06AC                     u1100:
  2930  06AC                     l1821:
  2931                           
  2932                           ;lcd.c: 39:  {;lcd.c: 40:   temp = 0xC0 + b - 1;
  2933  06AC  0877               	movf	Lcd_Set_Cursor@b,w
  2934  06AD  3EBF               	addlw	191
  2935  06AE  00A0               	movwf	??_Lcd_Set_Cursor
  2936  06AF  0820               	movf	??_Lcd_Set_Cursor,w
  2937  06B0  00A2               	movwf	Lcd_Set_Cursor@temp
  2938  06B1                     l1823:
  2939                           
  2940                           ;lcd.c: 41:   Lcd_Cmd(temp);
  2941  06B1  0822               	movf	Lcd_Set_Cursor@temp,w
  2942  06B2  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  2943  06B7                     l46:
  2944  06B7  0008               	return
  2945  06B8                     __end_of_Lcd_Set_Cursor:
  2946                           
  2947                           	psect	text11
  2948  0540                     __ptext11:	
  2949 ;; *************** function _Lcd_Init *****************
  2950 ;; Defined at:
  2951 ;;		line 45 in file "lcd.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, pclath, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0
  2967 ;;      Temps:          0       2       0       0       0
  2968 ;;      Totals:         0       2       0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    3
  2972 ;; This function calls:
  2973 ;;		_Lcd_Cmd
  2974 ;;		_Lcd_Port
  2975 ;; This function is called by:
  2976 ;;		_Setup
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _Lcd_Init
  2982  0540                     _Lcd_Init:
  2983  0540                     l1825:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2986                           
  2987                           
  2988                           ;lcd.c: 46:    _delay((unsigned long)((15)*(4000000/4000.0)));
  2989  0540  3014               	movlw	20
  2990  0541  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0542  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0543  00A1               	movwf	??_Lcd_Init+1
  2993  0544  3079               	movlw	121
  2994  0545  00A0               	movwf	??_Lcd_Init
  2995  0546                     u1257:
  2996  0546  0BA0               	decfsz	??_Lcd_Init,f
  2997  0547  2D46               	goto	u1257
  2998  0548  0BA1               	decfsz	??_Lcd_Init+1,f
  2999  0549  2D46               	goto	u1257
  3000  054A                     l1827:
  3001                           
  3002                           ;lcd.c: 47:   Lcd_Port(0x00);
  3003  054A  3000               	movlw	0
  3004  054B  120A  118A  2735  120A  118A  	fcall	_Lcd_Port
  3005  0550                     l1829:
  3006                           
  3007                           ;lcd.c: 48:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3008  0550  301A               	movlw	26
  3009  0551  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0552  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0553  00A1               	movwf	??_Lcd_Init+1
  3012  0554  30F7               	movlw	247
  3013  0555  00A0               	movwf	??_Lcd_Init
  3014  0556                     u1267:
  3015  0556  0BA0               	decfsz	??_Lcd_Init,f
  3016  0557  2D56               	goto	u1267
  3017  0558  0BA1               	decfsz	??_Lcd_Init+1,f
  3018  0559  2D56               	goto	u1267
  3019  055A  2D5B               	nop2
  3020                           
  3021                           ;lcd.c: 49:   Lcd_Cmd(0x030);
  3022  055B  3030               	movlw	48
  3023  055C  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  3024  0561                     l1831:
  3025                           
  3026                           ;lcd.c: 50:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3027  0561  3007               	movlw	7
  3028  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0564  00A1               	movwf	??_Lcd_Init+1
  3031  0565  307C               	movlw	124
  3032  0566  00A0               	movwf	??_Lcd_Init
  3033  0567                     u1277:
  3034  0567  0BA0               	decfsz	??_Lcd_Init,f
  3035  0568  2D67               	goto	u1277
  3036  0569  0BA1               	decfsz	??_Lcd_Init+1,f
  3037  056A  2D67               	goto	u1277
  3038  056B  0000               	nop
  3039  056C                     l1833:
  3040                           
  3041                           ;lcd.c: 51:   Lcd_Cmd(0x030);
  3042  056C  3030               	movlw	48
  3043  056D  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  3044                           
  3045                           ;lcd.c: 52:  _delay((unsigned long)((160)*(4000000/4000000.0)));
  3046  0572  3034               	movlw	52
  3047  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0575  00A0               	movwf	??_Lcd_Init
  3050  0576                     u1287:
  3051  0576  0BA0               	decfsz	??_Lcd_Init,f
  3052  0577  2D76               	goto	u1287
  3053  0578  0000               	nop
  3054  0579                     l1835:
  3055                           
  3056                           ;lcd.c: 53:   Lcd_Cmd(0x030);
  3057  0579  3030               	movlw	48
  3058  057A  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  3059  057F                     l1837:
  3060                           
  3061                           ;lcd.c: 55:   Lcd_Cmd(0x038);
  3062  057F  3038               	movlw	56
  3063  0580  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  3064  0585                     l1839:
  3065                           
  3066                           ;lcd.c: 56:   Lcd_Cmd(0x010);
  3067  0585  3010               	movlw	16
  3068  0586  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  3069  058B                     l1841:
  3070                           
  3071                           ;lcd.c: 57:   Lcd_Cmd(0x001);
  3072  058B  3001               	movlw	1
  3073  058C  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  3074  0591                     l1843:
  3075                           
  3076                           ;lcd.c: 58:   Lcd_Cmd(0x006);
  3077  0591  3006               	movlw	6
  3078  0592  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  3079  0597                     l1845:
  3080                           
  3081                           ;lcd.c: 60:   Lcd_Cmd(0x0C);
  3082  0597  300C               	movlw	12
  3083  0598  120A  118A  26D5  120A  118A  	fcall	_Lcd_Cmd
  3084  059D                     l49:
  3085  059D  0008               	return
  3086  059E                     __end_of_Lcd_Init:
  3087                           
  3088                           	psect	text12
  3089  06D5                     __ptext12:	
  3090 ;; *************** function _Lcd_Cmd *****************
  3091 ;; Defined at:
  3092 ;;		line 16 in file "lcd.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  a               1    wreg     unsigned char 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  a               1    6[COMMON] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         0       0       0       0       0
  3107 ;;      Locals:         1       0       0       0       0
  3108 ;;      Temps:          2       0       0       0       0
  3109 ;;      Totals:         3       0       0       0       0
  3110 ;;Total ram usage:        3 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    2
  3113 ;; This function calls:
  3114 ;;		_Lcd_Port
  3115 ;; This function is called by:
  3116 ;;		_Lcd_Set_Cursor
  3117 ;;		_Lcd_Init
  3118 ;;		_Lcd_Shift_Right
  3119 ;;		_Lcd_Shift_Left
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _Lcd_Cmd
  3125  06D5                     _Lcd_Cmd:
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3129                           ;Lcd_Cmd@a stored from wreg
  3130  06D5  00F6               	movwf	Lcd_Cmd@a
  3131  06D6                     l1793:
  3132                           
  3133                           ;lcd.c: 16: void Lcd_Cmd(char a);lcd.c: 17: {;lcd.c: 18:  RE0 = 0;
  3134  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3135  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  3136  06D8  1009               	bcf	9,0	;volatile
  3137  06D9                     l1795:
  3138                           
  3139                           ;lcd.c: 19:  Lcd_Port(a);
  3140  06D9  0876               	movf	Lcd_Cmd@a,w
  3141  06DA  120A  118A  2735  120A  118A  	fcall	_Lcd_Port
  3142  06DF                     l1797:
  3143                           
  3144                           ;lcd.c: 20:  RE1 = 1;
  3145  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3146  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3147  06E1  1489               	bsf	9,1	;volatile
  3148  06E2                     l1799:
  3149                           
  3150                           ;lcd.c: 21:         _delay((unsigned long)((10)*(4000000/4000.0)));
  3151  06E2  300D               	movlw	13
  3152  06E3  00F5               	movwf	??_Lcd_Cmd+1
  3153  06E4  30FB               	movlw	251
  3154  06E5  00F4               	movwf	??_Lcd_Cmd
  3155  06E6                     u1297:
  3156  06E6  0BF4               	decfsz	??_Lcd_Cmd,f
  3157  06E7  2EE6               	goto	u1297
  3158  06E8  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3159  06E9  2EE6               	goto	u1297
  3160  06EA  2EEB               	nop2
  3161  06EB                     l1801:
  3162                           
  3163                           ;lcd.c: 22:         RE1 = 0;
  3164  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  3165  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  3166  06ED  1089               	bcf	9,1	;volatile
  3167  06EE                     l40:
  3168  06EE  0008               	return
  3169  06EF                     __end_of_Lcd_Cmd:
  3170                           
  3171                           	psect	text13
  3172  0735                     __ptext13:	
  3173 ;; *************** function _Lcd_Port *****************
  3174 ;; Defined at:
  3175 ;;		line 12 in file "lcd.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  a               1    wreg     unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  a               1    3[COMMON] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       0       0       0       0
  3190 ;;      Locals:         1       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0
  3192 ;;      Totals:         1       0       0       0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_Lcd_Cmd
  3200 ;;		_Lcd_Init
  3201 ;;		_Lcd_Write_Char
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _Lcd_Port
  3207  0735                     _Lcd_Port:
  3208                           
  3209                           ;incstack = 0
  3210                           ; Regs used in _Lcd_Port: [wreg]
  3211                           ;Lcd_Port@a stored from wreg
  3212  0735  00F3               	movwf	Lcd_Port@a
  3213  0736                     l1791:
  3214                           
  3215                           ;lcd.c: 12: void Lcd_Port(char a);lcd.c: 13: {;lcd.c: 14:  PORTD = a;
  3216  0736  0873               	movf	Lcd_Port@a,w
  3217  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0738  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0739  0088               	movwf	8	;volatile
  3220  073A                     l37:
  3221  073A  0008               	return
  3222  073B                     __end_of_Lcd_Port:
  3223                           
  3224                           	psect	text14
  3225  032C                     __ptext14:	
  3226 ;; *************** function _isr *****************
  3227 ;; Defined at:
  3228 ;;		line 71 in file "lab3.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          3       0       0       0       0
  3245 ;;      Totals:         3       0       0       0       0
  3246 ;;Total ram usage:        3 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		Interrupt level 1
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _isr
  3257  032C                     _isr:
  3258  032C                     i1l1581:
  3259                           
  3260                           ;lab3.c: 73:         }
  3261  032C  1D0B               	btfss	11,2	;volatile
  3262  032D  2B2F               	goto	u81_21
  3263  032E  2B30               	goto	u81_20
  3264  032F                     u81_21:
  3265  032F  2B37               	goto	i1l1587
  3266  0330                     u81_20:
  3267  0330                     i1l1583:
  3268                           
  3269                           ;lab3.c: 74:     }
  3270  0330  3001               	movlw	1
  3271  0331  00F0               	movwf	??_isr
  3272  0332  0870               	movf	??_isr,w
  3273  0333  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0334  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0335  07C4               	addwf	_CONTX,f
  3276  0336                     i1l1585:
  3277                           
  3278                           ;lab3.c: 75: 
  3279  0336  110B               	bcf	11,2	;volatile
  3280  0337                     i1l1587:
  3281                           
  3282                           ;lab3.c: 78:             TXREG = C11 + 48;
  3283  0337  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0338  1303               	bcf	3,6	;RP1=0, select bank0
  3285  0339  1F0C               	btfss	12,6	;volatile
  3286  033A  2B3C               	goto	u82_21
  3287  033B  2B3D               	goto	u82_20
  3288  033C                     u82_21:
  3289  033C  2B52               	goto	i1l1607
  3290  033D                     u82_20:
  3291  033D                     i1l1589:
  3292                           
  3293                           ;lab3.c: 79:             bandera1 = 1;
  3294  033D  037A               	decf	_bandera,w
  3295  033E  1D03               	btfss	3,2
  3296  033F  2B41               	goto	u83_21
  3297  0340  2B42               	goto	u83_20
  3298  0341                     u83_21:
  3299  0341  2B49               	goto	i1l1597
  3300  0342                     u83_20:
  3301  0342                     i1l1591:
  3302                           
  3303                           ;lab3.c: 80:         } else if (bandera1 == 1){
  3304  0342  081E               	movf	30,w	;volatile
  3305  0343  00F0               	movwf	??_isr
  3306  0344  0870               	movf	??_isr,w
  3307  0345  00CA               	movwf	_ADC1
  3308  0346                     i1l1593:
  3309                           
  3310                           ;lab3.c: 81:             TXREG = 0x2E;
  3311  0346  151F               	bsf	31,2	;volatile
  3312  0347                     i1l1595:
  3313                           
  3314                           ;lab3.c: 82:             bandera1 = 2;
  3315  0347  01FA               	clrf	_bandera
  3316                           
  3317                           ;lab3.c: 83:         } else if (bandera1 == 2){
  3318  0348  2B50               	goto	i1l1603
  3319  0349                     i1l1597:
  3320                           
  3321                           ;lab3.c: 84:             TXREG = C12 + 48;
  3322  0349  081E               	movf	30,w	;volatile
  3323  034A  00F0               	movwf	??_isr
  3324  034B  0870               	movf	??_isr,w
  3325  034C  00C9               	movwf	_ADC2
  3326  034D                     i1l1599:
  3327                           
  3328                           ;lab3.c: 85:             bandera1 = 3;
  3329  034D  111F               	bcf	31,2	;volatile
  3330  034E                     i1l1601:
  3331                           
  3332                           ;lab3.c: 86:         } else if (bandera1 == 3){
  3333  034E  01FA               	clrf	_bandera
  3334  034F  0AFA               	incf	_bandera,f
  3335  0350                     i1l1603:
  3336                           
  3337                           ;lab3.c: 88:             bandera1 = 4;
  3338  0350  130C               	bcf	12,6	;volatile
  3339  0351                     i1l1605:
  3340                           
  3341                           ;lab3.c: 89:         } else if (bandera1 == 4){
  3342  0351  149F               	bsf	31,1	;volatile
  3343  0352                     i1l1607:
  3344                           
  3345                           ;lab3.c: 91:             bandera1 = 5;
  3346  0352  1E8C               	btfss	12,5	;volatile
  3347  0353  2B55               	goto	u84_21
  3348  0354  2B56               	goto	u84_20
  3349  0355                     u84_21:
  3350  0355  2B95               	goto	i1l1629
  3351  0356                     u84_20:
  3352  0356                     i1l1609:
  3353                           
  3354                           ;lab3.c: 93:         else if (bandera1 == 5){
  3355  0356  1785               	bsf	5,7	;volatile
  3356  0357                     i1l1611:
  3357                           
  3358                           ;lab3.c: 94:             TXREG = C21 + 48;
  3359  0357  300D               	movlw	13
  3360  0358  061A               	xorwf	26,w	;volatile
  3361  0359  1D03               	btfss	3,2
  3362  035A  2B5C               	goto	u85_21
  3363  035B  2B5D               	goto	u85_20
  3364  035C                     u85_21:
  3365  035C  2B90               	goto	i1l1627
  3366  035D                     u85_20:
  3367  035D                     i1l1613:
  3368                           
  3369                           ;lab3.c: 95:             bandera1 = 6;
  3370  035D  1385               	bcf	5,7	;volatile
  3371  035E                     i1l1615:
  3372                           
  3373                           ;lab3.c: 96:         } else if (bandera1 == 6){
  3374  035E  302B               	movlw	43
  3375  035F  0679               	xorwf	_RC_temp,w
  3376  0360  1D03               	btfss	3,2
  3377  0361  2B63               	goto	u86_21
  3378  0362  2B64               	goto	u86_20
  3379  0363                     u86_21:
  3380  0363  2B76               	goto	i1l1621
  3381  0364                     u86_20:
  3382  0364                     i1l1617:
  3383                           
  3384                           ;lab3.c: 97:             TXREG = 0x2E;
  3385  0364  3001               	movlw	1
  3386  0365  07B6               	addwf	_contador,f
  3387  0366  1803               	skipnc
  3388  0367  0AB7               	incf	_contador+1,f
  3389  0368  3000               	movlw	0
  3390  0369  07B7               	addwf	_contador+1,f
  3391                           
  3392                           ;lab3.c: 98:             bandera1 = 7;
  3393  036A  3001               	movlw	1
  3394  036B  0237               	subwf	_contador+1,w
  3395  036C  3000               	movlw	0
  3396  036D  1903               	skipnz
  3397  036E  0236               	subwf	_contador,w
  3398  036F  1C03               	skipc
  3399  0370  2B72               	goto	u87_21
  3400  0371  2B73               	goto	u87_20
  3401  0372                     u87_21:
  3402  0372  2B95               	goto	i1l1629
  3403  0373                     u87_20:
  3404  0373                     i1l1619:
  3405                           
  3406                           ;lab3.c: 99:         } else if (bandera1 == 7){
  3407  0373  01B6               	clrf	_contador
  3408  0374  01B7               	clrf	_contador+1
  3409  0375  2B95               	goto	i1l1629
  3410  0376                     i1l1621:
  3411  0376  302D               	movlw	45
  3412  0377  0679               	xorwf	_RC_temp,w
  3413  0378  1D03               	btfss	3,2
  3414  0379  2B7B               	goto	u88_21
  3415  037A  2B7C               	goto	u88_20
  3416  037B                     u88_21:
  3417  037B  2B95               	goto	i1l203
  3418  037C                     u88_20:
  3419  037C                     i1l1623:
  3420                           
  3421                           ;lab3.c: 102:         } else if (bandera1 == 8){
  3422  037C  3001               	movlw	1
  3423  037D  02B6               	subwf	_contador,f
  3424  037E  3000               	movlw	0
  3425  037F  1C03               	skipc
  3426  0380  03B7               	decf	_contador+1,f
  3427  0381  02B7               	subwf	_contador+1,f
  3428                           
  3429                           ;lab3.c: 104:             bandera1 = 9;
  3430  0382  3001               	movlw	1
  3431  0383  0237               	subwf	_contador+1,w
  3432  0384  3000               	movlw	0
  3433  0385  1903               	skipnz
  3434  0386  0236               	subwf	_contador,w
  3435  0387  1C03               	skipc
  3436  0388  2B8A               	goto	u89_21
  3437  0389  2B8B               	goto	u89_20
  3438  038A                     u89_21:
  3439  038A  2B95               	goto	i1l203
  3440  038B                     u89_20:
  3441  038B                     i1l1625:
  3442                           
  3443                           ;lab3.c: 105:         } else if (bandera1 == 9){
  3444  038B  30FF               	movlw	255
  3445  038C  00B6               	movwf	_contador
  3446  038D  3000               	movlw	0
  3447  038E  00B7               	movwf	_contador+1
  3448  038F  2B95               	goto	i1l1629
  3449  0390                     i1l1627:
  3450                           
  3451                           ;lab3.c: 110:     TXIE = 0;
  3452  0390  081A               	movf	26,w	;volatile
  3453  0391  00F0               	movwf	??_isr
  3454  0392  0870               	movf	??_isr,w
  3455  0393  00F9               	movwf	_RC_temp
  3456  0394  2B95               	goto	i1l1629
  3457  0395                     i1l203:	
  3458                           ;lab3.c: 111:     }
  3459                           
  3460  0395                     i1l1629:
  3461                           
  3462                           ;lab3.c: 114: 
  3463  0395  1E0C               	btfss	12,4	;volatile
  3464  0396  2B98               	goto	u90_21
  3465  0397  2B99               	goto	u90_20
  3466  0398                     u90_21:
  3467  0398  2C1D               	goto	i1l224
  3468  0399                     u90_20:
  3469  0399                     i1l1631:
  3470                           
  3471                           ;lab3.c: 115: void main(void) {
  3472  0399  0878               	movf	_bandera1,w
  3473  039A  1D03               	btfss	3,2
  3474  039B  2B9D               	goto	u91_21
  3475  039C  2B9E               	goto	u91_20
  3476  039D                     u91_21:
  3477  039D  2BA4               	goto	i1l1637
  3478  039E                     u91_20:
  3479  039E                     i1l1633:
  3480                           
  3481                           ;lab3.c: 116:     Setup();
  3482  039E  0842               	movf	_C11,w
  3483  039F  3E30               	addlw	48
  3484  03A0  0099               	movwf	25	;volatile
  3485  03A1                     i1l1635:
  3486                           
  3487                           ;lab3.c: 117:     while(1){
  3488  03A1  01F8               	clrf	_bandera1
  3489  03A2  0AF8               	incf	_bandera1,f
  3490                           
  3491                           ;lab3.c: 118:         if(CONTX > 15){
  3492  03A3  2C1A               	goto	i1l1685
  3493  03A4                     i1l1637:
  3494  03A4  0378               	decf	_bandera1,w
  3495  03A5  1D03               	btfss	3,2
  3496  03A6  2BA8               	goto	u92_21
  3497  03A7  2BA9               	goto	u92_20
  3498  03A8                     u92_21:
  3499  03A8  2BB0               	goto	i1l1641
  3500  03A9                     u92_20:
  3501  03A9                     i1l1639:
  3502                           
  3503                           ;lab3.c: 119:             CONTX = 0;
  3504  03A9  302E               	movlw	46
  3505  03AA  0099               	movwf	25	;volatile
  3506                           
  3507                           ;lab3.c: 120:             TXIE = 1;
  3508  03AB  3002               	movlw	2
  3509  03AC  00F0               	movwf	??_isr
  3510  03AD  0870               	movf	??_isr,w
  3511  03AE  00F8               	movwf	_bandera1
  3512                           
  3513                           ;lab3.c: 121:             }
  3514  03AF  2C1A               	goto	i1l1685
  3515  03B0                     i1l1641:
  3516  03B0  3002               	movlw	2
  3517  03B1  0678               	xorwf	_bandera1,w
  3518  03B2  1D03               	btfss	3,2
  3519  03B3  2BB5               	goto	u93_21
  3520  03B4  2BB6               	goto	u93_20
  3521  03B5                     u93_21:
  3522  03B5  2BBE               	goto	i1l1647
  3523  03B6                     u93_20:
  3524  03B6                     i1l1643:
  3525                           
  3526                           ;lab3.c: 122: 
  3527  03B6  0841               	movf	_C12,w
  3528  03B7  3E30               	addlw	48
  3529  03B8  0099               	movwf	25	;volatile
  3530  03B9                     i1l1645:
  3531                           
  3532                           ;lab3.c: 123: 
  3533  03B9  3003               	movlw	3
  3534  03BA  00F0               	movwf	??_isr
  3535  03BB  0870               	movf	??_isr,w
  3536  03BC  00F8               	movwf	_bandera1
  3537                           
  3538                           ;lab3.c: 124:     C11 = ADC1 / 51;
  3539  03BD  2C1A               	goto	i1l1685
  3540  03BE                     i1l1647:
  3541  03BE  3003               	movlw	3
  3542  03BF  0678               	xorwf	_bandera1,w
  3543  03C0  1D03               	btfss	3,2
  3544  03C1  2BC3               	goto	u94_21
  3545  03C2  2BC4               	goto	u94_20
  3546  03C3                     u94_21:
  3547  03C3  2BCC               	goto	i1l1653
  3548  03C4                     u94_20:
  3549  03C4                     i1l1649:
  3550                           
  3551                           ;lab3.c: 125:     C12 = ((ADC1 * 100 / 51) - (C11*100))/10;
  3552  03C4  0840               	movf	_C13,w
  3553  03C5  3E30               	addlw	48
  3554  03C6  0099               	movwf	25	;volatile
  3555  03C7                     i1l1651:
  3556                           
  3557                           ;lab3.c: 126:     C13 = ((ADC1 * 100 / 51) - (C11*100) - (C12*10));
  3558  03C7  3004               	movlw	4
  3559  03C8  00F0               	movwf	??_isr
  3560  03C9  0870               	movf	??_isr,w
  3561  03CA  00F8               	movwf	_bandera1
  3562                           
  3563                           ;lab3.c: 127: 
  3564  03CB  2C1A               	goto	i1l1685
  3565  03CC                     i1l1653:
  3566  03CC  3004               	movlw	4
  3567  03CD  0678               	xorwf	_bandera1,w
  3568  03CE  1D03               	btfss	3,2
  3569  03CF  2BD1               	goto	u95_21
  3570  03D0  2BD2               	goto	u95_20
  3571  03D1                     u95_21:
  3572  03D1  2BD9               	goto	i1l1657
  3573  03D2                     u95_20:
  3574  03D2                     i1l1655:
  3575                           
  3576                           ;lab3.c: 128:     C21 = ADC2 / 51;
  3577  03D2  302D               	movlw	45
  3578  03D3  0099               	movwf	25	;volatile
  3579                           
  3580                           ;lab3.c: 129:     C22 = (((ADC2 * 100) / 51) - (C21*100))/10;
  3581  03D4  3005               	movlw	5
  3582  03D5  00F0               	movwf	??_isr
  3583  03D6  0870               	movf	??_isr,w
  3584  03D7  00F8               	movwf	_bandera1
  3585                           
  3586                           ;lab3.c: 130:     C23 = (((ADC2 * 100) / 51) - (C21*100) - (C22*10));
  3587  03D8  2C1A               	goto	i1l1685
  3588  03D9                     i1l1657:
  3589  03D9  3005               	movlw	5
  3590  03DA  0678               	xorwf	_bandera1,w
  3591  03DB  1D03               	btfss	3,2
  3592  03DC  2BDE               	goto	u96_21
  3593  03DD  2BDF               	goto	u96_20
  3594  03DE                     u96_21:
  3595  03DE  2BE7               	goto	i1l1663
  3596  03DF                     u96_20:
  3597  03DF                     i1l1659:
  3598                           
  3599                           ;lab3.c: 132:     C31 = contador / 51;
  3600  03DF  083F               	movf	_C21,w
  3601  03E0  3E30               	addlw	48
  3602  03E1  0099               	movwf	25	;volatile
  3603  03E2                     i1l1661:
  3604                           
  3605                           ;lab3.c: 133:     C32 = ((contador * 100 / 51) - (C31*100))/10;
  3606  03E2  3006               	movlw	6
  3607  03E3  00F0               	movwf	??_isr
  3608  03E4  0870               	movf	??_isr,w
  3609  03E5  00F8               	movwf	_bandera1
  3610                           
  3611                           ;lab3.c: 134:     C33 = ((contador * 100 / 51) - (C31*100) - (C32*10));
  3612  03E6  2C1A               	goto	i1l1685
  3613  03E7                     i1l1663:
  3614  03E7  3006               	movlw	6
  3615  03E8  0678               	xorwf	_bandera1,w
  3616  03E9  1D03               	btfss	3,2
  3617  03EA  2BEC               	goto	u97_21
  3618  03EB  2BED               	goto	u97_20
  3619  03EC                     u97_21:
  3620  03EC  2BF4               	goto	i1l1667
  3621  03ED                     u97_20:
  3622  03ED                     i1l1665:
  3623                           
  3624                           ;lab3.c: 135: 
  3625  03ED  302E               	movlw	46
  3626  03EE  0099               	movwf	25	;volatile
  3627                           
  3628                           ;lab3.c: 136:     if (C12 > 9){
  3629  03EF  3007               	movlw	7
  3630  03F0  00F0               	movwf	??_isr
  3631  03F1  0870               	movf	??_isr,w
  3632  03F2  00F8               	movwf	_bandera1
  3633                           
  3634                           ;lab3.c: 137:         C12 = 9;
  3635  03F3  2C1A               	goto	i1l1685
  3636  03F4                     i1l1667:
  3637  03F4  3007               	movlw	7
  3638  03F5  0678               	xorwf	_bandera1,w
  3639  03F6  1D03               	btfss	3,2
  3640  03F7  2BF9               	goto	u98_21
  3641  03F8  2BFA               	goto	u98_20
  3642  03F9                     u98_21:
  3643  03F9  2C02               	goto	i1l1673
  3644  03FA                     u98_20:
  3645  03FA                     i1l1669:
  3646                           
  3647                           ;lab3.c: 138:     }
  3648  03FA  083E               	movf	_C22,w
  3649  03FB  3E30               	addlw	48
  3650  03FC  0099               	movwf	25	;volatile
  3651  03FD                     i1l1671:
  3652                           
  3653                           ;lab3.c: 139:     if (C13 > 9){
  3654  03FD  3008               	movlw	8
  3655  03FE  00F0               	movwf	??_isr
  3656  03FF  0870               	movf	??_isr,w
  3657  0400  00F8               	movwf	_bandera1
  3658                           
  3659                           ;lab3.c: 140:         C13 = 9;
  3660  0401  2C1A               	goto	i1l1685
  3661  0402                     i1l1673:
  3662  0402  3008               	movlw	8
  3663  0403  0678               	xorwf	_bandera1,w
  3664  0404  1D03               	btfss	3,2
  3665  0405  2C07               	goto	u99_21
  3666  0406  2C08               	goto	u99_20
  3667  0407                     u99_21:
  3668  0407  2C10               	goto	i1l1679
  3669  0408                     u99_20:
  3670  0408                     i1l1675:
  3671                           
  3672                           ;lab3.c: 141:     }
  3673  0408  083D               	movf	_C23,w
  3674  0409  3E30               	addlw	48
  3675  040A  0099               	movwf	25	;volatile
  3676  040B                     i1l1677:
  3677                           
  3678                           ;lab3.c: 142:     if (C22 > 9){
  3679  040B  3009               	movlw	9
  3680  040C  00F0               	movwf	??_isr
  3681  040D  0870               	movf	??_isr,w
  3682  040E  00F8               	movwf	_bandera1
  3683                           
  3684                           ;lab3.c: 143:         C22 = 9;
  3685  040F  2C1A               	goto	i1l1685
  3686  0410                     i1l1679:
  3687  0410  3009               	movlw	9
  3688  0411  0678               	xorwf	_bandera1,w
  3689  0412  1D03               	btfss	3,2
  3690  0413  2C15               	goto	u100_21
  3691  0414  2C16               	goto	u100_20
  3692  0415                     u100_21:
  3693  0415  2C1A               	goto	i1l218
  3694  0416                     u100_20:
  3695  0416                     i1l1681:
  3696                           
  3697                           ;lab3.c: 144:     }
  3698  0416  300D               	movlw	13
  3699  0417  0099               	movwf	25	;volatile
  3700  0418                     i1l1683:
  3701                           
  3702                           ;lab3.c: 145:     if (C23 > 9){
  3703  0418  01F8               	clrf	_bandera1
  3704  0419  2C1A               	goto	i1l1685
  3705  041A                     i1l218:
  3706  041A                     i1l1685:
  3707                           
  3708                           ;lab3.c: 148: 
  3709  041A  1683               	bsf	3,5	;RP0=1, select bank1
  3710  041B  1303               	bcf	3,6	;RP1=0, select bank1
  3711  041C  120C               	bcf	12,4	;volatile
  3712  041D                     i1l224:
  3713  041D  0872               	movf	??_isr+2,w
  3714  041E  008A               	movwf	10
  3715  041F  0E71               	swapf	??_isr+1,w
  3716  0420  0083               	movwf	3
  3717  0421  0EFE               	swapf	btemp,f
  3718  0422  0E7E               	swapf	btemp,w
  3719  0423  0009               	retfie
  3720  0424                     __end_of_isr:
  3721  007E                     btemp	set	126	;btemp
  3722  007E                     wtemp0	set	126
  3723                           
  3724                           	psect	intentry
  3725  0004                     __pintentry:	
  3726                           ;incstack = 0
  3727                           ; Regs used in _isr: [wreg+status,2+status,0]
  3728                           
  3729  0004                     interrupt_function:
  3730  007E                     saved_w	set	btemp
  3731  0004  00FE               	movwf	btemp
  3732  0005  0E03               	swapf	3,w
  3733  0006  00F1               	movwf	??_isr+1
  3734  0007  080A               	movf	10,w
  3735  0008  00F2               	movwf	??_isr+2
  3736  0009  120A  118A  2B2C   	ljmp	_isr
  3737                           
  3738                           	psect	config
  3739                           
  3740                           ;Config register CONFIG1 @ 0x2007
  3741                           ;	Oscillator Selection bits
  3742                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3743                           ;	Watchdog Timer Enable bit
  3744                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3745                           ;	Power-up Timer Enable bit
  3746                           ;	PWRTE = OFF, PWRT disabled
  3747                           ;	RE3/MCLR pin function select bit
  3748                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3749                           ;	Code Protection bit
  3750                           ;	CP = OFF, Program memory code protection is disabled
  3751                           ;	Data Code Protection bit
  3752                           ;	CPD = OFF, Data memory code protection is disabled
  3753                           ;	Brown Out Reset Selection bits
  3754                           ;	BOREN = OFF, BOR disabled
  3755                           ;	Internal External Switchover bit
  3756                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3757                           ;	Fail-Safe Clock Monitor Enabled bit
  3758                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3759                           ;	Low Voltage Programming Enable bit
  3760                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3761                           ;	In-Circuit Debugger Mode bit
  3762                           ;	DEBUG = 0x1, unprogrammed default
  3763  2007                     	org	8199
  3764  2007  20D4               	dw	8404
  3765                           
  3766                           ;Config register CONFIG2 @ 0x2008
  3767                           ;	Brown-out Reset Selection bit
  3768                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3769                           ;	Flash Program Memory Self Write Enable bits
  3770                           ;	WRT = OFF, Write protection off
  3771  2008                     	org	8200
  3772  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     22      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___awdiv
    _main->___lwdiv
    ___lwdiv->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___lwdiv->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Set_Cursor
    _Setup->_Lcd_Write_String

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    8485
                                             10 BANK0     12    12      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                              _Setup
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1756
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              7 COMMON     1     1      0
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     548
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1516
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0    2127
                                              3 BANK0      1     1      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _initADC
                          _initUSART
 ---------------------------------------------------------------------------------
 (2) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     408
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1604
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _initADC
     _initUSART
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 23:16:29 2021

                        _a 0038                          pc 0002             ___bmul@product 0075  
                       l20 05B7                         l21 05BC                         l22 05C1  
                       l23 05C6                         l40 06EE                         l24 05CB  
                       l16 05A8                         l25 05D0                         l18 05AD  
                       l26 05F7                         l19 05B2                         l52 0718  
                       l37 073A                         l46 06B7                         l49 059D  
                       l58 0691                         l83 06D4               ___awdiv@sign 0027  
                       fsr 0004        ___wmul@multiplicand 0075                        _C11 0042  
                      _C12 0041                        _C13 0040                        _C21 003F  
                      _C22 003E                        _C23 003D                        _C31 003C  
                      _C32 003B                        _C33 003A                        l231 0233  
                      l232 023D                        l233 0247                        l234 0251  
                      l243 04D6                        l331 0668                        l235 025B  
                      l236 0265                        l601 063D                        l329 064E  
                      l355 0703                        l482 053F                        _RA7 002F  
                      _RE0 0048                        _RE1 0049                        u700 051D  
                      u620 06F5                        u701 051C                        u621 06F4  
                      u630 0702                        u631 0701                        u720 0531  
                      u640 04DE                        u800 0639                        u721 0530  
                      u705 0519                        u641 04DD                        u801 0638  
                      u730 0536                        u650 04E9                        u731 0535  
                      u715 0525                        u651 04E8                        u660 04FA  
                      u740 0602                        u661 04F9                        u741 0601  
                      u680 050C                        u760 0614                        u681 050B  
                      u761 0613                        u675 04FE                        u755 0606  
                      u780 0625                        u781 0624                        u695 050D  
                      u775 0615                        u785 0621                        u795 062D  
                      _isr 032C                        fsr0 0004                        indf 0000  
                     l2001 02D4                       l2011 030A                       l2003 02E0  
                     l2013 0313                       l2005 02E9                       l2015 031F  
                     l2007 02F5                       l1401 06C5                       l2009 02FE  
                     l1411 06CE                       l1403 06C6                       l2037 05DD  
                     l1413 06D1                       l1405 06C9                       l1501 06FB  
                     l1343 05D5                       l1335 059F                       l1415 06D2  
                     l1407 06CC                       l1511 04DE                       l1503 0702  
                     l1337 05A3                       l1417 06D3                       l1409 06CD  
                     l1521 04F2                       l1513 04E3                       l1339 05A6  
                     l1531 0508                       l1523 04F4                       l1515 04E5  
                     l1507 04D7                       l1541 052B                       l1533 050C  
                     l1525 04FA                       l1517 04E9                       l1509 04DA  
                     l1391 06B8                       l1535 051D                       l1527 04FD  
                     l1543 0531                       l1519 04EE                       l1551 05F8  
                     l1801 06EB                       l1393 06BC                       l1545 0536  
                     l1537 0523                       l1529 0504                       l1561 0610  
                     l1553 05FC                       l1811 0715                       l1803 0705  
                     l1395 06BE                       l1547 053B                       l1539 0524  
                     l1571 0633                       l1563 0614                       l1555 0602  
                     l1821 06AC                       l1813 0695                       l1805 0708  
                     l1397 06BF                       l1901 049A                       l1493 06F0  
                     l1565 0625                       l1557 0605                       l1573 0639  
                     l1831 0561                       l1823 06B1                       l1815 069A  
                     l1807 070E                       l1399 06C2                       l1911 04C4  
                     l1903 04A0                       l1495 06F1                       l1567 062B  
                     l1559 060C                       _ADC1 004A                       _ADC2 0049  
                     l1841 058B                       l1833 056C                       l1825 0540  
                     l1817 069F                       l1809 0711                       l1913 04D0  
                     l1905 04AC                       l1497 06F5                       l1569 062C  
                     l1921 0655                       l1843 0591                       l1835 0579  
                     l1827 054A                       l1819 06A6                       l1851 067C  
                     l1907 04B2                       l1499 06F9                       l1923 065C  
                     l1915 063E                       l1845 0597                       l1837 057F  
                     l1829 0550                       l1853 0684                       l1909 04BE  
                     l1861 0436                       l1925 0662                       l1917 0642  
                     l1941 0030                       l1933 001F                       l1791 0736  
                     l1839 0585                       l1847 066C                       l1871 0450  
                     l1863 0439                       l1855 0424                       l1919 0646  
                     l1951 00F2                       l1943 0047                       l1935 0024  
                     l1793 06D6                       l1849 066F                       l1881 0462  
                     l1873 0456                       l1865 0445                       l1857 042F  
                     l1961 01D6                       l1953 0131                       l1945 0086  
                     l1937 002C                       l1795 06D9                       l1891 046E  
                     l1883 0466                       l1875 045C                       l1867 044A  
                     l1859 0433                       l1971 0243                       l1963 01E9  
                     l1955 0144                       l1947 0099                       l1939 002D  
                     l1797 06DF                       l1893 047A                       l1885 0467  
                     l1877 045F                       l1869 044D                       l1981 026F  
                     l1973 024D                       l1965 0229                       l1957 0187  
                     l1949 00DC                       l1799 06E2                       l1895 0480  
                     l1887 0468                       l1879 0460                       l1991 02A1  
                     l1983 0277                       l1975 0257                       l1967 022F  
                     l1959 019A                       l1897 0488                       l1889 0469  
                     l1993 02AA                       l1985 0280                       l1977 0261  
                     l1969 0239                       l1899 048E                       l1995 02B6  
                     l1987 028C                       l1979 026B                       l1997 02BF  
                     l1989 0295                       l1999 02CB                       _ADIF 0066  
                     ?_isr 0070                       STR_1 0724                       STR_2 071F  
                     STR_3 0727                       STR_4 071F                       STR_5 072A  
                     STR_6 071F                       u1100 06AC                       u1101 06AB  
                     u1110 0691                       u1111 0690                       u1120 0646  
                     u1200 024D                       u1121 0645                       u1201 024C  
                     u1210 0257                       u1211 0256                       u1220 0261  
                     u1221 0260                       u1150 0662                       u1230 026B  
                     u1151 0661                       u1135 064F                       u1231 026A  
                     u1160 002C                       u1145 0656                       u1161 002B  
                     u1090 069A                       u1170 022F                       u1091 0699  
                     u1171 022E                       u1180 0239                       u1181 0238  
                     u1190 0243                       u1247 0713                       u1191 0242  
                     u1257 0546                       u1267 0556                       u1277 0567  
                     u1287 0576                       u1297 06E6                       _TMR0 0001  
                     _TXIE 0464                       _TXIF 0064          ?_Lcd_Write_String 0070  
                     _main 001F                       _ughh 0045                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 06EF  
        ___bmul@multiplier 0076                      ??_isr 0070                initADC@IRCF 0075  
                    ?_main 0070            __end_of___awdiv 0540                      _ANSEL 0188  
          ___awdiv@divisor 0022                      _CONTX 0044            __end_of___lwdiv 063E  
                    i1l203 0395                      i1l224 041D                      i1l218 041A  
          ___awdiv@counter 0026                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    u81_20 0330                      u81_21 032F    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      u90_20 0399                      u82_20 033D  
                    u90_21 0398                      u82_21 033C                      u91_20 039E  
                    u83_20 0342                      u91_21 039D                      u83_21 0341  
                    u92_20 03A9                      u84_20 0356                      u92_21 03A8  
                    u84_21 0355                      u93_20 03B6                      u85_20 035D  
                    u93_21 03B5                      u85_21 035C                      u94_20 03C4  
                    u86_20 0364                      u94_21 03C3                      u86_21 0363  
                    u95_20 03D2                      u87_20 0373                      u95_21 03D1  
                    u87_21 0372                      u96_20 03DF                      u88_20 037C  
                    u96_21 03DE                      u88_21 037B                      u97_20 03ED  
                    u89_20 038B                      u97_21 03EC                      u89_21 038A  
                    _TXREG 0019                      u98_20 03FA                      u98_21 03F9  
                    u99_20 0408                      u99_21 0407                      _Setup 0424  
          __end_of_initADC 05F8                      _cont1 0047                      _cont2 0046  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 059E           __end_of_Lcd_Port 073B            __initialization 000F  
             __end_of_main 032C                     ??_main 002A                     ?_Setup 0070  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
         ___awdiv@dividend 0024                     u100_20 0416                     u100_21 0415  
                   i1l1601 034E                     i1l1611 0357                     i1l1603 0350  
                   i1l1621 0376                     i1l1613 035D                     i1l1605 0351  
                   i1l1631 0399                     i1l1623 037C                     i1l1615 035E  
                   i1l1607 0352                     i1l1641 03B0                     i1l1633 039E  
                   i1l1625 038B                     i1l1617 0364                     i1l1609 0356  
                   i1l1651 03C7                     i1l1643 03B6                     i1l1635 03A1  
                   i1l1619 0373                     i1l1627 0390                     i1l1661 03E2  
                   i1l1653 03CC                     i1l1645 03B9                     i1l1637 03A4  
                   i1l1629 0395                     i1l1581 032C                     i1l1671 03FD  
                   i1l1663 03E7                     i1l1655 03D2                     i1l1647 03BE  
                   i1l1639 03A9                     i1l1591 0342                     i1l1583 0330  
                   i1l1681 0416                     i1l1673 0402                     i1l1665 03ED  
                   i1l1657 03D9                     i1l1649 03C4                     i1l1593 0346  
                   i1l1585 0336                     i1l1683 0418                     i1l1675 0408  
                   i1l1667 03F4                     i1l1659 03DF                     i1l1595 0347  
                   i1l1587 0337                     i1l1677 040B                     i1l1669 03FA  
                   i1l1685 041A                     i1l1597 0349                     i1l1589 033D  
                   i1l1679 0410                     i1l1599 034D                  ??_Lcd_Cmd 0074  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0015                     ___bmul 06EF  
                   ___wmul 063E                  ??___awdiv 0077                  ??___lwdiv 0077  
         ___awdiv@quotient 0028                  ??_initADC 0073                     saved_w 007E  
          Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077    __end_of__initialization 001B  
      ___bmul@multiplicand 0073             __pcstackCOMMON 0070              __end_of_Setup 04D7  
           _Lcd_Set_Cursor 0692             _OPTION_REGbits 0081                    ??_Setup 0023  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0036  
       __size_of_initUSART 001D                 __pmaintext 001F                    ?___bmul 0073  
                  ?___wmul 0073                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 06B8                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
               __stringtab 0719                    _RC_temp 0079             _Lcd_Write_Char 0704  
                  _Lcd_Cmd 06D5            __size_of___bmul 0015                    ___awdiv 04D7  
          __size_of___wmul 002B                    ___lwdiv 05F8                    _bandera 007A  
                _ANSELbits 0188            ?_Lcd_Set_Cursor 0077          __end_of_initUSART 06D5  
                  __ptext1 063E                    __ptext2 05F8                    __ptext3 06EF  
                  __ptext4 04D7                    __ptext5 0424                    __ptext6 06B8  
                  __ptext7 059E                    __ptext8 0669                    __ptext9 0704  
                  _initADC 059E               __size_of_isr 00F8                    clrloop0 072E  
   __end_of_Lcd_Write_Char 0719       end_of_initialization 001B                  _RCSTAbits 0018  
                Lcd_Port@a 0073                  _TRISAbits 0085                  _TRISCbits 0087  
                _TRISEbits 0089            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020                  _TXSTAbits 0098             __end_of___bmul 0704  
           __end_of___wmul 0669           _Lcd_Write_String 0669                _BAUDCTLbits 0187  
      start_initialization 000F                __end_of_isr 0424          __size_of_Lcd_Init 005E  
        __size_of_Lcd_Port 0006                   ??___bmul 0074                   ??___wmul 0077  
          Lcd_Write_Char@a 0075                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020                  _banderaTX 0043                   ?_Lcd_Cmd 0070  
                _main$1182 0034                  _main$1183 0032           ___lwdiv@dividend 0024  
         ??_Lcd_Set_Cursor 0020                   ?___awdiv 0022                   ?___lwdiv 0022  
                __pstrings 0719                   ?_initADC 0070                  _initUSART 06B8  
           __size_of_Setup 00B3           ___lwdiv@quotient 0026          interrupt_function 0004  
           ___wmul@product 0020                  clear_ram0 072D                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                 _ADCON0bits 001F  
              __stringbase 071E          ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074  
               ?_initUSART 0070                   _Lcd_Init 0540                   _Lcd_Port 0735  
 __end_of_Lcd_Write_String 0692           __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069  
         __size_of___lwdiv 0046         __end_of__stringtab 071F                   _bandera1 0078  
         __size_of_initADC 005A            ___lwdiv@divisor 0022            ___lwdiv@counter 0028  
                 __ptext10 0692                   __ptext11 0540                   __ptext12 06D5  
                 __ptext13 0735                   __ptext14 032C                   _contador 0036  
            __size_of_main 030D               _var_contador 0048                 _INTCONbits 000B  
              ??_initUSART 0073                   intlevel1 0000                  stringcode 0719  
       Lcd_Set_Cursor@temp 0022                   stringdir 0719                   stringtab 0719  

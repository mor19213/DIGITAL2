

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 22:59:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0001                     _TMR0	set	1
   455  0006                     _PORTB	set	6
   456  0005                     _PORTA	set	5
   457  0019                     _TXREG	set	25
   458  001A                     _RCREG	set	26
   459  000C                     _PIR1bits	set	12
   460  001F                     _ADCON0bits	set	31
   461  001E                     _ADRESH	set	30
   462  000B                     _INTCONbits	set	11
   463  0018                     _RCSTAbits	set	24
   464  0008                     _PORTD	set	8
   465  001F                     _ADCON0	set	31
   466  0064                     _TXIF	set	100
   467  002F                     _RA7	set	47
   468  0066                     _ADIF	set	102
   469  0049                     _RE1	set	73
   470  0048                     _RE0	set	72
   471  0081                     _OPTION_REGbits	set	129
   472  0086                     _TRISB	set	134
   473  0089                     _TRISE	set	137
   474  0088                     _TRISD	set	136
   475  0085                     _TRISA	set	133
   476  009A                     _SPBRGH	set	154
   477  0098                     _TXSTAbits	set	152
   478  0099                     _SPBRG	set	153
   479  0087                     _TRISCbits	set	135
   480  0089                     _TRISEbits	set	137
   481  0085                     _TRISAbits	set	133
   482  008C                     _PIE1bits	set	140
   483  009F                     _ADCON1	set	159
   484  0464                     _TXIE	set	1124
   485  0188                     _ANSEL	set	392
   486  0187                     _BAUDCTLbits	set	391
   487  0188                     _ANSELbits	set	392
   488                           
   489                           	psect	strings
   490  0701                     __pstrings:
   491  0701                     stringtab:
   492  0701                     __stringtab:
   493  0701                     stringcode:	
   494                           ;	String table - string pointers are 1 byte each
   495                           
   496  0701                     stringdir:
   497  0701  3007               	movlw	high stringdir
   498  0702  008A               	movwf	10
   499  0703  0804               	movf	4,w
   500  0704  0A84               	incf	4,f
   501  0705  0782               	addwf	2,f
   502  0706                     __stringbase:
   503  0706  3400               	retlw	0
   504  0707                     __end_of__stringtab:
   505  0707                     STR_2:
   506  0707  3430               	retlw	48	;'0'
   507  0708  342E               	retlw	46	;'.'
   508  0709  3430               	retlw	48	;'0'
   509  070A  3430               	retlw	48	;'0'
   510  070B  3400               	retlw	0
   511  070C                     STR_1:
   512  070C  3453               	retlw	83	;'S'
   513  070D  3431               	retlw	49	;'1'
   514  070E  3400               	retlw	0
   515  070F                     STR_3:
   516  070F  3453               	retlw	83	;'S'
   517  0710  3432               	retlw	50	;'2'
   518  0711  3400               	retlw	0
   519  0712                     STR_5:
   520  0712  3453               	retlw	83	;'S'
   521  0713  3433               	retlw	51	;'3'
   522  0714  3400               	retlw	0
   523  0707                     
   524                           	psect	cinit
   525  000F                     start_initialization:	
   526                           ; #config settings
   527                           
   528  000F                     __initialization:
   529                           
   530                           ; Clear objects allocated to COMMON
   531  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   532  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   533  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   534                           
   535                           ; Clear objects allocated to BANK0
   536  0012  1383               	bcf	3,7	;select IRP bank0
   537  0013  3036               	movlw	low __pbssBANK0
   538  0014  0084               	movwf	4
   539  0015  304B               	movlw	low (__pbssBANK0+21)
   540  0016  120A  118A  2715  120A  118A  	fcall	clear_ram0
   541  001B                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  001B                     __end_of__initialization:
   545  001B  0183               	clrf	3
   546  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMMON
   549  0078                     __pbssCOMMON:
   550  0078                     _bandera1:
   551  0078                     	ds	1
   552  0079                     _RC_temp:
   553  0079                     	ds	1
   554  007A                     _bandera:
   555  007A                     	ds	1
   556                           
   557                           	psect	bssBANK0
   558  0036                     __pbssBANK0:
   559  0036                     _contador:
   560  0036                     	ds	2
   561  0038                     _a:
   562  0038                     	ds	2
   563  003A                     _C33:
   564  003A                     	ds	1
   565  003B                     _C32:
   566  003B                     	ds	1
   567  003C                     _C31:
   568  003C                     	ds	1
   569  003D                     _C23:
   570  003D                     	ds	1
   571  003E                     _C22:
   572  003E                     	ds	1
   573  003F                     _C21:
   574  003F                     	ds	1
   575  0040                     _C13:
   576  0040                     	ds	1
   577  0041                     _C12:
   578  0041                     	ds	1
   579  0042                     _C11:
   580  0042                     	ds	1
   581  0043                     _banderaTX:
   582  0043                     	ds	1
   583  0044                     _CONTX:
   584  0044                     	ds	1
   585  0045                     _ughh:
   586  0045                     	ds	1
   587  0046                     _cont2:
   588  0046                     	ds	1
   589  0047                     _cont1:
   590  0047                     	ds	1
   591  0048                     _var_contador:
   592  0048                     	ds	1
   593  0049                     _ADC2:
   594  0049                     	ds	1
   595  004A                     _ADC1:
   596  004A                     	ds	1
   597                           
   598                           	psect	clrtext
   599  0715                     clear_ram0:	
   600                           ;	Called with FSR containing the base address, and
   601                           ;	W with the last address+1
   602                           
   603  0715  0064               	clrwdt	;clear the watchdog before getting into this loop
   604  0716                     clrloop0:
   605  0716  0180               	clrf	0	;clear RAM location pointed to by FSR
   606  0717  0A84               	incf	4,f	;increment pointer
   607  0718  0604               	xorwf	4,w	;XOR with final address
   608  0719  1903               	btfsc	3,2	;have we reached the end yet?
   609  071A  3400               	retlw	0	;all done for this memory range, return
   610  071B  0604               	xorwf	4,w	;XOR again to restore value
   611  071C  2F16               	goto	clrloop0	;do the next byte
   612                           
   613                           	psect	cstackCOMMON
   614  0070                     __pcstackCOMMON:
   615  0070                     ?_Setup:
   616  0070                     ?_initADC:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_Lcd_Port:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_Lcd_Cmd:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_Lcd_Init:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_Lcd_Write_Char:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_Lcd_Write_String:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_initUSART:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_isr:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_isr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_main:	
   644                           ; 1 bytes @ 0x0
   645                           
   646                           
   647                           ; 1 bytes @ 0x0
   648  0070                     	ds	3
   649  0073                     ??_initADC:
   650  0073                     ??_Lcd_Port:	
   651                           ; 1 bytes @ 0x3
   652                           
   653  0073                     ??_initUSART:	
   654                           ; 1 bytes @ 0x3
   655                           
   656  0073                     ?___bmul:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     ?___wmul:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     Lcd_Port@a:	
   663                           ; 2 bytes @ 0x3
   664                           
   665  0073                     ___bmul@multiplicand:	
   666                           ; 1 bytes @ 0x3
   667                           
   668  0073                     ___wmul@multiplier:	
   669                           ; 1 bytes @ 0x3
   670                           
   671                           
   672                           ; 2 bytes @ 0x3
   673  0073                     	ds	1
   674  0074                     ??_Lcd_Cmd:
   675  0074                     ??_Lcd_Write_Char:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     ??___bmul:	
   679                           ; 1 bytes @ 0x4
   680                           
   681                           
   682                           ; 1 bytes @ 0x4
   683  0074                     	ds	1
   684  0075                     initADC@IRCF:
   685  0075                     Lcd_Write_Char@a:	
   686                           ; 1 bytes @ 0x5
   687                           
   688  0075                     ___bmul@product:	
   689                           ; 1 bytes @ 0x5
   690                           
   691  0075                     ___wmul@multiplicand:	
   692                           ; 1 bytes @ 0x5
   693                           
   694                           
   695                           ; 2 bytes @ 0x5
   696  0075                     	ds	1
   697  0076                     ??_Lcd_Write_String:
   698  0076                     Lcd_Cmd@a:	
   699                           ; 1 bytes @ 0x6
   700                           
   701  0076                     ___bmul@multiplier:	
   702                           ; 1 bytes @ 0x6
   703                           
   704                           
   705                           ; 1 bytes @ 0x6
   706  0076                     	ds	1
   707  0077                     ?_Lcd_Set_Cursor:
   708  0077                     ??___wmul:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     ??___awdiv:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0077                     ??___lwdiv:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0077                     Lcd_Set_Cursor@b:	
   718                           ; 1 bytes @ 0x7
   719                           
   720                           
   721                           ; 1 bytes @ 0x7
   722  0077                     	ds	1
   723                           
   724                           	psect	cstackBANK0
   725  0020                     __pcstackBANK0:
   726  0020                     ??_Lcd_Set_Cursor:
   727  0020                     ??_Lcd_Init:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     Lcd_Write_String@i:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ___wmul@product:	
   734                           ; 2 bytes @ 0x0
   735                           
   736                           
   737                           ; 2 bytes @ 0x0
   738  0020                     	ds	1
   739  0021                     Lcd_Set_Cursor@a:
   740                           
   741                           ; 1 bytes @ 0x1
   742  0021                     	ds	1
   743  0022                     ?___awdiv:
   744  0022                     ?___lwdiv:	
   745                           ; 2 bytes @ 0x2
   746                           
   747  0022                     Lcd_Set_Cursor@temp:	
   748                           ; 2 bytes @ 0x2
   749                           
   750  0022                     Lcd_Write_String@a:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0022                     ___awdiv@divisor:	
   754                           ; 1 bytes @ 0x2
   755                           
   756  0022                     ___lwdiv@divisor:	
   757                           ; 2 bytes @ 0x2
   758                           
   759                           
   760                           ; 2 bytes @ 0x2
   761  0022                     	ds	1
   762  0023                     ??_Setup:
   763                           
   764                           ; 1 bytes @ 0x3
   765  0023                     	ds	1
   766  0024                     ___awdiv@dividend:
   767  0024                     ___lwdiv@dividend:	
   768                           ; 2 bytes @ 0x4
   769                           
   770                           
   771                           ; 2 bytes @ 0x4
   772  0024                     	ds	2
   773  0026                     ___awdiv@counter:
   774  0026                     ___lwdiv@quotient:	
   775                           ; 1 bytes @ 0x6
   776                           
   777                           
   778                           ; 2 bytes @ 0x6
   779  0026                     	ds	1
   780  0027                     ___awdiv@sign:
   781                           
   782                           ; 1 bytes @ 0x7
   783  0027                     	ds	1
   784  0028                     ___lwdiv@counter:
   785  0028                     ___awdiv@quotient:	
   786                           ; 1 bytes @ 0x8
   787                           
   788                           
   789                           ; 2 bytes @ 0x8
   790  0028                     	ds	2
   791  002A                     ??_main:
   792                           
   793                           ; 1 bytes @ 0xA
   794  002A                     	ds	8
   795  0032                     _main$1183:
   796                           
   797                           ; 2 bytes @ 0x12
   798  0032                     	ds	2
   799  0034                     _main$1182:
   800                           
   801                           ; 2 bytes @ 0x14
   802  0034                     	ds	2
   803                           
   804                           	psect	maintext
   805  001F                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 147 in file "lab3.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : B00/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       4       0       0       0
   827 ;;      Temps:          0       8       0       0       0
   828 ;;      Totals:         0      12       0       0       0
   829 ;;Total ram usage:       12 bytes
   830 ;; Hardware stack levels required when called:    5
   831 ;; This function calls:
   832 ;;		_Lcd_Set_Cursor
   833 ;;		_Lcd_Write_Char
   834 ;;		_Setup
   835 ;;		___awdiv
   836 ;;		___bmul
   837 ;;		___lwdiv
   838 ;;		___wmul
   839 ;; This function is called by:
   840 ;;		Startup code after reset
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _main
   846  001F                     _main:
   847  001F                     l1917:	
   848                           ;incstack = 0
   849                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   850                           
   851                           
   852                           ;lab3.c: 148:     }
   853  001F  120A  118A  240C  120A  118A  	fcall	_Setup
   854  0024                     l1919:
   855                           
   856                           ;lab3.c: 150:         C11 = 5;
   857  0024  3010               	movlw	16
   858  0025  1283               	bcf	3,5	;RP0=0, select bank0
   859  0026  1303               	bcf	3,6	;RP1=0, select bank0
   860  0027  0244               	subwf	_CONTX,w
   861  0028  1C03               	skipc
   862  0029  282B               	goto	u1121
   863  002A  282C               	goto	u1120
   864  002B                     u1121:
   865  002B  2830               	goto	l1925
   866  002C                     u1120:
   867  002C                     l1921:
   868                           
   869                           ;lab3.c: 151:     }
   870  002C  01C4               	clrf	_CONTX
   871  002D                     l1923:
   872                           
   873                           ;lab3.c: 152: 
   874  002D  1683               	bsf	3,5	;RP0=1, select bank1
   875  002E  1303               	bcf	3,6	;RP1=0, select bank1
   876  002F  160C               	bsf	12,4	;volatile
   877  0030                     l1925:
   878                           
   879                           ;lab3.c: 156:     Lcd_Write_Char(C12 + 48);
   880  0030  3033               	movlw	51
   881  0031  1283               	bcf	3,5	;RP0=0, select bank0
   882  0032  00A2               	movwf	___awdiv@divisor
   883  0033  3000               	movlw	0
   884  0034  00A3               	movwf	___awdiv@divisor+1
   885  0035  084A               	movf	_ADC1,w
   886  0036  00AA               	movwf	??_main
   887  0037  01AB               	clrf	??_main+1
   888  0038  082A               	movf	??_main,w
   889  0039  00A4               	movwf	___awdiv@dividend
   890  003A  082B               	movf	??_main+1,w
   891  003B  00A5               	movwf	___awdiv@dividend+1
   892  003C  120A  118A  24BF  120A  118A  	fcall	___awdiv
   893  0041  1283               	bcf	3,5	;RP0=0, select bank0
   894  0042  1303               	bcf	3,6	;RP1=0, select bank0
   895  0043  0822               	movf	?___awdiv,w
   896  0044  00AC               	movwf	??_main+2
   897  0045  082C               	movf	??_main+2,w
   898  0046  00C2               	movwf	_C11
   899  0047                     l1927:
   900                           
   901                           ;lab3.c: 157:     Lcd_Set_Cursor(2,4);
   902  0047  3033               	movlw	51
   903  0048  00A2               	movwf	___awdiv@divisor
   904  0049  3000               	movlw	0
   905  004A  00A3               	movwf	___awdiv@divisor+1
   906  004B  084A               	movf	_ADC1,w
   907  004C  00AA               	movwf	??_main
   908  004D  01AB               	clrf	??_main+1
   909  004E  082A               	movf	??_main,w
   910  004F  00F3               	movwf	___wmul@multiplier
   911  0050  082B               	movf	??_main+1,w
   912  0051  00F4               	movwf	___wmul@multiplier+1
   913  0052  3064               	movlw	100
   914  0053  00F5               	movwf	___wmul@multiplicand
   915  0054  3000               	movlw	0
   916  0055  00F6               	movwf	___wmul@multiplicand+1
   917  0056  120A  118A  2626  120A  118A  	fcall	___wmul
   918  005B  0874               	movf	?___wmul+1,w
   919  005C  1283               	bcf	3,5	;RP0=0, select bank0
   920  005D  1303               	bcf	3,6	;RP1=0, select bank0
   921  005E  00A5               	movwf	___awdiv@dividend+1
   922  005F  0873               	movf	?___wmul,w
   923  0060  00A4               	movwf	___awdiv@dividend
   924  0061  120A  118A  24BF  120A  118A  	fcall	___awdiv
   925  0066  1283               	bcf	3,5	;RP0=0, select bank0
   926  0067  1303               	bcf	3,6	;RP1=0, select bank0
   927  0068  0822               	movf	?___awdiv,w
   928  0069  00AC               	movwf	??_main+2
   929  006A  0823               	movf	?___awdiv+1,w
   930  006B  00AD               	movwf	??_main+3
   931  006C  0842               	movf	_C11,w
   932  006D  00AE               	movwf	??_main+4
   933  006E  01AF               	clrf	??_main+5
   934  006F  082E               	movf	??_main+4,w
   935  0070  00F3               	movwf	___wmul@multiplier
   936  0071  082F               	movf	??_main+5,w
   937  0072  00F4               	movwf	___wmul@multiplier+1
   938  0073  309C               	movlw	156
   939  0074  00F5               	movwf	___wmul@multiplicand
   940  0075  30FF               	movlw	255
   941  0076  00F6               	movwf	___wmul@multiplicand+1
   942  0077  120A  118A  2626  120A  118A  	fcall	___wmul
   943  007C  0873               	movf	?___wmul,w
   944  007D  1283               	bcf	3,5	;RP0=0, select bank0
   945  007E  1303               	bcf	3,6	;RP1=0, select bank0
   946  007F  072C               	addwf	??_main+2,w
   947  0080  00B4               	movwf	_main$1182
   948  0081  0874               	movf	?___wmul+1,w
   949  0082  1803               	skipnc
   950  0083  0A74               	incf	?___wmul+1,w
   951  0084  072D               	addwf	??_main+3,w
   952  0085  00B5               	movwf	_main$1182+1
   953  0086                     l1929:
   954                           
   955                           ;lab3.c: 157:     Lcd_Set_Cursor(2,4);
   956  0086  300A               	movlw	10
   957  0087  00A2               	movwf	___awdiv@divisor
   958  0088  3000               	movlw	0
   959  0089  00A3               	movwf	___awdiv@divisor+1
   960  008A  0835               	movf	_main$1182+1,w
   961  008B  00A5               	movwf	___awdiv@dividend+1
   962  008C  0834               	movf	_main$1182,w
   963  008D  00A4               	movwf	___awdiv@dividend
   964  008E  120A  118A  24BF  120A  118A  	fcall	___awdiv
   965  0093  1283               	bcf	3,5	;RP0=0, select bank0
   966  0094  1303               	bcf	3,6	;RP1=0, select bank0
   967  0095  0822               	movf	?___awdiv,w
   968  0096  00AA               	movwf	??_main
   969  0097  082A               	movf	??_main,w
   970  0098  00C1               	movwf	_C12
   971  0099                     l1931:
   972                           
   973                           ;lab3.c: 158:     Lcd_Write_Char(C13 + 48);
   974  0099  3033               	movlw	51
   975  009A  00A2               	movwf	___awdiv@divisor
   976  009B  3000               	movlw	0
   977  009C  00A3               	movwf	___awdiv@divisor+1
   978  009D  084A               	movf	_ADC1,w
   979  009E  00AA               	movwf	??_main
   980  009F  01AB               	clrf	??_main+1
   981  00A0  082A               	movf	??_main,w
   982  00A1  00F3               	movwf	___wmul@multiplier
   983  00A2  082B               	movf	??_main+1,w
   984  00A3  00F4               	movwf	___wmul@multiplier+1
   985  00A4  3064               	movlw	100
   986  00A5  00F5               	movwf	___wmul@multiplicand
   987  00A6  3000               	movlw	0
   988  00A7  00F6               	movwf	___wmul@multiplicand+1
   989  00A8  120A  118A  2626  120A  118A  	fcall	___wmul
   990  00AD  0874               	movf	?___wmul+1,w
   991  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   992  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   993  00B0  00A5               	movwf	___awdiv@dividend+1
   994  00B1  0873               	movf	?___wmul,w
   995  00B2  00A4               	movwf	___awdiv@dividend
   996  00B3  120A  118A  24BF  120A  118A  	fcall	___awdiv
   997  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   998  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   999  00BA  0822               	movf	?___awdiv,w
  1000  00BB  00AC               	movwf	??_main+2
  1001  00BC  0823               	movf	?___awdiv+1,w
  1002  00BD  00AD               	movwf	??_main+3
  1003  00BE  309C               	movlw	156
  1004  00BF  00AE               	movwf	??_main+4
  1005  00C0  082E               	movf	??_main+4,w
  1006  00C1  00F3               	movwf	___bmul@multiplicand
  1007  00C2  0842               	movf	_C11,w
  1008  00C3  120A  118A  26D7  120A  118A  	fcall	___bmul
  1009  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1010  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1011  00CA  00AF               	movwf	??_main+5
  1012  00CB  30F6               	movlw	246
  1013  00CC  00B0               	movwf	??_main+6
  1014  00CD  0830               	movf	??_main+6,w
  1015  00CE  00F3               	movwf	___bmul@multiplicand
  1016  00CF  0841               	movf	_C12,w
  1017  00D0  120A  118A  26D7  120A  118A  	fcall	___bmul
  1018  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1019  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1020  00D7  072F               	addwf	??_main+5,w
  1021  00D8  072C               	addwf	??_main+2,w
  1022  00D9  00B1               	movwf	??_main+7
  1023  00DA  0831               	movf	??_main+7,w
  1024  00DB  00C0               	movwf	_C13
  1025  00DC                     l1933:
  1026                           
  1027                           ;lab3.c: 160:     Lcd_Set_Cursor(2,7);
  1028  00DC  3033               	movlw	51
  1029  00DD  00A2               	movwf	___awdiv@divisor
  1030  00DE  3000               	movlw	0
  1031  00DF  00A3               	movwf	___awdiv@divisor+1
  1032  00E0  0849               	movf	_ADC2,w
  1033  00E1  00AA               	movwf	??_main
  1034  00E2  01AB               	clrf	??_main+1
  1035  00E3  082A               	movf	??_main,w
  1036  00E4  00A4               	movwf	___awdiv@dividend
  1037  00E5  082B               	movf	??_main+1,w
  1038  00E6  00A5               	movwf	___awdiv@dividend+1
  1039  00E7  120A  118A  24BF  120A  118A  	fcall	___awdiv
  1040  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1041  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1042  00EE  0822               	movf	?___awdiv,w
  1043  00EF  00AC               	movwf	??_main+2
  1044  00F0  082C               	movf	??_main+2,w
  1045  00F1  00BF               	movwf	_C21
  1046  00F2                     l1935:
  1047                           
  1048                           ;lab3.c: 161:     Lcd_Write_Char(C21 +48);
  1049  00F2  3033               	movlw	51
  1050  00F3  00A2               	movwf	___awdiv@divisor
  1051  00F4  3000               	movlw	0
  1052  00F5  00A3               	movwf	___awdiv@divisor+1
  1053  00F6  0849               	movf	_ADC2,w
  1054  00F7  00AA               	movwf	??_main
  1055  00F8  01AB               	clrf	??_main+1
  1056  00F9  082A               	movf	??_main,w
  1057  00FA  00F3               	movwf	___wmul@multiplier
  1058  00FB  082B               	movf	??_main+1,w
  1059  00FC  00F4               	movwf	___wmul@multiplier+1
  1060  00FD  3064               	movlw	100
  1061  00FE  00F5               	movwf	___wmul@multiplicand
  1062  00FF  3000               	movlw	0
  1063  0100  00F6               	movwf	___wmul@multiplicand+1
  1064  0101  120A  118A  2626  120A  118A  	fcall	___wmul
  1065  0106  0874               	movf	?___wmul+1,w
  1066  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0109  00A5               	movwf	___awdiv@dividend+1
  1069  010A  0873               	movf	?___wmul,w
  1070  010B  00A4               	movwf	___awdiv@dividend
  1071  010C  120A  118A  24BF  120A  118A  	fcall	___awdiv
  1072  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0113  0822               	movf	?___awdiv,w
  1075  0114  00AC               	movwf	??_main+2
  1076  0115  0823               	movf	?___awdiv+1,w
  1077  0116  00AD               	movwf	??_main+3
  1078  0117  083F               	movf	_C21,w
  1079  0118  00AE               	movwf	??_main+4
  1080  0119  01AF               	clrf	??_main+5
  1081  011A  082E               	movf	??_main+4,w
  1082  011B  00F3               	movwf	___wmul@multiplier
  1083  011C  082F               	movf	??_main+5,w
  1084  011D  00F4               	movwf	___wmul@multiplier+1
  1085  011E  309C               	movlw	156
  1086  011F  00F5               	movwf	___wmul@multiplicand
  1087  0120  30FF               	movlw	255
  1088  0121  00F6               	movwf	___wmul@multiplicand+1
  1089  0122  120A  118A  2626  120A  118A  	fcall	___wmul
  1090  0127  0873               	movf	?___wmul,w
  1091  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1093  012A  072C               	addwf	??_main+2,w
  1094  012B  00B4               	movwf	_main$1182
  1095  012C  0874               	movf	?___wmul+1,w
  1096  012D  1803               	skipnc
  1097  012E  0A74               	incf	?___wmul+1,w
  1098  012F  072D               	addwf	??_main+3,w
  1099  0130  00B5               	movwf	_main$1182+1
  1100  0131                     l1937:
  1101                           
  1102                           ;lab3.c: 161:     Lcd_Write_Char(C21 +48);
  1103  0131  300A               	movlw	10
  1104  0132  00A2               	movwf	___awdiv@divisor
  1105  0133  3000               	movlw	0
  1106  0134  00A3               	movwf	___awdiv@divisor+1
  1107  0135  0835               	movf	_main$1182+1,w
  1108  0136  00A5               	movwf	___awdiv@dividend+1
  1109  0137  0834               	movf	_main$1182,w
  1110  0138  00A4               	movwf	___awdiv@dividend
  1111  0139  120A  118A  24BF  120A  118A  	fcall	___awdiv
  1112  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1113  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0140  0822               	movf	?___awdiv,w
  1115  0141  00AA               	movwf	??_main
  1116  0142  082A               	movf	??_main,w
  1117  0143  00BE               	movwf	_C22
  1118  0144                     l1939:
  1119                           
  1120                           ;lab3.c: 162:     Lcd_Set_Cursor(2,9);
  1121  0144  3033               	movlw	51
  1122  0145  00A2               	movwf	___awdiv@divisor
  1123  0146  3000               	movlw	0
  1124  0147  00A3               	movwf	___awdiv@divisor+1
  1125  0148  0849               	movf	_ADC2,w
  1126  0149  00AA               	movwf	??_main
  1127  014A  01AB               	clrf	??_main+1
  1128  014B  082A               	movf	??_main,w
  1129  014C  00F3               	movwf	___wmul@multiplier
  1130  014D  082B               	movf	??_main+1,w
  1131  014E  00F4               	movwf	___wmul@multiplier+1
  1132  014F  3064               	movlw	100
  1133  0150  00F5               	movwf	___wmul@multiplicand
  1134  0151  3000               	movlw	0
  1135  0152  00F6               	movwf	___wmul@multiplicand+1
  1136  0153  120A  118A  2626  120A  118A  	fcall	___wmul
  1137  0158  0874               	movf	?___wmul+1,w
  1138  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1139  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1140  015B  00A5               	movwf	___awdiv@dividend+1
  1141  015C  0873               	movf	?___wmul,w
  1142  015D  00A4               	movwf	___awdiv@dividend
  1143  015E  120A  118A  24BF  120A  118A  	fcall	___awdiv
  1144  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0165  0822               	movf	?___awdiv,w
  1147  0166  00AC               	movwf	??_main+2
  1148  0167  0823               	movf	?___awdiv+1,w
  1149  0168  00AD               	movwf	??_main+3
  1150  0169  309C               	movlw	156
  1151  016A  00AE               	movwf	??_main+4
  1152  016B  082E               	movf	??_main+4,w
  1153  016C  00F3               	movwf	___bmul@multiplicand
  1154  016D  083F               	movf	_C21,w
  1155  016E  120A  118A  26D7  120A  118A  	fcall	___bmul
  1156  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0175  00AF               	movwf	??_main+5
  1159  0176  30F6               	movlw	246
  1160  0177  00B0               	movwf	??_main+6
  1161  0178  0830               	movf	??_main+6,w
  1162  0179  00F3               	movwf	___bmul@multiplicand
  1163  017A  083E               	movf	_C22,w
  1164  017B  120A  118A  26D7  120A  118A  	fcall	___bmul
  1165  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0182  072F               	addwf	??_main+5,w
  1168  0183  072C               	addwf	??_main+2,w
  1169  0184  00B1               	movwf	??_main+7
  1170  0185  0831               	movf	??_main+7,w
  1171  0186  00BD               	movwf	_C23
  1172  0187                     l1941:
  1173                           
  1174                           ;lab3.c: 164:     Lcd_Set_Cursor(2,10);
  1175  0187  3033               	movlw	51
  1176  0188  00A2               	movwf	___lwdiv@divisor
  1177  0189  3000               	movlw	0
  1178  018A  00A3               	movwf	___lwdiv@divisor+1
  1179  018B  0837               	movf	_contador+1,w
  1180  018C  00A5               	movwf	___lwdiv@dividend+1
  1181  018D  0836               	movf	_contador,w
  1182  018E  00A4               	movwf	___lwdiv@dividend
  1183  018F  120A  118A  25E0  120A  118A  	fcall	___lwdiv
  1184  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0196  0822               	movf	?___lwdiv,w
  1187  0197  00AA               	movwf	??_main
  1188  0198  082A               	movf	??_main,w
  1189  0199  00BC               	movwf	_C31
  1190  019A                     l1943:
  1191                           
  1192                           ;lab3.c: 165:     Lcd_Write_Char(C23 + 48);
  1193  019A  3033               	movlw	51
  1194  019B  00A2               	movwf	___lwdiv@divisor
  1195  019C  3000               	movlw	0
  1196  019D  00A3               	movwf	___lwdiv@divisor+1
  1197  019E  0837               	movf	_contador+1,w
  1198  019F  00F4               	movwf	___wmul@multiplier+1
  1199  01A0  0836               	movf	_contador,w
  1200  01A1  00F3               	movwf	___wmul@multiplier
  1201  01A2  3064               	movlw	100
  1202  01A3  00F5               	movwf	___wmul@multiplicand
  1203  01A4  3000               	movlw	0
  1204  01A5  00F6               	movwf	___wmul@multiplicand+1
  1205  01A6  120A  118A  2626  120A  118A  	fcall	___wmul
  1206  01AB  0874               	movf	?___wmul+1,w
  1207  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1208  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1209  01AE  00A5               	movwf	___lwdiv@dividend+1
  1210  01AF  0873               	movf	?___wmul,w
  1211  01B0  00A4               	movwf	___lwdiv@dividend
  1212  01B1  120A  118A  25E0  120A  118A  	fcall	___lwdiv
  1213  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01B8  0822               	movf	?___lwdiv,w
  1216  01B9  00AA               	movwf	??_main
  1217  01BA  0823               	movf	?___lwdiv+1,w
  1218  01BB  00AB               	movwf	??_main+1
  1219  01BC  083C               	movf	_C31,w
  1220  01BD  00AC               	movwf	??_main+2
  1221  01BE  01AD               	clrf	??_main+3
  1222  01BF  082C               	movf	??_main+2,w
  1223  01C0  00F3               	movwf	___wmul@multiplier
  1224  01C1  082D               	movf	??_main+3,w
  1225  01C2  00F4               	movwf	___wmul@multiplier+1
  1226  01C3  309C               	movlw	156
  1227  01C4  00F5               	movwf	___wmul@multiplicand
  1228  01C5  30FF               	movlw	255
  1229  01C6  00F6               	movwf	___wmul@multiplicand+1
  1230  01C7  120A  118A  2626  120A  118A  	fcall	___wmul
  1231  01CC  0873               	movf	?___wmul,w
  1232  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1233  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1234  01CF  072A               	addwf	??_main,w
  1235  01D0  00B2               	movwf	_main$1183
  1236  01D1  0874               	movf	?___wmul+1,w
  1237  01D2  1803               	skipnc
  1238  01D3  0A74               	incf	?___wmul+1,w
  1239  01D4  072B               	addwf	??_main+1,w
  1240  01D5  00B3               	movwf	_main$1183+1
  1241  01D6                     l1945:
  1242                           
  1243                           ;lab3.c: 165:     Lcd_Write_Char(C23 + 48);
  1244  01D6  300A               	movlw	10
  1245  01D7  00A2               	movwf	___lwdiv@divisor
  1246  01D8  3000               	movlw	0
  1247  01D9  00A3               	movwf	___lwdiv@divisor+1
  1248  01DA  0833               	movf	_main$1183+1,w
  1249  01DB  00A5               	movwf	___lwdiv@dividend+1
  1250  01DC  0832               	movf	_main$1183,w
  1251  01DD  00A4               	movwf	___lwdiv@dividend
  1252  01DE  120A  118A  25E0  120A  118A  	fcall	___lwdiv
  1253  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01E5  0822               	movf	?___lwdiv,w
  1256  01E6  00AA               	movwf	??_main
  1257  01E7  082A               	movf	??_main,w
  1258  01E8  00BB               	movwf	_C32
  1259  01E9                     l1947:
  1260                           
  1261                           ;lab3.c: 166: 
  1262  01E9  3033               	movlw	51
  1263  01EA  00A2               	movwf	___lwdiv@divisor
  1264  01EB  3000               	movlw	0
  1265  01EC  00A3               	movwf	___lwdiv@divisor+1
  1266  01ED  0837               	movf	_contador+1,w
  1267  01EE  00F4               	movwf	___wmul@multiplier+1
  1268  01EF  0836               	movf	_contador,w
  1269  01F0  00F3               	movwf	___wmul@multiplier
  1270  01F1  3064               	movlw	100
  1271  01F2  00F5               	movwf	___wmul@multiplicand
  1272  01F3  3000               	movlw	0
  1273  01F4  00F6               	movwf	___wmul@multiplicand+1
  1274  01F5  120A  118A  2626  120A  118A  	fcall	___wmul
  1275  01FA  0874               	movf	?___wmul+1,w
  1276  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1277  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1278  01FD  00A5               	movwf	___lwdiv@dividend+1
  1279  01FE  0873               	movf	?___wmul,w
  1280  01FF  00A4               	movwf	___lwdiv@dividend
  1281  0200  120A  118A  25E0  120A  118A  	fcall	___lwdiv
  1282  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0207  0822               	movf	?___lwdiv,w
  1285  0208  00AA               	movwf	??_main
  1286  0209  0823               	movf	?___lwdiv+1,w
  1287  020A  00AB               	movwf	??_main+1
  1288  020B  309C               	movlw	156
  1289  020C  00AC               	movwf	??_main+2
  1290  020D  082C               	movf	??_main+2,w
  1291  020E  00F3               	movwf	___bmul@multiplicand
  1292  020F  083C               	movf	_C31,w
  1293  0210  120A  118A  26D7  120A  118A  	fcall	___bmul
  1294  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0217  00AD               	movwf	??_main+3
  1297  0218  30F6               	movlw	246
  1298  0219  00AE               	movwf	??_main+4
  1299  021A  082E               	movf	??_main+4,w
  1300  021B  00F3               	movwf	___bmul@multiplicand
  1301  021C  083B               	movf	_C32,w
  1302  021D  120A  118A  26D7  120A  118A  	fcall	___bmul
  1303  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0224  072D               	addwf	??_main+3,w
  1306  0225  072A               	addwf	??_main,w
  1307  0226  00AF               	movwf	??_main+5
  1308  0227  082F               	movf	??_main+5,w
  1309  0228  00BA               	movwf	_C33
  1310  0229                     l1949:
  1311                           
  1312                           ;lab3.c: 168:     Lcd_Write_Char(C31 +48);
  1313  0229  300A               	movlw	10
  1314  022A  0241               	subwf	_C12,w
  1315  022B  1C03               	skipc
  1316  022C  2A2E               	goto	u1131
  1317  022D  2A2F               	goto	u1130
  1318  022E                     u1131:
  1319  022E  2A33               	goto	l227
  1320  022F                     u1130:
  1321  022F                     l1951:
  1322                           
  1323                           ;lab3.c: 169:     Lcd_Set_Cursor(2,15);
  1324  022F  3009               	movlw	9
  1325  0230  00AA               	movwf	??_main
  1326  0231  082A               	movf	??_main,w
  1327  0232  00C1               	movwf	_C12
  1328  0233                     l227:	
  1329                           ;lab3.c: 170:     Lcd_Write_Char(C32 + 48);
  1330                           
  1331                           
  1332                           ;lab3.c: 171:     Lcd_Set_Cursor(2,16);
  1333  0233  300A               	movlw	10
  1334  0234  0240               	subwf	_C13,w
  1335  0235  1C03               	skipc
  1336  0236  2A38               	goto	u1141
  1337  0237  2A39               	goto	u1140
  1338  0238                     u1141:
  1339  0238  2A3D               	goto	l228
  1340  0239                     u1140:
  1341  0239                     l1953:
  1342                           
  1343                           ;lab3.c: 172:     Lcd_Write_Char(C33 + 48);
  1344  0239  3009               	movlw	9
  1345  023A  00AA               	movwf	??_main
  1346  023B  082A               	movf	??_main,w
  1347  023C  00C0               	movwf	_C13
  1348  023D                     l228:	
  1349                           ;lab3.c: 173: 
  1350                           
  1351                           
  1352                           ;lab3.c: 174:   }
  1353  023D  300A               	movlw	10
  1354  023E  023E               	subwf	_C22,w
  1355  023F  1C03               	skipc
  1356  0240  2A42               	goto	u1151
  1357  0241  2A43               	goto	u1150
  1358  0242                     u1151:
  1359  0242  2A47               	goto	l229
  1360  0243                     u1150:
  1361  0243                     l1955:
  1362                           
  1363                           ;lab3.c: 175: }
  1364  0243  3009               	movlw	9
  1365  0244  00AA               	movwf	??_main
  1366  0245  082A               	movf	??_main,w
  1367  0246  00BE               	movwf	_C22
  1368  0247                     l229:	
  1369                           ;lab3.c: 176: 
  1370                           
  1371                           
  1372                           ;lab3.c: 177: void Setup(void){
  1373  0247  300A               	movlw	10
  1374  0248  023D               	subwf	_C23,w
  1375  0249  1C03               	skipc
  1376  024A  2A4C               	goto	u1161
  1377  024B  2A4D               	goto	u1160
  1378  024C                     u1161:
  1379  024C  2A51               	goto	l230
  1380  024D                     u1160:
  1381  024D                     l1957:
  1382                           
  1383                           ;lab3.c: 178: 
  1384  024D  3009               	movlw	9
  1385  024E  00AA               	movwf	??_main
  1386  024F  082A               	movf	??_main,w
  1387  0250  00BD               	movwf	_C23
  1388  0251                     l230:	
  1389                           ;lab3.c: 179:     TRISA = 0;
  1390                           
  1391                           
  1392                           ;lab3.c: 181:     PORTD = 0;
  1393  0251  3006               	movlw	6
  1394  0252  0242               	subwf	_C11,w
  1395  0253  1C03               	skipc
  1396  0254  2A56               	goto	u1171
  1397  0255  2A57               	goto	u1170
  1398  0256                     u1171:
  1399  0256  2A5B               	goto	l231
  1400  0257                     u1170:
  1401  0257                     l1959:
  1402                           
  1403                           ;lab3.c: 182:     TRISE = 0;
  1404  0257  3005               	movlw	5
  1405  0258  00AA               	movwf	??_main
  1406  0259  082A               	movf	??_main,w
  1407  025A  00C2               	movwf	_C11
  1408  025B                     l231:	
  1409                           ;lab3.c: 183:     TRISB = 0;
  1410                           
  1411                           
  1412                           ;lab3.c: 184: 
  1413  025B  3006               	movlw	6
  1414  025C  023F               	subwf	_C21,w
  1415  025D  1C03               	skipc
  1416  025E  2A60               	goto	u1181
  1417  025F  2A61               	goto	u1180
  1418  0260                     u1181:
  1419  0260  2A65               	goto	l232
  1420  0261                     u1180:
  1421  0261                     l1961:
  1422                           
  1423                           ;lab3.c: 185:     ADCON0 = 0b10000011;
  1424  0261  3005               	movlw	5
  1425  0262  00AA               	movwf	??_main
  1426  0263  082A               	movf	??_main,w
  1427  0264  00C2               	movwf	_C11
  1428  0265                     l232:	
  1429                           ;lab3.c: 186:     ADCON1 = 0;
  1430                           
  1431                           
  1432                           ;lab3.c: 187:     PORTA = 0;
  1433  0265  3006               	movlw	6
  1434  0266  023C               	subwf	_C31,w
  1435  0267  1C03               	skipc
  1436  0268  2A6A               	goto	u1191
  1437  0269  2A6B               	goto	u1190
  1438  026A                     u1191:
  1439  026A  2A6F               	goto	l1965
  1440  026B                     u1190:
  1441  026B                     l1963:
  1442                           
  1443                           ;lab3.c: 188:     ADCON0 = 0b10000011;
  1444  026B  3005               	movlw	5
  1445  026C  00AA               	movwf	??_main
  1446  026D  082A               	movf	??_main,w
  1447  026E  00C2               	movwf	_C11
  1448  026F                     l1965:
  1449                           
  1450                           ;lab3.c: 191:     PORTB = 0;
  1451  026F  01F7               	clrf	Lcd_Set_Cursor@b
  1452  0270  0AF7               	incf	Lcd_Set_Cursor@b,f
  1453  0271  3002               	movlw	2
  1454  0272  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1455  0277                     l1967:
  1456                           
  1457                           ;lab3.c: 192:     ANSEL = 0;
  1458  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0279  0842               	movf	_C11,w
  1461  027A  3E30               	addlw	48
  1462  027B  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1463  0280                     l1969:
  1464                           
  1465                           ;lab3.c: 193:     Lcd_Init();
  1466  0280  3003               	movlw	3
  1467  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0283  00AA               	movwf	??_main
  1470  0284  082A               	movf	??_main,w
  1471  0285  00F7               	movwf	Lcd_Set_Cursor@b
  1472  0286  3002               	movlw	2
  1473  0287  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1474  028C                     l1971:
  1475                           
  1476                           ;lab3.c: 194:     var_contador = 0;
  1477  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1478  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1479  028E  0841               	movf	_C12,w
  1480  028F  3E30               	addlw	48
  1481  0290  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1482  0295                     l1973:
  1483                           
  1484                           ;lab3.c: 195:     PIE1bits.ADIE = 1;
  1485  0295  3004               	movlw	4
  1486  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0298  00AA               	movwf	??_main
  1489  0299  082A               	movf	??_main,w
  1490  029A  00F7               	movwf	Lcd_Set_Cursor@b
  1491  029B  3002               	movlw	2
  1492  029C  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1493  02A1                     l1975:
  1494                           
  1495                           ;lab3.c: 196:     initADC(0);
  1496  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1497  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1498  02A3  0840               	movf	_C13,w
  1499  02A4  3E30               	addlw	48
  1500  02A5  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1501  02AA                     l1977:
  1502                           
  1503                           ;lab3.c: 198: 
  1504  02AA  3007               	movlw	7
  1505  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1506  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1507  02AD  00AA               	movwf	??_main
  1508  02AE  082A               	movf	??_main,w
  1509  02AF  00F7               	movwf	Lcd_Set_Cursor@b
  1510  02B0  3002               	movlw	2
  1511  02B1  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1512  02B6                     l1979:
  1513                           
  1514                           ;lab3.c: 199: 
  1515  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1516  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1517  02B8  083F               	movf	_C21,w
  1518  02B9  3E30               	addlw	48
  1519  02BA  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1520  02BF                     l1981:
  1521                           
  1522                           ;lab3.c: 200: 
  1523  02BF  3009               	movlw	9
  1524  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1525  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1526  02C2  00AA               	movwf	??_main
  1527  02C3  082A               	movf	??_main,w
  1528  02C4  00F7               	movwf	Lcd_Set_Cursor@b
  1529  02C5  3002               	movlw	2
  1530  02C6  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1531  02CB                     l1983:
  1532                           
  1533                           ;lab3.c: 201:     OPTION_REGbits.T0CS = 0;
  1534  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1535  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1536  02CD  083E               	movf	_C22,w
  1537  02CE  3E30               	addlw	48
  1538  02CF  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1539  02D4                     l1985:
  1540                           
  1541                           ;lab3.c: 202:     OPTION_REGbits.PSA = 0;
  1542  02D4  300A               	movlw	10
  1543  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1544  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1545  02D7  00AA               	movwf	??_main
  1546  02D8  082A               	movf	??_main,w
  1547  02D9  00F7               	movwf	Lcd_Set_Cursor@b
  1548  02DA  3002               	movlw	2
  1549  02DB  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1550  02E0                     l1987:
  1551                           
  1552                           ;lab3.c: 203:     OPTION_REGbits.PS = 111;
  1553  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1554  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1555  02E2  083D               	movf	_C23,w
  1556  02E3  3E30               	addlw	48
  1557  02E4  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1558  02E9                     l1989:
  1559                           
  1560                           ;lab3.c: 205: 
  1561  02E9  300D               	movlw	13
  1562  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1563  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1564  02EC  00AA               	movwf	??_main
  1565  02ED  082A               	movf	??_main,w
  1566  02EE  00F7               	movwf	Lcd_Set_Cursor@b
  1567  02EF  3002               	movlw	2
  1568  02F0  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1569  02F5                     l1991:
  1570                           
  1571                           ;lab3.c: 206: 
  1572  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1573  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1574  02F7  083C               	movf	_C31,w
  1575  02F8  3E30               	addlw	48
  1576  02F9  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1577  02FE                     l1993:
  1578                           
  1579                           ;lab3.c: 207:     INTCONbits.GIE = 1;
  1580  02FE  300F               	movlw	15
  1581  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0301  00AA               	movwf	??_main
  1584  0302  082A               	movf	??_main,w
  1585  0303  00F7               	movwf	Lcd_Set_Cursor@b
  1586  0304  3002               	movlw	2
  1587  0305  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1588  030A                     l1995:
  1589                           
  1590                           ;lab3.c: 208:     INTCONbits.T0IE = 1;
  1591  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1592  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1593  030C  083B               	movf	_C32,w
  1594  030D  3E30               	addlw	48
  1595  030E  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1596  0313                     l1997:
  1597                           
  1598                           ;lab3.c: 209:     INTCONbits.T0IF = 0;
  1599  0313  3010               	movlw	16
  1600  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0316  00AA               	movwf	??_main
  1603  0317  082A               	movf	??_main,w
  1604  0318  00F7               	movwf	Lcd_Set_Cursor@b
  1605  0319  3002               	movlw	2
  1606  031A  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  1607  031F                     l1999:
  1608                           
  1609                           ;lab3.c: 210: 
  1610  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0321  083A               	movf	_C33,w
  1613  0322  3E30               	addlw	48
  1614  0323  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  1615  0328  2824               	goto	l1919
  1616  0329  120A  118A  280C   	ljmp	start
  1617  032C                     __end_of_main:
  1618                           
  1619                           	psect	text1
  1620  0626                     __ptext1:	
  1621 ;; *************** function ___wmul *****************
  1622 ;; Defined at:
  1623 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  multiplier      2    3[COMMON] unsigned int 
  1626 ;;  multiplicand    2    5[COMMON] unsigned int 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  product         2    0[BANK0 ] unsigned int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2    3[COMMON] unsigned int 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         4       0       0       0       0
  1639 ;;      Locals:         0       2       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         4       2       0       0       0
  1642 ;;Total ram usage:        6 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function ___wmul
  1654  0626                     ___wmul:
  1655  0626                     l1899:	
  1656                           ;incstack = 0
  1657                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1658                           
  1659  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0628  01A0               	clrf	___wmul@product
  1662  0629  01A1               	clrf	___wmul@product+1
  1663  062A                     l1901:
  1664  062A  1C73               	btfss	___wmul@multiplier,0
  1665  062B  2E2D               	goto	u1081
  1666  062C  2E2E               	goto	u1080
  1667  062D                     u1081:
  1668  062D  2E36               	goto	l325
  1669  062E                     u1080:
  1670  062E                     l1903:
  1671  062E  0875               	movf	___wmul@multiplicand,w
  1672  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0631  07A0               	addwf	___wmul@product,f
  1675  0632  1803               	skipnc
  1676  0633  0AA1               	incf	___wmul@product+1,f
  1677  0634  0876               	movf	___wmul@multiplicand+1,w
  1678  0635  07A1               	addwf	___wmul@product+1,f
  1679  0636                     l325:
  1680  0636  3001               	movlw	1
  1681  0637                     u1095:
  1682  0637  1003               	clrc
  1683  0638  0DF5               	rlf	___wmul@multiplicand,f
  1684  0639  0DF6               	rlf	___wmul@multiplicand+1,f
  1685  063A  3EFF               	addlw	-1
  1686  063B  1D03               	skipz
  1687  063C  2E37               	goto	u1095
  1688  063D                     l1905:
  1689  063D  3001               	movlw	1
  1690  063E                     u1105:
  1691  063E  1003               	clrc
  1692  063F  0CF4               	rrf	___wmul@multiplier+1,f
  1693  0640  0CF3               	rrf	___wmul@multiplier,f
  1694  0641  3EFF               	addlw	-1
  1695  0642  1D03               	skipz
  1696  0643  2E3E               	goto	u1105
  1697  0644                     l1907:
  1698  0644  0873               	movf	___wmul@multiplier,w
  1699  0645  0474               	iorwf	___wmul@multiplier+1,w
  1700  0646  1D03               	btfss	3,2
  1701  0647  2E49               	goto	u1111
  1702  0648  2E4A               	goto	u1110
  1703  0649                     u1111:
  1704  0649  2E2A               	goto	l1901
  1705  064A                     u1110:
  1706  064A                     l1909:
  1707  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1708  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1709  064C  0821               	movf	___wmul@product+1,w
  1710  064D  00F4               	movwf	?___wmul+1
  1711  064E  0820               	movf	___wmul@product,w
  1712  064F  00F3               	movwf	?___wmul
  1713  0650                     l327:
  1714  0650  0008               	return
  1715  0651                     __end_of___wmul:
  1716                           
  1717                           	psect	text2
  1718  05E0                     __ptext2:	
  1719 ;; *************** function ___lwdiv *****************
  1720 ;; Defined at:
  1721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  divisor         2    2[BANK0 ] unsigned int 
  1724 ;;  dividend        2    4[BANK0 ] unsigned int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  quotient        2    6[BANK0 ] unsigned int 
  1727 ;;  counter         1    8[BANK0 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    2[BANK0 ] unsigned int 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       4       0       0       0
  1738 ;;      Locals:         0       3       0       0       0
  1739 ;;      Temps:          1       0       0       0       0
  1740 ;;      Totals:         1       7       0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function ___lwdiv
  1753  05E0                     ___lwdiv:
  1754  05E0                     l1541:	
  1755                           ;incstack = 0
  1756                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1757                           
  1758  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1759  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1760  05E2  01A6               	clrf	___lwdiv@quotient
  1761  05E3  01A7               	clrf	___lwdiv@quotient+1
  1762  05E4                     l1543:
  1763  05E4  0822               	movf	___lwdiv@divisor,w
  1764  05E5  0423               	iorwf	___lwdiv@divisor+1,w
  1765  05E6  1903               	btfsc	3,2
  1766  05E7  2DE9               	goto	u721
  1767  05E8  2DEA               	goto	u720
  1768  05E9                     u721:
  1769  05E9  2E21               	goto	l1563
  1770  05EA                     u720:
  1771  05EA                     l1545:
  1772  05EA  01A8               	clrf	___lwdiv@counter
  1773  05EB  0AA8               	incf	___lwdiv@counter,f
  1774  05EC  2DF8               	goto	l1551
  1775  05ED                     l1547:
  1776  05ED  3001               	movlw	1
  1777  05EE                     u735:
  1778  05EE  1003               	clrc
  1779  05EF  0DA2               	rlf	___lwdiv@divisor,f
  1780  05F0  0DA3               	rlf	___lwdiv@divisor+1,f
  1781  05F1  3EFF               	addlw	-1
  1782  05F2  1D03               	skipz
  1783  05F3  2DEE               	goto	u735
  1784  05F4                     l1549:
  1785  05F4  3001               	movlw	1
  1786  05F5  00F7               	movwf	??___lwdiv
  1787  05F6  0877               	movf	??___lwdiv,w
  1788  05F7  07A8               	addwf	___lwdiv@counter,f
  1789  05F8                     l1551:
  1790  05F8  1FA3               	btfss	___lwdiv@divisor+1,7
  1791  05F9  2DFB               	goto	u741
  1792  05FA  2DFC               	goto	u740
  1793  05FB                     u741:
  1794  05FB  2DED               	goto	l1547
  1795  05FC                     u740:
  1796  05FC                     l1553:
  1797  05FC  3001               	movlw	1
  1798  05FD                     u755:
  1799  05FD  1003               	clrc
  1800  05FE  0DA6               	rlf	___lwdiv@quotient,f
  1801  05FF  0DA7               	rlf	___lwdiv@quotient+1,f
  1802  0600  3EFF               	addlw	-1
  1803  0601  1D03               	skipz
  1804  0602  2DFD               	goto	u755
  1805  0603  0823               	movf	___lwdiv@divisor+1,w
  1806  0604  0225               	subwf	___lwdiv@dividend+1,w
  1807  0605  1D03               	skipz
  1808  0606  2E09               	goto	u765
  1809  0607  0822               	movf	___lwdiv@divisor,w
  1810  0608  0224               	subwf	___lwdiv@dividend,w
  1811  0609                     u765:
  1812  0609  1C03               	skipc
  1813  060A  2E0C               	goto	u761
  1814  060B  2E0D               	goto	u760
  1815  060C                     u761:
  1816  060C  2E14               	goto	l1559
  1817  060D                     u760:
  1818  060D                     l1555:
  1819  060D  0822               	movf	___lwdiv@divisor,w
  1820  060E  02A4               	subwf	___lwdiv@dividend,f
  1821  060F  0823               	movf	___lwdiv@divisor+1,w
  1822  0610  1C03               	skipc
  1823  0611  03A5               	decf	___lwdiv@dividend+1,f
  1824  0612  02A5               	subwf	___lwdiv@dividend+1,f
  1825  0613                     l1557:
  1826  0613  1426               	bsf	___lwdiv@quotient,0
  1827  0614                     l1559:
  1828  0614  3001               	movlw	1
  1829  0615                     u775:
  1830  0615  1003               	clrc
  1831  0616  0CA3               	rrf	___lwdiv@divisor+1,f
  1832  0617  0CA2               	rrf	___lwdiv@divisor,f
  1833  0618  3EFF               	addlw	-1
  1834  0619  1D03               	skipz
  1835  061A  2E15               	goto	u775
  1836  061B                     l1561:
  1837  061B  3001               	movlw	1
  1838  061C  02A8               	subwf	___lwdiv@counter,f
  1839  061D  1D03               	btfss	3,2
  1840  061E  2E20               	goto	u781
  1841  061F  2E21               	goto	u780
  1842  0620                     u781:
  1843  0620  2DFC               	goto	l1553
  1844  0621                     u780:
  1845  0621                     l1563:
  1846  0621  0827               	movf	___lwdiv@quotient+1,w
  1847  0622  00A3               	movwf	?___lwdiv+1
  1848  0623  0826               	movf	___lwdiv@quotient,w
  1849  0624  00A2               	movwf	?___lwdiv
  1850  0625                     l597:
  1851  0625  0008               	return
  1852  0626                     __end_of___lwdiv:
  1853                           
  1854                           	psect	text3
  1855  06D7                     __ptext3:	
  1856 ;; *************** function ___bmul *****************
  1857 ;; Defined at:
  1858 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  multiplier      1    wreg     unsigned char 
  1861 ;;  multiplicand    1    3[COMMON] unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  multiplier      1    6[COMMON] unsigned char 
  1864 ;;  product         1    5[COMMON] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      unsigned char 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         1       0       0       0       0
  1875 ;;      Locals:         2       0       0       0       0
  1876 ;;      Temps:          1       0       0       0       0
  1877 ;;      Totals:         4       0       0       0       0
  1878 ;;Total ram usage:        4 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function ___bmul
  1890  06D7                     ___bmul:
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1894                           ;___bmul@multiplier stored from wreg
  1895  06D7  00F6               	movwf	___bmul@multiplier
  1896  06D8                     l1483:
  1897  06D8  01F5               	clrf	___bmul@product
  1898  06D9                     l1485:
  1899  06D9  1C76               	btfss	___bmul@multiplier,0
  1900  06DA  2EDC               	goto	u601
  1901  06DB  2EDD               	goto	u600
  1902  06DC                     u601:
  1903  06DC  2EE1               	goto	l1489
  1904  06DD                     u600:
  1905  06DD                     l1487:
  1906  06DD  0873               	movf	___bmul@multiplicand,w
  1907  06DE  00F4               	movwf	??___bmul
  1908  06DF  0874               	movf	??___bmul,w
  1909  06E0  07F5               	addwf	___bmul@product,f
  1910  06E1                     l1489:
  1911  06E1  1003               	clrc
  1912  06E2  0DF3               	rlf	___bmul@multiplicand,f
  1913  06E3                     l1491:
  1914  06E3  1003               	clrc
  1915  06E4  0CF6               	rrf	___bmul@multiplier,f
  1916  06E5  0876               	movf	___bmul@multiplier,w
  1917  06E6  1D03               	btfss	3,2
  1918  06E7  2EE9               	goto	u611
  1919  06E8  2EEA               	goto	u610
  1920  06E9                     u611:
  1921  06E9  2ED9               	goto	l1485
  1922  06EA                     u610:
  1923  06EA                     l1493:
  1924  06EA  0875               	movf	___bmul@product,w
  1925  06EB                     l351:
  1926  06EB  0008               	return
  1927  06EC                     __end_of___bmul:
  1928                           
  1929                           	psect	text4
  1930  04BF                     __ptext4:	
  1931 ;; *************** function ___awdiv *****************
  1932 ;; Defined at:
  1933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  divisor         2    2[BANK0 ] int 
  1936 ;;  dividend        2    4[BANK0 ] int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  quotient        2    8[BANK0 ] int 
  1939 ;;  sign            1    7[BANK0 ] unsigned char 
  1940 ;;  counter         1    6[BANK0 ] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  2    2[BANK0 ] int 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1950 ;;      Params:         0       4       0       0       0
  1951 ;;      Locals:         0       4       0       0       0
  1952 ;;      Temps:          1       0       0       0       0
  1953 ;;      Totals:         1       8       0       0       0
  1954 ;;Total ram usage:        9 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function ___awdiv
  1966  04BF                     ___awdiv:
  1967  04BF                     l1497:	
  1968                           ;incstack = 0
  1969                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1970                           
  1971  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1972  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1973  04C1  01A7               	clrf	___awdiv@sign
  1974  04C2                     l1499:
  1975  04C2  1FA3               	btfss	___awdiv@divisor+1,7
  1976  04C3  2CC5               	goto	u621
  1977  04C4  2CC6               	goto	u620
  1978  04C5                     u621:
  1979  04C5  2CCD               	goto	l1505
  1980  04C6                     u620:
  1981  04C6                     l1501:
  1982  04C6  09A2               	comf	___awdiv@divisor,f
  1983  04C7  09A3               	comf	___awdiv@divisor+1,f
  1984  04C8  0AA2               	incf	___awdiv@divisor,f
  1985  04C9  1903               	skipnz
  1986  04CA  0AA3               	incf	___awdiv@divisor+1,f
  1987  04CB                     l1503:
  1988  04CB  01A7               	clrf	___awdiv@sign
  1989  04CC  0AA7               	incf	___awdiv@sign,f
  1990  04CD                     l1505:
  1991  04CD  1FA5               	btfss	___awdiv@dividend+1,7
  1992  04CE  2CD0               	goto	u631
  1993  04CF  2CD1               	goto	u630
  1994  04D0                     u631:
  1995  04D0  2CDA               	goto	l1511
  1996  04D1                     u630:
  1997  04D1                     l1507:
  1998  04D1  09A4               	comf	___awdiv@dividend,f
  1999  04D2  09A5               	comf	___awdiv@dividend+1,f
  2000  04D3  0AA4               	incf	___awdiv@dividend,f
  2001  04D4  1903               	skipnz
  2002  04D5  0AA5               	incf	___awdiv@dividend+1,f
  2003  04D6                     l1509:
  2004  04D6  3001               	movlw	1
  2005  04D7  00F7               	movwf	??___awdiv
  2006  04D8  0877               	movf	??___awdiv,w
  2007  04D9  06A7               	xorwf	___awdiv@sign,f
  2008  04DA                     l1511:
  2009  04DA  01A8               	clrf	___awdiv@quotient
  2010  04DB  01A9               	clrf	___awdiv@quotient+1
  2011  04DC                     l1513:
  2012  04DC  0822               	movf	___awdiv@divisor,w
  2013  04DD  0423               	iorwf	___awdiv@divisor+1,w
  2014  04DE  1903               	btfsc	3,2
  2015  04DF  2CE1               	goto	u641
  2016  04E0  2CE2               	goto	u640
  2017  04E1                     u641:
  2018  04E1  2D19               	goto	l1533
  2019  04E2                     u640:
  2020  04E2                     l1515:
  2021  04E2  01A6               	clrf	___awdiv@counter
  2022  04E3  0AA6               	incf	___awdiv@counter,f
  2023  04E4  2CF0               	goto	l1521
  2024  04E5                     l1517:
  2025  04E5  3001               	movlw	1
  2026  04E6                     u655:
  2027  04E6  1003               	clrc
  2028  04E7  0DA2               	rlf	___awdiv@divisor,f
  2029  04E8  0DA3               	rlf	___awdiv@divisor+1,f
  2030  04E9  3EFF               	addlw	-1
  2031  04EA  1D03               	skipz
  2032  04EB  2CE6               	goto	u655
  2033  04EC                     l1519:
  2034  04EC  3001               	movlw	1
  2035  04ED  00F7               	movwf	??___awdiv
  2036  04EE  0877               	movf	??___awdiv,w
  2037  04EF  07A6               	addwf	___awdiv@counter,f
  2038  04F0                     l1521:
  2039  04F0  1FA3               	btfss	___awdiv@divisor+1,7
  2040  04F1  2CF3               	goto	u661
  2041  04F2  2CF4               	goto	u660
  2042  04F3                     u661:
  2043  04F3  2CE5               	goto	l1517
  2044  04F4                     u660:
  2045  04F4                     l1523:
  2046  04F4  3001               	movlw	1
  2047  04F5                     u675:
  2048  04F5  1003               	clrc
  2049  04F6  0DA8               	rlf	___awdiv@quotient,f
  2050  04F7  0DA9               	rlf	___awdiv@quotient+1,f
  2051  04F8  3EFF               	addlw	-1
  2052  04F9  1D03               	skipz
  2053  04FA  2CF5               	goto	u675
  2054  04FB  0823               	movf	___awdiv@divisor+1,w
  2055  04FC  0225               	subwf	___awdiv@dividend+1,w
  2056  04FD  1D03               	skipz
  2057  04FE  2D01               	goto	u685
  2058  04FF  0822               	movf	___awdiv@divisor,w
  2059  0500  0224               	subwf	___awdiv@dividend,w
  2060  0501                     u685:
  2061  0501  1C03               	skipc
  2062  0502  2D04               	goto	u681
  2063  0503  2D05               	goto	u680
  2064  0504                     u681:
  2065  0504  2D0C               	goto	l1529
  2066  0505                     u680:
  2067  0505                     l1525:
  2068  0505  0822               	movf	___awdiv@divisor,w
  2069  0506  02A4               	subwf	___awdiv@dividend,f
  2070  0507  0823               	movf	___awdiv@divisor+1,w
  2071  0508  1C03               	skipc
  2072  0509  03A5               	decf	___awdiv@dividend+1,f
  2073  050A  02A5               	subwf	___awdiv@dividend+1,f
  2074  050B                     l1527:
  2075  050B  1428               	bsf	___awdiv@quotient,0
  2076  050C                     l1529:
  2077  050C  3001               	movlw	1
  2078  050D                     u695:
  2079  050D  1003               	clrc
  2080  050E  0CA3               	rrf	___awdiv@divisor+1,f
  2081  050F  0CA2               	rrf	___awdiv@divisor,f
  2082  0510  3EFF               	addlw	-1
  2083  0511  1D03               	skipz
  2084  0512  2D0D               	goto	u695
  2085  0513                     l1531:
  2086  0513  3001               	movlw	1
  2087  0514  02A6               	subwf	___awdiv@counter,f
  2088  0515  1D03               	btfss	3,2
  2089  0516  2D18               	goto	u701
  2090  0517  2D19               	goto	u700
  2091  0518                     u701:
  2092  0518  2CF4               	goto	l1523
  2093  0519                     u700:
  2094  0519                     l1533:
  2095  0519  0827               	movf	___awdiv@sign,w
  2096  051A  1903               	btfsc	3,2
  2097  051B  2D1D               	goto	u711
  2098  051C  2D1E               	goto	u710
  2099  051D                     u711:
  2100  051D  2D23               	goto	l1537
  2101  051E                     u710:
  2102  051E                     l1535:
  2103  051E  09A8               	comf	___awdiv@quotient,f
  2104  051F  09A9               	comf	___awdiv@quotient+1,f
  2105  0520  0AA8               	incf	___awdiv@quotient,f
  2106  0521  1903               	skipnz
  2107  0522  0AA9               	incf	___awdiv@quotient+1,f
  2108  0523                     l1537:
  2109  0523  0829               	movf	___awdiv@quotient+1,w
  2110  0524  00A3               	movwf	?___awdiv+1
  2111  0525  0828               	movf	___awdiv@quotient,w
  2112  0526  00A2               	movwf	?___awdiv
  2113  0527                     l478:
  2114  0527  0008               	return
  2115  0528                     __end_of___awdiv:
  2116                           
  2117                           	psect	text5
  2118  040C                     __ptext5:	
  2119 ;; *************** function _Setup *****************
  2120 ;; Defined at:
  2121 ;;		line 215 in file "lab3.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          0       1       0       0       0
  2138 ;;      Totals:         0       1       0       0       0
  2139 ;;Total ram usage:        1 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    4
  2142 ;; This function calls:
  2143 ;;		_Lcd_Init
  2144 ;;		_Lcd_Set_Cursor
  2145 ;;		_Lcd_Write_String
  2146 ;;		_initADC
  2147 ;;		_initUSART
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _Setup
  2155  040C                     _Setup:
  2156  040C                     l1839:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2159                           
  2160                           
  2161                           ;lab3.c: 217:     Lcd_Write_String("0.00");
  2162  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2163  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2164  040E  0185               	clrf	5	;volatile
  2165                           
  2166                           ;lab3.c: 218:     Lcd_Set_Cursor(1,8);
  2167  040F  0188               	clrf	8	;volatile
  2168                           
  2169                           ;lab3.c: 219:     Lcd_Write_String("S2");
  2170  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0412  0188               	clrf	8	;volatile
  2173                           
  2174                           ;lab3.c: 220:     Lcd_Set_Cursor(2,7);
  2175  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2177  0415  0189               	clrf	9	;volatile
  2178                           
  2179                           ;lab3.c: 221:     Lcd_Write_String("0.00");
  2180  0416  0186               	clrf	6	;volatile
  2181  0417                     l1841:
  2182                           
  2183                           ;lab3.c: 223:     Lcd_Write_String("S3");
  2184  0417  3083               	movlw	131
  2185  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2187  041A  009F               	movwf	31	;volatile
  2188  041B                     l1843:
  2189                           
  2190                           ;lab3.c: 224:     Lcd_Set_Cursor(2,13);
  2191  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2192  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2193  041D  019F               	clrf	31	;volatile
  2194  041E                     l1845:
  2195                           
  2196                           ;lab3.c: 225:     Lcd_Write_String("0.00");
  2197  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2198  041F  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0420  0185               	clrf	5	;volatile
  2200  0421                     l1847:
  2201                           
  2202                           ;lab3.c: 226: 
  2203  0421  3083               	movlw	131
  2204  0422  009F               	movwf	31	;volatile
  2205                           
  2206                           ;lab3.c: 227: }
  2207  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0424  1303               	bcf	3,6	;RP1=0, select bank1
  2209  0425  019F               	clrf	31	;volatile
  2210  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0427  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0428  0185               	clrf	5	;volatile
  2213  0429  0186               	clrf	6	;volatile
  2214  042A  1683               	bsf	3,5	;RP0=1, select bank3
  2215  042B  1703               	bsf	3,6	;RP1=1, select bank3
  2216  042C  0188               	clrf	8	;volatile
  2217  042D                     l1849:
  2218  042D  120A  118A  2528  120A  118A  	fcall	_Lcd_Init
  2219  0432                     l1851:
  2220  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0434  01C8               	clrf	_var_contador
  2223  0435                     l1853:
  2224  0435  1683               	bsf	3,5	;RP0=1, select bank1
  2225  0436  1303               	bcf	3,6	;RP1=0, select bank1
  2226  0437  170C               	bsf	12,6	;volatile
  2227  0438                     l1855:
  2228  0438  3000               	movlw	0
  2229  0439  120A  118A  2586  120A  118A  	fcall	_initADC
  2230  043E                     l1857:
  2231  043E  3001               	movlw	1
  2232  043F  120A  118A  2586  120A  118A  	fcall	_initADC
  2233  0444                     l1859:
  2234  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2235  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2236  0446  1281               	bcf	1,5	;volatile
  2237  0447                     l1861:
  2238  0447  1181               	bcf	1,3	;volatile
  2239  0448                     l1863:
  2240  0448  3007               	movlw	7
  2241  0449  0481               	iorwf	1,f	;volatile
  2242  044A                     l1865:
  2243  044A  300A               	movlw	10
  2244  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2245  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2246  044D  0081               	movwf	1	;volatile
  2247  044E                     l1867:
  2248  044E  178B               	bsf	11,7	;volatile
  2249  044F                     l1869:
  2250  044F  168B               	bsf	11,5	;volatile
  2251  0450                     l1871:
  2252  0450  110B               	bcf	11,2	;volatile
  2253  0451                     l1873:
  2254  0451  120A  118A  26A0  120A  118A  	fcall	_initUSART
  2255  0456                     l1875:
  2256  0456  3003               	movlw	3
  2257  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0459  00A3               	movwf	??_Setup
  2260  045A  0823               	movf	??_Setup,w
  2261  045B  00F7               	movwf	Lcd_Set_Cursor@b
  2262  045C  3001               	movlw	1
  2263  045D  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  2264  0462                     l1877:
  2265  0462  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2266  0463  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  2267  0468                     l1879:
  2268  0468  01F7               	clrf	Lcd_Set_Cursor@b
  2269  0469  0AF7               	incf	Lcd_Set_Cursor@b,f
  2270  046A  3002               	movlw	2
  2271  046B  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  2272  0470                     l1881:
  2273  0470  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2274  0471  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  2275  0476                     l1883:
  2276  0476  3008               	movlw	8
  2277  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0479  00A3               	movwf	??_Setup
  2280  047A  0823               	movf	??_Setup,w
  2281  047B  00F7               	movwf	Lcd_Set_Cursor@b
  2282  047C  3001               	movlw	1
  2283  047D  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  2284  0482                     l1885:
  2285  0482  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2286  0483  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  2287  0488                     l1887:
  2288  0488  3007               	movlw	7
  2289  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2290  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2291  048B  00A3               	movwf	??_Setup
  2292  048C  0823               	movf	??_Setup,w
  2293  048D  00F7               	movwf	Lcd_Set_Cursor@b
  2294  048E  3002               	movlw	2
  2295  048F  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  2296  0494                     l1889:
  2297  0494  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2298  0495  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  2299  049A                     l1891:
  2300  049A  300E               	movlw	14
  2301  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2302  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2303  049D  00A3               	movwf	??_Setup
  2304  049E  0823               	movf	??_Setup,w
  2305  049F  00F7               	movwf	Lcd_Set_Cursor@b
  2306  04A0  3001               	movlw	1
  2307  04A1  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  2308  04A6                     l1893:
  2309  04A6  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2310  04A7  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  2311  04AC                     l1895:
  2312  04AC  300D               	movlw	13
  2313  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2314  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2315  04AF  00A3               	movwf	??_Setup
  2316  04B0  0823               	movf	??_Setup,w
  2317  04B1  00F7               	movwf	Lcd_Set_Cursor@b
  2318  04B2  3002               	movlw	2
  2319  04B3  120A  118A  267A  120A  118A  	fcall	_Lcd_Set_Cursor
  2320  04B8                     l1897:
  2321  04B8  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2322  04B9  120A  118A  2651  120A  118A  	fcall	_Lcd_Write_String
  2323  04BE                     l239:
  2324  04BE  0008               	return
  2325  04BF                     __end_of_Setup:
  2326                           
  2327                           	psect	text6
  2328  06A0                     __ptext6:	
  2329 ;; *************** function _initUSART *****************
  2330 ;; Defined at:
  2331 ;;		line 3 in file "USART.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0
  2348 ;;      Totals:         0       0       0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_Setup
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _initUSART
  2361  06A0                     _initUSART:
  2362  06A0                     l1381:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _initUSART: [wreg+status,2]
  2365                           
  2366                           
  2367                           ;USART.c: 5:     TRISCbits.TRISC6 = 0;
  2368  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2369  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2370  06A2  1307               	bcf	7,6	;volatile
  2371                           
  2372                           ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  2373  06A3  1787               	bsf	7,7	;volatile
  2374  06A4                     l1383:
  2375                           
  2376                           ;USART.c: 9:     SPBRG = 25;
  2377  06A4  3019               	movlw	25
  2378  06A5  0099               	movwf	25	;volatile
  2379  06A6                     l1385:
  2380                           
  2381                           ;USART.c: 10:     TXSTAbits.BRGH = 1;
  2382  06A6  1518               	bsf	24,2	;volatile
  2383  06A7                     l1387:
  2384                           
  2385                           ;USART.c: 11:     BAUDCTLbits.BRG16 = 0;
  2386  06A7  1683               	bsf	3,5	;RP0=1, select bank3
  2387  06A8  1703               	bsf	3,6	;RP1=1, select bank3
  2388  06A9  1187               	bcf	7,3	;volatile
  2389  06AA                     l1389:
  2390                           
  2391                           ;USART.c: 12:     SPBRGH = 0;
  2392  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  2393  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  2394  06AC  019A               	clrf	26	;volatile
  2395  06AD                     l1391:
  2396                           
  2397                           ;USART.c: 15:     TXSTAbits.SYNC = 0;
  2398  06AD  1218               	bcf	24,4	;volatile
  2399  06AE                     l1393:
  2400                           
  2401                           ;USART.c: 16:     RCSTAbits.SPEN = 1;
  2402  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2403  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2404  06B0  1798               	bsf	24,7	;volatile
  2405  06B1                     l1395:
  2406                           
  2407                           ;USART.c: 17:     TXSTAbits.TX9 = 0;
  2408  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  2409  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  2410  06B3  1318               	bcf	24,6	;volatile
  2411  06B4                     l1397:
  2412                           
  2413                           ;USART.c: 18:     TXSTAbits.TXEN = 1;
  2414  06B4  1698               	bsf	24,5	;volatile
  2415  06B5                     l1399:
  2416                           
  2417                           ;USART.c: 21:     PIE1bits.RCIE = 1;
  2418  06B5  168C               	bsf	12,5	;volatile
  2419  06B6                     l1401:
  2420                           
  2421                           ;USART.c: 22:     RCSTAbits.RX9 = 0;
  2422  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2423  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2424  06B8  1318               	bcf	24,6	;volatile
  2425  06B9                     l1403:
  2426                           
  2427                           ;USART.c: 23:     RCSTAbits.CREN = 1;
  2428  06B9  1618               	bsf	24,4	;volatile
  2429  06BA                     l1405:
  2430                           
  2431                           ;USART.c: 26:     INTCONbits.GIE = 1;
  2432  06BA  178B               	bsf	11,7	;volatile
  2433  06BB                     l1407:
  2434                           
  2435                           ;USART.c: 27:     INTCONbits.PEIE = 1;
  2436  06BB  170B               	bsf	11,6	;volatile
  2437  06BC                     l83:
  2438  06BC  0008               	return
  2439  06BD                     __end_of_initUSART:
  2440                           
  2441                           	psect	text7
  2442  0586                     __ptext7:	
  2443 ;; *************** function _initADC *****************
  2444 ;; Defined at:
  2445 ;;		line 4 in file "ADC.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  IRCF            1    wreg     unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  IRCF            1    5[COMMON] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2459 ;;      Params:         0       0       0       0       0
  2460 ;;      Locals:         1       0       0       0       0
  2461 ;;      Temps:          2       0       0       0       0
  2462 ;;      Totals:         3       0       0       0       0
  2463 ;;Total ram usage:        3 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_Setup
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _initADC
  2475  0586                     _initADC:
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  2479                           ;initADC@IRCF stored from wreg
  2480  0586  00F5               	movwf	initADC@IRCF
  2481  0587                     l1325:
  2482                           
  2483                           ;ADC.c: 6:     ADCON0 = 0b10000011;
  2484  0587  3083               	movlw	131
  2485  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2487  058A  009F               	movwf	31	;volatile
  2488  058B                     l1327:
  2489                           
  2490                           ;ADC.c: 7:     ADCON1 = 0;
  2491  058B  1683               	bsf	3,5	;RP0=1, select bank1
  2492  058C  1303               	bcf	3,6	;RP1=0, select bank1
  2493  058D  019F               	clrf	31	;volatile
  2494  058E                     l1329:
  2495                           
  2496                           ;ADC.c: 8:     PIE1bits.ADIE = 1;
  2497  058E  170C               	bsf	12,6	;volatile
  2498                           
  2499                           ;ADC.c: 9:     switch(IRCF){
  2500  058F  2DBD               	goto	l1333
  2501  0590                     l16:	
  2502                           ;ADC.c: 10:         case 0:
  2503                           
  2504                           
  2505                           ;ADC.c: 11:             TRISAbits.TRISA0 = 1;
  2506  0590  1405               	bsf	5,0	;volatile
  2507                           
  2508                           ;ADC.c: 12:             ANSELbits.ANS0 = 1;
  2509  0591  1683               	bsf	3,5	;RP0=1, select bank3
  2510  0592  1703               	bsf	3,6	;RP1=1, select bank3
  2511  0593  1408               	bsf	8,0	;volatile
  2512                           
  2513                           ;ADC.c: 13:             break;
  2514  0594  2DDF               	goto	l26
  2515  0595                     l18:	
  2516                           ;ADC.c: 14:         case 1:
  2517                           
  2518                           
  2519                           ;ADC.c: 15:             TRISAbits.TRISA1 = 1;
  2520  0595  1485               	bsf	5,1	;volatile
  2521                           
  2522                           ;ADC.c: 16:             ANSELbits.ANS1 = 1;
  2523  0596  1683               	bsf	3,5	;RP0=1, select bank3
  2524  0597  1703               	bsf	3,6	;RP1=1, select bank3
  2525  0598  1488               	bsf	8,1	;volatile
  2526                           
  2527                           ;ADC.c: 17:             break;
  2528  0599  2DDF               	goto	l26
  2529  059A                     l19:	
  2530                           ;ADC.c: 18:         case 2:
  2531                           
  2532                           
  2533                           ;ADC.c: 19:             TRISAbits.TRISA2 = 1;
  2534  059A  1505               	bsf	5,2	;volatile
  2535                           
  2536                           ;ADC.c: 20:             ANSELbits.ANS2 = 1;
  2537  059B  1683               	bsf	3,5	;RP0=1, select bank3
  2538  059C  1703               	bsf	3,6	;RP1=1, select bank3
  2539  059D  1508               	bsf	8,2	;volatile
  2540                           
  2541                           ;ADC.c: 21:             break;
  2542  059E  2DDF               	goto	l26
  2543  059F                     l20:	
  2544                           ;ADC.c: 22:         case 3:
  2545                           
  2546                           
  2547                           ;ADC.c: 23:             TRISAbits.TRISA3 = 1;
  2548  059F  1585               	bsf	5,3	;volatile
  2549                           
  2550                           ;ADC.c: 24:             ANSELbits.ANS3 = 1;
  2551  05A0  1683               	bsf	3,5	;RP0=1, select bank3
  2552  05A1  1703               	bsf	3,6	;RP1=1, select bank3
  2553  05A2  1588               	bsf	8,3	;volatile
  2554                           
  2555                           ;ADC.c: 25:             break;
  2556  05A3  2DDF               	goto	l26
  2557  05A4                     l21:	
  2558                           ;ADC.c: 26:         case 4:
  2559                           
  2560                           
  2561                           ;ADC.c: 27:             TRISAbits.TRISA5 = 1;
  2562  05A4  1685               	bsf	5,5	;volatile
  2563                           
  2564                           ;ADC.c: 28:             ANSELbits.ANS4 = 1;
  2565  05A5  1683               	bsf	3,5	;RP0=1, select bank3
  2566  05A6  1703               	bsf	3,6	;RP1=1, select bank3
  2567  05A7  1608               	bsf	8,4	;volatile
  2568                           
  2569                           ;ADC.c: 29:             break;
  2570  05A8  2DDF               	goto	l26
  2571  05A9                     l22:	
  2572                           ;ADC.c: 30:         case 5:
  2573                           
  2574                           
  2575                           ;ADC.c: 31:             TRISEbits.TRISE0 = 1;
  2576  05A9  1409               	bsf	9,0	;volatile
  2577                           
  2578                           ;ADC.c: 32:             ANSELbits.ANS5 = 1;
  2579  05AA  1683               	bsf	3,5	;RP0=1, select bank3
  2580  05AB  1703               	bsf	3,6	;RP1=1, select bank3
  2581  05AC  1688               	bsf	8,5	;volatile
  2582                           
  2583                           ;ADC.c: 33:             break;
  2584  05AD  2DDF               	goto	l26
  2585  05AE                     l23:	
  2586                           ;ADC.c: 34:         case 6:
  2587                           
  2588                           
  2589                           ;ADC.c: 35:             TRISEbits.TRISE1 = 1;
  2590  05AE  1489               	bsf	9,1	;volatile
  2591                           
  2592                           ;ADC.c: 36:             ANSELbits.ANS6 = 1;
  2593  05AF  1683               	bsf	3,5	;RP0=1, select bank3
  2594  05B0  1703               	bsf	3,6	;RP1=1, select bank3
  2595  05B1  1708               	bsf	8,6	;volatile
  2596                           
  2597                           ;ADC.c: 37:             break;
  2598  05B2  2DDF               	goto	l26
  2599  05B3                     l24:	
  2600                           ;ADC.c: 38:         case 7:
  2601                           
  2602                           
  2603                           ;ADC.c: 39:             TRISEbits.TRISE2 = 1;
  2604  05B3  1509               	bsf	9,2	;volatile
  2605                           
  2606                           ;ADC.c: 40:             ANSELbits.ANS7 = 1;
  2607  05B4  1683               	bsf	3,5	;RP0=1, select bank3
  2608  05B5  1703               	bsf	3,6	;RP1=1, select bank3
  2609  05B6  1788               	bsf	8,7	;volatile
  2610                           
  2611                           ;ADC.c: 41:             break;
  2612  05B7  2DDF               	goto	l26
  2613  05B8                     l25:	
  2614                           ;ADC.c: 42:         default:
  2615                           
  2616                           
  2617                           ;ADC.c: 43:             TRISAbits.TRISA0 = 1;
  2618  05B8  1405               	bsf	5,0	;volatile
  2619                           
  2620                           ;ADC.c: 44:             ANSELbits.ANS0 = 1;
  2621  05B9  1683               	bsf	3,5	;RP0=1, select bank3
  2622  05BA  1703               	bsf	3,6	;RP1=1, select bank3
  2623  05BB  1408               	bsf	8,0	;volatile
  2624                           
  2625                           ;ADC.c: 45:             break;
  2626  05BC  2DDF               	goto	l26
  2627  05BD                     l1333:
  2628  05BD  0875               	movf	initADC@IRCF,w
  2629  05BE  00F3               	movwf	??_initADC
  2630  05BF  01F4               	clrf	??_initADC+1
  2631                           
  2632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2633                           ; Switch size 1, requested type "simple"
  2634                           ; Number of cases is 1, Range of values is 0 to 0
  2635                           ; switch strategies available:
  2636                           ; Name         Instructions Cycles
  2637                           ; simple_byte            4     3 (average)
  2638                           ; direct_byte           11     8 (fixed)
  2639                           ; jumptable            260     6 (fixed)
  2640                           ;	Chosen strategy is simple_byte
  2641  05C0  0874               	movf	??_initADC+1,w
  2642  05C1  3A00               	xorlw	0	; case 0
  2643  05C2  1903               	skipnz
  2644  05C3  2DC5               	goto	l2021
  2645  05C4  2DB8               	goto	l25
  2646  05C5                     l2021:
  2647                           
  2648                           ; Switch size 1, requested type "simple"
  2649                           ; Number of cases is 8, Range of values is 0 to 7
  2650                           ; switch strategies available:
  2651                           ; Name         Instructions Cycles
  2652                           ; simple_byte           25    13 (average)
  2653                           ; direct_byte           32     8 (fixed)
  2654                           ; jumptable            260     6 (fixed)
  2655                           ;	Chosen strategy is simple_byte
  2656  05C5  0873               	movf	??_initADC,w
  2657  05C6  3A00               	xorlw	0	; case 0
  2658  05C7  1903               	skipnz
  2659  05C8  2D90               	goto	l16
  2660  05C9  3A01               	xorlw	1	; case 1
  2661  05CA  1903               	skipnz
  2662  05CB  2D95               	goto	l18
  2663  05CC  3A03               	xorlw	3	; case 2
  2664  05CD  1903               	skipnz
  2665  05CE  2D9A               	goto	l19
  2666  05CF  3A01               	xorlw	1	; case 3
  2667  05D0  1903               	skipnz
  2668  05D1  2D9F               	goto	l20
  2669  05D2  3A07               	xorlw	7	; case 4
  2670  05D3  1903               	skipnz
  2671  05D4  2DA4               	goto	l21
  2672  05D5  3A01               	xorlw	1	; case 5
  2673  05D6  1903               	skipnz
  2674  05D7  2DA9               	goto	l22
  2675  05D8  3A03               	xorlw	3	; case 6
  2676  05D9  1903               	skipnz
  2677  05DA  2DAE               	goto	l23
  2678  05DB  3A01               	xorlw	1	; case 7
  2679  05DC  1903               	skipnz
  2680  05DD  2DB3               	goto	l24
  2681  05DE  2DB8               	goto	l25
  2682  05DF                     l26:
  2683  05DF  0008               	return
  2684  05E0                     __end_of_initADC:
  2685                           
  2686                           	psect	text8
  2687  0651                     __ptext8:	
  2688 ;; *************** function _Lcd_Write_String *****************
  2689 ;; Defined at:
  2690 ;;		line 72 in file "lcd.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  a               1    wreg     PTR unsigned char 
  2693 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  2694 ;;		 -> STR_2(5), STR_1(3), 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2697 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  2698 ;;		 -> STR_2(5), STR_1(3), 
  2699 ;;  i               2    0[BANK0 ] int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         0       3       0       0       0
  2711 ;;      Temps:          0       0       0       0       0
  2712 ;;      Totals:         0       3       0       0       0
  2713 ;;Total ram usage:        3 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    3
  2716 ;; This function calls:
  2717 ;;		_Lcd_Write_Char
  2718 ;; This function is called by:
  2719 ;;		_Setup
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _Lcd_Write_String
  2725  0651                     _Lcd_Write_String:
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2729                           ;Lcd_Write_String@a stored from wreg
  2730  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0653  00A2               	movwf	Lcd_Write_String@a
  2733  0654                     l1831:
  2734                           
  2735                           ;lcd.c: 72: void Lcd_Write_String(char *a);lcd.c: 73: {;lcd.c: 74:  int i;;lcd.c: 75:  f
      +                          or(i=0;a[i]!='\0';i++)
  2736  0654  01A0               	clrf	Lcd_Write_String@i
  2737  0655  01A1               	clrf	Lcd_Write_String@i+1
  2738  0656  2E6C               	goto	l1837
  2739  0657                     l1833:
  2740                           
  2741                           ;lcd.c: 76:     Lcd_Write_Char(a[i]);
  2742  0657  0820               	movf	Lcd_Write_String@i,w
  2743  0658  0722               	addwf	Lcd_Write_String@a,w
  2744  0659  0084               	movwf	4
  2745  065A  120A  118A  2701  120A  118A  	fcall	stringdir
  2746  065F  120A  118A  26EC  120A  118A  	fcall	_Lcd_Write_Char
  2747  0664                     l1835:
  2748  0664  3001               	movlw	1
  2749  0665  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0666  1303               	bcf	3,6	;RP1=0, select bank0
  2751  0667  07A0               	addwf	Lcd_Write_String@i,f
  2752  0668  1803               	skipnc
  2753  0669  0AA1               	incf	Lcd_Write_String@i+1,f
  2754  066A  3000               	movlw	0
  2755  066B  07A1               	addwf	Lcd_Write_String@i+1,f
  2756  066C                     l1837:
  2757  066C  0820               	movf	Lcd_Write_String@i,w
  2758  066D  0722               	addwf	Lcd_Write_String@a,w
  2759  066E  0084               	movwf	4
  2760  066F  120A  118A  2701  120A  118A  	fcall	stringdir
  2761  0674  3A00               	xorlw	0
  2762  0675  1D03               	skipz
  2763  0676  2E78               	goto	u1071
  2764  0677  2E79               	goto	u1070
  2765  0678                     u1071:
  2766  0678  2E57               	goto	l1833
  2767  0679                     u1070:
  2768  0679                     l58:
  2769  0679  0008               	return
  2770  067A                     __end_of_Lcd_Write_String:
  2771                           
  2772                           	psect	text9
  2773  06EC                     __ptext9:	
  2774 ;; *************** function _Lcd_Write_Char *****************
  2775 ;; Defined at:
  2776 ;;		line 63 in file "lcd.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  a               1    wreg     unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  a               1    5[COMMON] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         0       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0
  2792 ;;      Temps:          1       0       0       0       0
  2793 ;;      Totals:         2       0       0       0       0
  2794 ;;Total ram usage:        2 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    2
  2797 ;; This function calls:
  2798 ;;		_Lcd_Port
  2799 ;; This function is called by:
  2800 ;;		_Lcd_Write_String
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _Lcd_Write_Char
  2807  06EC                     _Lcd_Write_Char:
  2808                           
  2809                           ;incstack = 0
  2810                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2811                           ;Lcd_Write_Char@a stored from wreg
  2812  06EC  00F5               	movwf	Lcd_Write_Char@a
  2813  06ED                     l1787:
  2814                           
  2815                           ;lcd.c: 63: void Lcd_Write_Char(char a);lcd.c: 64: {;lcd.c: 65:     RE0 = 1;
  2816  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2817  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  2818  06EF  1409               	bsf	9,0	;volatile
  2819  06F0                     l1789:
  2820                           
  2821                           ;lcd.c: 66:    Lcd_Port(a);
  2822  06F0  0875               	movf	Lcd_Write_Char@a,w
  2823  06F1  120A  118A  271D  120A  118A  	fcall	_Lcd_Port
  2824  06F6                     l1791:
  2825                           
  2826                           ;lcd.c: 67:    RE1 = 1;
  2827  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2828  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2829  06F8  1489               	bsf	9,1	;volatile
  2830  06F9                     l1793:
  2831                           
  2832                           ;lcd.c: 68:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2833  06F9  300D               	movlw	13
  2834  06FA  00F4               	movwf	??_Lcd_Write_Char
  2835  06FB                     u1207:
  2836  06FB  0BF4               	decfsz	??_Lcd_Write_Char,f
  2837  06FC  2EFB               	goto	u1207
  2838  06FD                     l1795:
  2839                           
  2840                           ;lcd.c: 69:    RE1 = 0;
  2841  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  2842  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  2843  06FF  1089               	bcf	9,1	;volatile
  2844  0700                     l52:
  2845  0700  0008               	return
  2846  0701                     __end_of_Lcd_Write_Char:
  2847                           
  2848                           	psect	text10
  2849  067A                     __ptext10:	
  2850 ;; *************** function _Lcd_Set_Cursor *****************
  2851 ;; Defined at:
  2852 ;;		line 30 in file "lcd.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  a               1    wreg     unsigned char 
  2855 ;;  b               1    7[COMMON] unsigned char 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  a               1    1[BANK0 ] unsigned char 
  2858 ;;  temp            1    2[BANK0 ] unsigned char 
  2859 ;;  y               1    0        unsigned char 
  2860 ;;  z               1    0        unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         1       0       0       0       0
  2871 ;;      Locals:         0       2       0       0       0
  2872 ;;      Temps:          0       1       0       0       0
  2873 ;;      Totals:         1       3       0       0       0
  2874 ;;Total ram usage:        4 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    3
  2877 ;; This function calls:
  2878 ;;		_Lcd_Cmd
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;;		_Setup
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _Lcd_Set_Cursor
  2887  067A                     _Lcd_Set_Cursor:
  2888                           
  2889                           ;incstack = 0
  2890                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2891                           ;Lcd_Set_Cursor@a stored from wreg
  2892  067A  1283               	bcf	3,5	;RP0=0, select bank0
  2893  067B  1303               	bcf	3,6	;RP1=0, select bank0
  2894  067C  00A1               	movwf	Lcd_Set_Cursor@a
  2895  067D                     l1797:
  2896                           
  2897                           ;lcd.c: 30: void Lcd_Set_Cursor(char a, char b);lcd.c: 31: {;lcd.c: 32:  char temp,z,y;;
      +                          lcd.c: 33:  if(a == 1)
  2898  067D  0321               	decf	Lcd_Set_Cursor@a,w
  2899  067E  1D03               	btfss	3,2
  2900  067F  2E81               	goto	u1051
  2901  0680  2E82               	goto	u1050
  2902  0681                     u1051:
  2903  0681  2E8E               	goto	l1803
  2904  0682                     u1050:
  2905  0682                     l1799:
  2906                           
  2907                           ;lcd.c: 34:  {;lcd.c: 35:    temp = 0x80 + b - 1;
  2908  0682  0877               	movf	Lcd_Set_Cursor@b,w
  2909  0683  3E7F               	addlw	127
  2910  0684  00A0               	movwf	??_Lcd_Set_Cursor
  2911  0685  0820               	movf	??_Lcd_Set_Cursor,w
  2912  0686  00A2               	movwf	Lcd_Set_Cursor@temp
  2913  0687                     l1801:
  2914                           
  2915                           ;lcd.c: 36:   Lcd_Cmd(temp);
  2916  0687  0822               	movf	Lcd_Set_Cursor@temp,w
  2917  0688  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  2918                           
  2919                           ;lcd.c: 37:  }
  2920  068D  2E9F               	goto	l46
  2921  068E                     l1803:
  2922  068E  3002               	movlw	2
  2923  068F  0621               	xorwf	Lcd_Set_Cursor@a,w
  2924  0690  1D03               	btfss	3,2
  2925  0691  2E93               	goto	u1061
  2926  0692  2E94               	goto	u1060
  2927  0693                     u1061:
  2928  0693  2E9F               	goto	l46
  2929  0694                     u1060:
  2930  0694                     l1805:
  2931                           
  2932                           ;lcd.c: 39:  {;lcd.c: 40:   temp = 0xC0 + b - 1;
  2933  0694  0877               	movf	Lcd_Set_Cursor@b,w
  2934  0695  3EBF               	addlw	191
  2935  0696  00A0               	movwf	??_Lcd_Set_Cursor
  2936  0697  0820               	movf	??_Lcd_Set_Cursor,w
  2937  0698  00A2               	movwf	Lcd_Set_Cursor@temp
  2938  0699                     l1807:
  2939                           
  2940                           ;lcd.c: 41:   Lcd_Cmd(temp);
  2941  0699  0822               	movf	Lcd_Set_Cursor@temp,w
  2942  069A  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  2943  069F                     l46:
  2944  069F  0008               	return
  2945  06A0                     __end_of_Lcd_Set_Cursor:
  2946                           
  2947                           	psect	text11
  2948  0528                     __ptext11:	
  2949 ;; *************** function _Lcd_Init *****************
  2950 ;; Defined at:
  2951 ;;		line 45 in file "lcd.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, pclath, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0
  2967 ;;      Temps:          0       2       0       0       0
  2968 ;;      Totals:         0       2       0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    3
  2972 ;; This function calls:
  2973 ;;		_Lcd_Cmd
  2974 ;;		_Lcd_Port
  2975 ;; This function is called by:
  2976 ;;		_Setup
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _Lcd_Init
  2982  0528                     _Lcd_Init:
  2983  0528                     l1809:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2986                           
  2987                           
  2988                           ;lcd.c: 46:    _delay((unsigned long)((15)*(4000000/4000.0)));
  2989  0528  3014               	movlw	20
  2990  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2991  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2992  052B  00A1               	movwf	??_Lcd_Init+1
  2993  052C  3079               	movlw	121
  2994  052D  00A0               	movwf	??_Lcd_Init
  2995  052E                     u1217:
  2996  052E  0BA0               	decfsz	??_Lcd_Init,f
  2997  052F  2D2E               	goto	u1217
  2998  0530  0BA1               	decfsz	??_Lcd_Init+1,f
  2999  0531  2D2E               	goto	u1217
  3000  0532                     l1811:
  3001                           
  3002                           ;lcd.c: 47:   Lcd_Port(0x00);
  3003  0532  3000               	movlw	0
  3004  0533  120A  118A  271D  120A  118A  	fcall	_Lcd_Port
  3005  0538                     l1813:
  3006                           
  3007                           ;lcd.c: 48:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3008  0538  301A               	movlw	26
  3009  0539  1283               	bcf	3,5	;RP0=0, select bank0
  3010  053A  1303               	bcf	3,6	;RP1=0, select bank0
  3011  053B  00A1               	movwf	??_Lcd_Init+1
  3012  053C  30F7               	movlw	247
  3013  053D  00A0               	movwf	??_Lcd_Init
  3014  053E                     u1227:
  3015  053E  0BA0               	decfsz	??_Lcd_Init,f
  3016  053F  2D3E               	goto	u1227
  3017  0540  0BA1               	decfsz	??_Lcd_Init+1,f
  3018  0541  2D3E               	goto	u1227
  3019  0542  2D43               	nop2
  3020                           
  3021                           ;lcd.c: 49:   Lcd_Cmd(0x030);
  3022  0543  3030               	movlw	48
  3023  0544  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  3024  0549                     l1815:
  3025                           
  3026                           ;lcd.c: 50:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3027  0549  3007               	movlw	7
  3028  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3029  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3030  054C  00A1               	movwf	??_Lcd_Init+1
  3031  054D  307C               	movlw	124
  3032  054E  00A0               	movwf	??_Lcd_Init
  3033  054F                     u1237:
  3034  054F  0BA0               	decfsz	??_Lcd_Init,f
  3035  0550  2D4F               	goto	u1237
  3036  0551  0BA1               	decfsz	??_Lcd_Init+1,f
  3037  0552  2D4F               	goto	u1237
  3038  0553  0000               	nop
  3039  0554                     l1817:
  3040                           
  3041                           ;lcd.c: 51:   Lcd_Cmd(0x030);
  3042  0554  3030               	movlw	48
  3043  0555  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  3044                           
  3045                           ;lcd.c: 52:  _delay((unsigned long)((160)*(4000000/4000000.0)));
  3046  055A  3034               	movlw	52
  3047  055B  1283               	bcf	3,5	;RP0=0, select bank0
  3048  055C  1303               	bcf	3,6	;RP1=0, select bank0
  3049  055D  00A0               	movwf	??_Lcd_Init
  3050  055E                     u1247:
  3051  055E  0BA0               	decfsz	??_Lcd_Init,f
  3052  055F  2D5E               	goto	u1247
  3053  0560  0000               	nop
  3054  0561                     l1819:
  3055                           
  3056                           ;lcd.c: 53:   Lcd_Cmd(0x030);
  3057  0561  3030               	movlw	48
  3058  0562  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  3059  0567                     l1821:
  3060                           
  3061                           ;lcd.c: 55:   Lcd_Cmd(0x038);
  3062  0567  3038               	movlw	56
  3063  0568  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  3064  056D                     l1823:
  3065                           
  3066                           ;lcd.c: 56:   Lcd_Cmd(0x010);
  3067  056D  3010               	movlw	16
  3068  056E  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  3069  0573                     l1825:
  3070                           
  3071                           ;lcd.c: 57:   Lcd_Cmd(0x001);
  3072  0573  3001               	movlw	1
  3073  0574  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  3074  0579                     l1827:
  3075                           
  3076                           ;lcd.c: 58:   Lcd_Cmd(0x006);
  3077  0579  3006               	movlw	6
  3078  057A  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  3079  057F                     l1829:
  3080                           
  3081                           ;lcd.c: 60:   Lcd_Cmd(0x0C);
  3082  057F  300C               	movlw	12
  3083  0580  120A  118A  26BD  120A  118A  	fcall	_Lcd_Cmd
  3084  0585                     l49:
  3085  0585  0008               	return
  3086  0586                     __end_of_Lcd_Init:
  3087                           
  3088                           	psect	text12
  3089  06BD                     __ptext12:	
  3090 ;; *************** function _Lcd_Cmd *****************
  3091 ;; Defined at:
  3092 ;;		line 16 in file "lcd.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  a               1    wreg     unsigned char 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  a               1    6[COMMON] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         0       0       0       0       0
  3107 ;;      Locals:         1       0       0       0       0
  3108 ;;      Temps:          2       0       0       0       0
  3109 ;;      Totals:         3       0       0       0       0
  3110 ;;Total ram usage:        3 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    2
  3113 ;; This function calls:
  3114 ;;		_Lcd_Port
  3115 ;; This function is called by:
  3116 ;;		_Lcd_Set_Cursor
  3117 ;;		_Lcd_Init
  3118 ;;		_Lcd_Shift_Right
  3119 ;;		_Lcd_Shift_Left
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _Lcd_Cmd
  3125  06BD                     _Lcd_Cmd:
  3126                           
  3127                           ;incstack = 0
  3128                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3129                           ;Lcd_Cmd@a stored from wreg
  3130  06BD  00F6               	movwf	Lcd_Cmd@a
  3131  06BE                     l1777:
  3132                           
  3133                           ;lcd.c: 16: void Lcd_Cmd(char a);lcd.c: 17: {;lcd.c: 18:  RE0 = 0;
  3134  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3135  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3136  06C0  1009               	bcf	9,0	;volatile
  3137  06C1                     l1779:
  3138                           
  3139                           ;lcd.c: 19:  Lcd_Port(a);
  3140  06C1  0876               	movf	Lcd_Cmd@a,w
  3141  06C2  120A  118A  271D  120A  118A  	fcall	_Lcd_Port
  3142  06C7                     l1781:
  3143                           
  3144                           ;lcd.c: 20:  RE1 = 1;
  3145  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3146  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3147  06C9  1489               	bsf	9,1	;volatile
  3148  06CA                     l1783:
  3149                           
  3150                           ;lcd.c: 21:         _delay((unsigned long)((10)*(4000000/4000.0)));
  3151  06CA  300D               	movlw	13
  3152  06CB  00F5               	movwf	??_Lcd_Cmd+1
  3153  06CC  30FB               	movlw	251
  3154  06CD  00F4               	movwf	??_Lcd_Cmd
  3155  06CE                     u1257:
  3156  06CE  0BF4               	decfsz	??_Lcd_Cmd,f
  3157  06CF  2ECE               	goto	u1257
  3158  06D0  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3159  06D1  2ECE               	goto	u1257
  3160  06D2  2ED3               	nop2
  3161  06D3                     l1785:
  3162                           
  3163                           ;lcd.c: 22:         RE1 = 0;
  3164  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3165  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3166  06D5  1089               	bcf	9,1	;volatile
  3167  06D6                     l40:
  3168  06D6  0008               	return
  3169  06D7                     __end_of_Lcd_Cmd:
  3170                           
  3171                           	psect	text13
  3172  071D                     __ptext13:	
  3173 ;; *************** function _Lcd_Port *****************
  3174 ;; Defined at:
  3175 ;;		line 12 in file "lcd.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  a               1    wreg     unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  a               1    3[COMMON] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       0       0       0       0
  3190 ;;      Locals:         1       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0
  3192 ;;      Totals:         1       0       0       0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_Lcd_Cmd
  3200 ;;		_Lcd_Init
  3201 ;;		_Lcd_Write_Char
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _Lcd_Port
  3207  071D                     _Lcd_Port:
  3208                           
  3209                           ;incstack = 0
  3210                           ; Regs used in _Lcd_Port: [wreg]
  3211                           ;Lcd_Port@a stored from wreg
  3212  071D  00F3               	movwf	Lcd_Port@a
  3213  071E                     l1775:
  3214                           
  3215                           ;lcd.c: 12: void Lcd_Port(char a);lcd.c: 13: {;lcd.c: 14:  PORTD = a;
  3216  071E  0873               	movf	Lcd_Port@a,w
  3217  071F  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0720  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0721  0088               	movwf	8	;volatile
  3220  0722                     l37:
  3221  0722  0008               	return
  3222  0723                     __end_of_Lcd_Port:
  3223                           
  3224                           	psect	text14
  3225  032C                     __ptext14:	
  3226 ;; *************** function _isr *****************
  3227 ;; Defined at:
  3228 ;;		line 71 in file "lab3.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          3       0       0       0       0
  3245 ;;      Totals:         3       0       0       0       0
  3246 ;;Total ram usage:        3 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		Interrupt level 1
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _isr
  3257  032C                     _isr:
  3258  032C                     i1l1571:
  3259                           
  3260                           ;lab3.c: 72:         RC_temp = RCREG;
  3261  032C  138B               	bcf	11,7	;volatile
  3262                           
  3263                           ;lab3.c: 73:         }
  3264  032D  1D0B               	btfss	11,2	;volatile
  3265  032E  2B30               	goto	u79_21
  3266  032F  2B31               	goto	u79_20
  3267  0330                     u79_21:
  3268  0330  2B38               	goto	i1l1577
  3269  0331                     u79_20:
  3270  0331                     i1l1573:
  3271                           
  3272                           ;lab3.c: 74:     }
  3273  0331  3001               	movlw	1
  3274  0332  00F0               	movwf	??_isr
  3275  0333  0870               	movf	??_isr,w
  3276  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0335  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0336  07C4               	addwf	_CONTX,f
  3279  0337                     i1l1575:
  3280                           
  3281                           ;lab3.c: 75: 
  3282  0337  110B               	bcf	11,2	;volatile
  3283  0338                     i1l1577:
  3284                           
  3285                           ;lab3.c: 78:             TXREG = C11 + 48;
  3286  0338  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0339  1303               	bcf	3,6	;RP1=0, select bank0
  3288  033A  1F0C               	btfss	12,6	;volatile
  3289  033B  2B3D               	goto	u80_21
  3290  033C  2B3E               	goto	u80_20
  3291  033D                     u80_21:
  3292  033D  2B53               	goto	i1l1597
  3293  033E                     u80_20:
  3294  033E                     i1l1579:
  3295                           
  3296                           ;lab3.c: 79:             bandera1 = 1;
  3297  033E  037A               	decf	_bandera,w
  3298  033F  1D03               	btfss	3,2
  3299  0340  2B42               	goto	u81_21
  3300  0341  2B43               	goto	u81_20
  3301  0342                     u81_21:
  3302  0342  2B4A               	goto	i1l1587
  3303  0343                     u81_20:
  3304  0343                     i1l1581:
  3305                           
  3306                           ;lab3.c: 80:         } else if (bandera1 == 1){
  3307  0343  081E               	movf	30,w	;volatile
  3308  0344  00F0               	movwf	??_isr
  3309  0345  0870               	movf	??_isr,w
  3310  0346  00CA               	movwf	_ADC1
  3311  0347                     i1l1583:
  3312                           
  3313                           ;lab3.c: 81:             TXREG = C12 + 48;
  3314  0347  151F               	bsf	31,2	;volatile
  3315  0348                     i1l1585:
  3316                           
  3317                           ;lab3.c: 82:             bandera1 = 2;
  3318  0348  01FA               	clrf	_bandera
  3319                           
  3320                           ;lab3.c: 83:         } else if (bandera1 == 2){
  3321  0349  2B51               	goto	i1l1593
  3322  034A                     i1l1587:
  3323                           
  3324                           ;lab3.c: 84:             TXREG = C13 + 48;
  3325  034A  081E               	movf	30,w	;volatile
  3326  034B  00F0               	movwf	??_isr
  3327  034C  0870               	movf	??_isr,w
  3328  034D  00C9               	movwf	_ADC2
  3329  034E                     i1l1589:
  3330                           
  3331                           ;lab3.c: 85:             bandera1 = 3;
  3332  034E  111F               	bcf	31,2	;volatile
  3333  034F                     i1l1591:
  3334                           
  3335                           ;lab3.c: 86:         } else if (bandera1 == 3){
  3336  034F  01FA               	clrf	_bandera
  3337  0350  0AFA               	incf	_bandera,f
  3338  0351                     i1l1593:
  3339                           
  3340                           ;lab3.c: 88:             bandera1 = 4;
  3341  0351  130C               	bcf	12,6	;volatile
  3342  0352                     i1l1595:
  3343                           
  3344                           ;lab3.c: 89:         }
  3345  0352  149F               	bsf	31,1	;volatile
  3346  0353                     i1l1597:
  3347                           
  3348                           ;lab3.c: 91:             TXREG = C21 + 48;
  3349  0353  1E8C               	btfss	12,5	;volatile
  3350  0354  2B56               	goto	u82_21
  3351  0355  2B57               	goto	u82_20
  3352  0356                     u82_21:
  3353  0356  2B96               	goto	i1l1619
  3354  0357                     u82_20:
  3355  0357                     i1l1599:
  3356                           
  3357                           ;lab3.c: 93:         } else if (bandera1 == 5){
  3358  0357  1785               	bsf	5,7	;volatile
  3359  0358                     i1l1601:
  3360                           
  3361                           ;lab3.c: 94:             TXREG = C22 + 48;
  3362  0358  300D               	movlw	13
  3363  0359  061A               	xorwf	26,w	;volatile
  3364  035A  1D03               	btfss	3,2
  3365  035B  2B5D               	goto	u83_21
  3366  035C  2B5E               	goto	u83_20
  3367  035D                     u83_21:
  3368  035D  2B91               	goto	i1l1617
  3369  035E                     u83_20:
  3370  035E                     i1l1603:
  3371                           
  3372                           ;lab3.c: 95:             bandera1 = 6;
  3373  035E  1385               	bcf	5,7	;volatile
  3374  035F                     i1l1605:
  3375                           
  3376                           ;lab3.c: 96:         } else if (bandera1 == 6){
  3377  035F  302B               	movlw	43
  3378  0360  0679               	xorwf	_RC_temp,w
  3379  0361  1D03               	btfss	3,2
  3380  0362  2B64               	goto	u84_21
  3381  0363  2B65               	goto	u84_20
  3382  0364                     u84_21:
  3383  0364  2B77               	goto	i1l1611
  3384  0365                     u84_20:
  3385  0365                     i1l1607:
  3386                           
  3387                           ;lab3.c: 97:             TXREG = C23 + 48;
  3388  0365  3001               	movlw	1
  3389  0366  07B6               	addwf	_contador,f
  3390  0367  1803               	skipnc
  3391  0368  0AB7               	incf	_contador+1,f
  3392  0369  3000               	movlw	0
  3393  036A  07B7               	addwf	_contador+1,f
  3394                           
  3395                           ;lab3.c: 98:             bandera1 = 7;
  3396  036B  3001               	movlw	1
  3397  036C  0237               	subwf	_contador+1,w
  3398  036D  3000               	movlw	0
  3399  036E  1903               	skipnz
  3400  036F  0236               	subwf	_contador,w
  3401  0370  1C03               	skipc
  3402  0371  2B73               	goto	u85_21
  3403  0372  2B74               	goto	u85_20
  3404  0373                     u85_21:
  3405  0373  2B96               	goto	i1l1619
  3406  0374                     u85_20:
  3407  0374                     i1l1609:
  3408                           
  3409                           ;lab3.c: 99:         } else if (bandera1 == 7){
  3410  0374  01B6               	clrf	_contador
  3411  0375  01B7               	clrf	_contador+1
  3412  0376  2B96               	goto	i1l1619
  3413  0377                     i1l1611:
  3414  0377  302D               	movlw	45
  3415  0378  0679               	xorwf	_RC_temp,w
  3416  0379  1D03               	btfss	3,2
  3417  037A  2B7C               	goto	u86_21
  3418  037B  2B7D               	goto	u86_20
  3419  037C                     u86_21:
  3420  037C  2B96               	goto	i1l203
  3421  037D                     u86_20:
  3422  037D                     i1l1613:
  3423                           
  3424                           ;lab3.c: 102:         }
  3425  037D  3001               	movlw	1
  3426  037E  02B6               	subwf	_contador,f
  3427  037F  3000               	movlw	0
  3428  0380  1C03               	skipc
  3429  0381  03B7               	decf	_contador+1,f
  3430  0382  02B7               	subwf	_contador+1,f
  3431                           
  3432                           ;lab3.c: 104:     TXIE = 0;
  3433  0383  3001               	movlw	1
  3434  0384  0237               	subwf	_contador+1,w
  3435  0385  3000               	movlw	0
  3436  0386  1903               	skipnz
  3437  0387  0236               	subwf	_contador,w
  3438  0388  1C03               	skipc
  3439  0389  2B8B               	goto	u87_21
  3440  038A  2B8C               	goto	u87_20
  3441  038B                     u87_21:
  3442  038B  2B96               	goto	i1l203
  3443  038C                     u87_20:
  3444  038C                     i1l1615:
  3445                           
  3446                           ;lab3.c: 105:     }
  3447  038C  30FF               	movlw	255
  3448  038D  00B6               	movwf	_contador
  3449  038E  3000               	movlw	0
  3450  038F  00B7               	movwf	_contador+1
  3451  0390  2B96               	goto	i1l1619
  3452  0391                     i1l1617:
  3453                           
  3454                           ;lab3.c: 110:     Setup();
  3455  0391  081A               	movf	26,w	;volatile
  3456  0392  00F0               	movwf	??_isr
  3457  0393  0870               	movf	??_isr,w
  3458  0394  00F9               	movwf	_RC_temp
  3459  0395  2B96               	goto	i1l1619
  3460  0396                     i1l203:	
  3461                           ;lab3.c: 111:     while(1){
  3462                           
  3463  0396                     i1l1619:
  3464                           
  3465                           ;lab3.c: 114:             TXIE = 1;
  3466  0396  1E0C               	btfss	12,4	;volatile
  3467  0397  2B99               	goto	u88_21
  3468  0398  2B9A               	goto	u88_20
  3469  0399                     u88_21:
  3470  0399  2C04               	goto	i1l1669
  3471  039A                     u88_20:
  3472  039A                     i1l1621:
  3473                           
  3474                           ;lab3.c: 115:             }
  3475  039A  0878               	movf	_bandera1,w
  3476  039B  1D03               	btfss	3,2
  3477  039C  2B9E               	goto	u89_21
  3478  039D  2B9F               	goto	u89_20
  3479  039E                     u89_21:
  3480  039E  2BA5               	goto	i1l1627
  3481  039F                     u89_20:
  3482  039F                     i1l1623:
  3483                           
  3484                           ;lab3.c: 116: 
  3485  039F  0842               	movf	_C11,w
  3486  03A0  3E30               	addlw	48
  3487  03A1  0099               	movwf	25	;volatile
  3488  03A2                     i1l1625:
  3489                           
  3490                           ;lab3.c: 117: 
  3491  03A2  01F8               	clrf	_bandera1
  3492  03A3  0AF8               	incf	_bandera1,f
  3493                           
  3494                           ;lab3.c: 118:     C11 = ADC1 / 51;
  3495  03A4  2C01               	goto	i1l1667
  3496  03A5                     i1l1627:
  3497  03A5  0378               	decf	_bandera1,w
  3498  03A6  1D03               	btfss	3,2
  3499  03A7  2BA9               	goto	u90_21
  3500  03A8  2BAA               	goto	u90_20
  3501  03A9                     u90_21:
  3502  03A9  2BB2               	goto	i1l1633
  3503  03AA                     u90_20:
  3504  03AA                     i1l1629:
  3505                           
  3506                           ;lab3.c: 119:     C12 = ((ADC1 * 100 / 51) - (C11*100))/10;
  3507  03AA  0841               	movf	_C12,w
  3508  03AB  3E30               	addlw	48
  3509  03AC  0099               	movwf	25	;volatile
  3510  03AD                     i1l1631:
  3511                           
  3512                           ;lab3.c: 120:     C13 = ((ADC1 * 100 / 51) - (C11*100) - (C12*10));
  3513  03AD  3002               	movlw	2
  3514  03AE  00F0               	movwf	??_isr
  3515  03AF  0870               	movf	??_isr,w
  3516  03B0  00F8               	movwf	_bandera1
  3517                           
  3518                           ;lab3.c: 121: 
  3519  03B1  2C01               	goto	i1l1667
  3520  03B2                     i1l1633:
  3521  03B2  3002               	movlw	2
  3522  03B3  0678               	xorwf	_bandera1,w
  3523  03B4  1D03               	btfss	3,2
  3524  03B5  2BB7               	goto	u91_21
  3525  03B6  2BB8               	goto	u91_20
  3526  03B7                     u91_21:
  3527  03B7  2BC0               	goto	i1l1639
  3528  03B8                     u91_20:
  3529  03B8                     i1l1635:
  3530                           
  3531                           ;lab3.c: 122:     C21 = ADC2 / 51;
  3532  03B8  0840               	movf	_C13,w
  3533  03B9  3E30               	addlw	48
  3534  03BA  0099               	movwf	25	;volatile
  3535  03BB                     i1l1637:
  3536                           
  3537                           ;lab3.c: 123:     C22 = (((ADC2 * 100) / 51) - (C21*100))/10;
  3538  03BB  3003               	movlw	3
  3539  03BC  00F0               	movwf	??_isr
  3540  03BD  0870               	movf	??_isr,w
  3541  03BE  00F8               	movwf	_bandera1
  3542                           
  3543                           ;lab3.c: 124:     C23 = (((ADC2 * 100) / 51) - (C21*100) - (C22*10));
  3544  03BF  2C01               	goto	i1l1667
  3545  03C0                     i1l1639:
  3546  03C0  3003               	movlw	3
  3547  03C1  0678               	xorwf	_bandera1,w
  3548  03C2  1D03               	btfss	3,2
  3549  03C3  2BC5               	goto	u92_21
  3550  03C4  2BC6               	goto	u92_20
  3551  03C5                     u92_21:
  3552  03C5  2BCD               	goto	i1l1643
  3553  03C6                     u92_20:
  3554  03C6                     i1l1641:
  3555                           
  3556                           ;lab3.c: 125: 
  3557  03C6  302D               	movlw	45
  3558  03C7  0099               	movwf	25	;volatile
  3559                           
  3560                           ;lab3.c: 126:     C31 = contador / 51;
  3561  03C8  3004               	movlw	4
  3562  03C9  00F0               	movwf	??_isr
  3563  03CA  0870               	movf	??_isr,w
  3564  03CB  00F8               	movwf	_bandera1
  3565                           
  3566                           ;lab3.c: 127:     C32 = ((contador * 100 / 51) - (C31*100))/10;
  3567  03CC  2C01               	goto	i1l1667
  3568  03CD                     i1l1643:
  3569  03CD  3004               	movlw	4
  3570  03CE  0678               	xorwf	_bandera1,w
  3571  03CF  1D03               	btfss	3,2
  3572  03D0  2BD2               	goto	u93_21
  3573  03D1  2BD3               	goto	u93_20
  3574  03D2                     u93_21:
  3575  03D2  2BDB               	goto	i1l1649
  3576  03D3                     u93_20:
  3577  03D3                     i1l1645:
  3578                           
  3579                           ;lab3.c: 129: 
  3580  03D3  083F               	movf	_C21,w
  3581  03D4  3E30               	addlw	48
  3582  03D5  0099               	movwf	25	;volatile
  3583  03D6                     i1l1647:
  3584                           
  3585                           ;lab3.c: 130:     if (C12 > 9){
  3586  03D6  3005               	movlw	5
  3587  03D7  00F0               	movwf	??_isr
  3588  03D8  0870               	movf	??_isr,w
  3589  03D9  00F8               	movwf	_bandera1
  3590                           
  3591                           ;lab3.c: 131:         C12 = 9;
  3592  03DA  2C01               	goto	i1l1667
  3593  03DB                     i1l1649:
  3594  03DB  3005               	movlw	5
  3595  03DC  0678               	xorwf	_bandera1,w
  3596  03DD  1D03               	btfss	3,2
  3597  03DE  2BE0               	goto	u94_21
  3598  03DF  2BE1               	goto	u94_20
  3599  03E0                     u94_21:
  3600  03E0  2BE9               	goto	i1l1655
  3601  03E1                     u94_20:
  3602  03E1                     i1l1651:
  3603                           
  3604                           ;lab3.c: 132:     }
  3605  03E1  083E               	movf	_C22,w
  3606  03E2  3E30               	addlw	48
  3607  03E3  0099               	movwf	25	;volatile
  3608  03E4                     i1l1653:
  3609                           
  3610                           ;lab3.c: 133:     if (C13 > 9){
  3611  03E4  3006               	movlw	6
  3612  03E5  00F0               	movwf	??_isr
  3613  03E6  0870               	movf	??_isr,w
  3614  03E7  00F8               	movwf	_bandera1
  3615                           
  3616                           ;lab3.c: 134:         C13 = 9;
  3617  03E8  2C01               	goto	i1l1667
  3618  03E9                     i1l1655:
  3619  03E9  3006               	movlw	6
  3620  03EA  0678               	xorwf	_bandera1,w
  3621  03EB  1D03               	btfss	3,2
  3622  03EC  2BEE               	goto	u95_21
  3623  03ED  2BEF               	goto	u95_20
  3624  03EE                     u95_21:
  3625  03EE  2BF7               	goto	i1l1661
  3626  03EF                     u95_20:
  3627  03EF                     i1l1657:
  3628                           
  3629                           ;lab3.c: 135:     }
  3630  03EF  083D               	movf	_C23,w
  3631  03F0  3E30               	addlw	48
  3632  03F1  0099               	movwf	25	;volatile
  3633  03F2                     i1l1659:
  3634                           
  3635                           ;lab3.c: 136:     if (C22 > 9){
  3636  03F2  3007               	movlw	7
  3637  03F3  00F0               	movwf	??_isr
  3638  03F4  0870               	movf	??_isr,w
  3639  03F5  00F8               	movwf	_bandera1
  3640                           
  3641                           ;lab3.c: 137:         C22 = 9;
  3642  03F6  2C01               	goto	i1l1667
  3643  03F7                     i1l1661:
  3644  03F7  3007               	movlw	7
  3645  03F8  0678               	xorwf	_bandera1,w
  3646  03F9  1D03               	btfss	3,2
  3647  03FA  2BFC               	goto	u96_21
  3648  03FB  2BFD               	goto	u96_20
  3649  03FC                     u96_21:
  3650  03FC  2C01               	goto	i1l214
  3651  03FD                     u96_20:
  3652  03FD                     i1l1663:
  3653                           
  3654                           ;lab3.c: 138:     }
  3655  03FD  300D               	movlw	13
  3656  03FE  0099               	movwf	25	;volatile
  3657  03FF                     i1l1665:
  3658                           
  3659                           ;lab3.c: 139:     if (C23 > 9){
  3660  03FF  01F8               	clrf	_bandera1
  3661  0400  2C01               	goto	i1l1667
  3662  0401                     i1l214:
  3663  0401                     i1l1667:
  3664                           
  3665                           ;lab3.c: 142: 
  3666  0401  1683               	bsf	3,5	;RP0=1, select bank1
  3667  0402  1303               	bcf	3,6	;RP1=0, select bank1
  3668  0403  120C               	bcf	12,4	;volatile
  3669  0404                     i1l1669:
  3670                           
  3671                           ;lab3.c: 144:         C11 = 5;
  3672  0404  178B               	bsf	11,7	;volatile
  3673  0405                     i1l220:
  3674  0405  0872               	movf	??_isr+2,w
  3675  0406  008A               	movwf	10
  3676  0407  0E71               	swapf	??_isr+1,w
  3677  0408  0083               	movwf	3
  3678  0409  0EFE               	swapf	btemp,f
  3679  040A  0E7E               	swapf	btemp,w
  3680  040B  0009               	retfie
  3681  040C                     __end_of_isr:
  3682  007E                     btemp	set	126	;btemp
  3683  007E                     wtemp0	set	126
  3684                           
  3685                           	psect	intentry
  3686  0004                     __pintentry:	
  3687                           ;incstack = 0
  3688                           ; Regs used in _isr: [wreg+status,2+status,0]
  3689                           
  3690  0004                     interrupt_function:
  3691  007E                     saved_w	set	btemp
  3692  0004  00FE               	movwf	btemp
  3693  0005  0E03               	swapf	3,w
  3694  0006  00F1               	movwf	??_isr+1
  3695  0007  080A               	movf	10,w
  3696  0008  00F2               	movwf	??_isr+2
  3697  0009  120A  118A  2B2C   	ljmp	_isr
  3698                           
  3699                           	psect	config
  3700                           
  3701                           ;Config register CONFIG1 @ 0x2007
  3702                           ;	Oscillator Selection bits
  3703                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3704                           ;	Watchdog Timer Enable bit
  3705                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3706                           ;	Power-up Timer Enable bit
  3707                           ;	PWRTE = OFF, PWRT disabled
  3708                           ;	RE3/MCLR pin function select bit
  3709                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3710                           ;	Code Protection bit
  3711                           ;	CP = OFF, Program memory code protection is disabled
  3712                           ;	Data Code Protection bit
  3713                           ;	CPD = OFF, Data memory code protection is disabled
  3714                           ;	Brown Out Reset Selection bits
  3715                           ;	BOREN = OFF, BOR disabled
  3716                           ;	Internal External Switchover bit
  3717                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3718                           ;	Fail-Safe Clock Monitor Enabled bit
  3719                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3720                           ;	Low Voltage Programming Enable bit
  3721                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3722                           ;	In-Circuit Debugger Mode bit
  3723                           ;	DEBUG = 0x1, unprogrammed default
  3724  2007                     	org	8199
  3725  2007  20D4               	dw	8404
  3726                           
  3727                           ;Config register CONFIG2 @ 0x2008
  3728                           ;	Brown-out Reset Selection bit
  3729                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3730                           ;	Flash Program Memory Self Write Enable bits
  3731                           ;	WRT = OFF, Write protection off
  3732  2008                     	org	8200
  3733  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     22      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___awdiv
    _main->___lwdiv
    ___lwdiv->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___lwdiv->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Set_Cursor
    _Setup->_Lcd_Write_String

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    8485
                                             10 BANK0     12    12      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                              _Setup
                            ___awdiv
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1756
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              7 COMMON     1     1      0
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     548
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1516
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0    2127
                                              3 BANK0      1     1      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _initADC
                          _initUSART
 ---------------------------------------------------------------------------------
 (2) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     408
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1604
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _initADC
     _initUSART
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 22:59:14 2021

                        _a 0038                          pc 0002             ___bmul@product 0075  
                       l20 059F                         l21 05A4                         l22 05A9  
                       l23 05AE                         l40 06D6                         l24 05B3  
                       l16 0590                         l25 05B8                         l18 0595  
                       l26 05DF                         l19 059A                         l52 0700  
                       l37 0722                         l46 069F                         l49 0585  
                       l58 0679                         l83 06BC               ___awdiv@sign 0027  
                       fsr 0004        ___wmul@multiplicand 0075                        _C11 0042  
                      _C12 0041                        _C13 0040                        _C21 003F  
                      _C22 003E                        _C23 003D                        _C31 003C  
                      _C32 003B                        _C33 003A                        l230 0251  
                      l231 025B                        l232 0265                        l227 0233  
                      l228 023D                        l325 0636                        l229 0247  
                      l239 04BE                        l351 06EB                        l327 0650  
                      l478 0527                        l597 0625                        _RA7 002F  
                      _RE0 0048                        _RE1 0049                        u600 06DD  
                      u601 06DC                        u610 06EA                        u611 06E9  
                      u700 0519                        u620 04C6                        u701 0518  
                      u621 04C5                        u710 051E                        u630 04D1  
                      u711 051D                        u631 04D0                        u640 04E2  
                      u720 05EA                        u641 04E1                        u721 05E9  
                      u660 04F4                        u740 05FC                        u661 04F3  
                      u741 05FB                        u655 04E6                        u735 05EE  
                      u680 0505                        u760 060D                        u681 0504  
                      u761 060C                        u675 04F5                        u755 05FD  
                      u780 0621                        u685 0501                        u781 0620  
                      u765 0609                        u695 050D                        u775 0615  
                      _isr 032C                        fsr0 0004                        indf 0000  
                     l2021 05C5                       l1401 06B6                       l1403 06B9  
                     l1333 05BD                       l1325 0587                       l1405 06BA  
                     l1501 04C6                       l1327 058B                       l1407 06BB  
                     l1511 04DA                       l1503 04CB                       l1329 058E  
                     l1521 04F0                       l1513 04DC                       l1505 04CD  
                     l1531 0513                       l1523 04F4                       l1515 04E2  
                     l1507 04D1                       l1381 06A0                       l1525 0505  
                     l1517 04E5                       l1533 0519                       l1509 04D6  
                     l1541 05E0                       l1391 06AD                       l1383 06A4  
                     l1535 051E                       l1527 050B                       l1519 04EC  
                     l1551 05F8                       l1543 05E4                       l1801 0687  
                     l1393 06AE                       l1385 06A6                       l1537 0523  
                     l1529 050C                       l1561 061B                       l1553 05FC  
                     l1545 05EA                       l1811 0532                       l1803 068E  
                     l1395 06B1                       l1387 06A7                       l1491 06E3  
                     l1483 06D8                       l1555 060D                       l1547 05ED  
                     l1563 0621                       l1821 0567                       l1813 0538  
                     l1805 0694                       l1397 06B4                       l1389 06AA  
                     l1493 06EA                       l1485 06D9                       l1557 0613  
                     l1549 05F4                       l1901 062A                       l1823 056D  
                     l1815 0549                       l1807 0699                       l1831 0654  
                     l1399 06B5                       l1487 06DD                       l1559 0614  
                     l1903 062E                       _ADC1 004A                       _ADC2 0049  
                     l1825 0573                       l1817 0554                       l1809 0528  
                     l1833 0657                       l1841 0417                       l1497 04BF  
                     l1489 06E1                       l1905 063D                       l1921 002C  
                     l1827 0579                       l1819 0561                       l1835 0664  
                     l1851 0432                       l1843 041B                       l1499 04C2  
                     l1907 0644                       l1931 0099                       l1923 002D  
                     l1781 06C7                       l1829 057F                       l1837 066C  
                     l1861 0447                       l1853 0435                       l1845 041E  
                     l1909 064A                       l1941 0187                       l1933 00DC  
                     l1925 0030                       l1917 001F                       l1775 071E  
                     l1783 06CA                       l1791 06F6                       l1871 0450  
                     l1863 0448                       l1855 0438                       l1847 0421  
                     l1839 040C                       l1951 022F                       l1943 019A  
                     l1935 00F2                       l1927 0047                       l1919 0024  
                     l1785 06D3                       l1777 06BE                       l1793 06F9  
                     l1881 0470                       l1873 0451                       l1865 044A  
                     l1857 043E                       l1849 042D                       l1961 0261  
                     l1953 0239                       l1945 01D6                       l1937 0131  
                     l1929 0086                       l1779 06C1                       l1795 06FD  
                     l1787 06ED                       l1891 049A                       l1883 0476  
                     l1875 0456                       l1867 044E                       l1859 0444  
                     l1971 028C                       l1963 026B                       l1955 0243  
                     l1947 01E9                       l1939 0144                       l1797 067D  
                     l1789 06F0                       l1893 04A6                       l1885 0482  
                     l1877 0462                       l1869 044F                       l1981 02BF  
                     l1973 0295                       l1965 026F                       l1957 024D  
                     l1949 0229                       l1799 0682                       l1895 04AC  
                     l1887 0488                       l1879 0468                       l1991 02F5  
                     l1983 02CB                       l1975 02A1                       l1967 0277  
                     l1959 0257                       l1897 04B8                       l1889 0494  
                     l1993 02FE                       l1985 02D4                       l1977 02AA  
                     l1969 0280                       l1899 0626                       l1995 030A  
                     l1987 02E0                       l1979 02B6                       l1997 0313  
                     l1989 02E9                       l1999 031F                       _ADIF 0066  
                     ?_isr 0070                       STR_1 070C                       STR_2 0707  
                     STR_3 070F                       STR_4 0707                       STR_5 0712  
                     STR_6 0707                       u1110 064A                       u1111 0649  
                     u1120 002C                       u1105 063E                       u1121 002B  
                     u1050 0682                       u1130 022F                       u1051 0681  
                     u1131 022E                       u1060 0694                       u1140 0239  
                     u1061 0693                       u1141 0238                       u1070 0679  
                     u1150 0243                       u1207 06FB                       u1071 0678  
                     u1151 0242                       u1080 062E                       u1160 024D  
                     u1217 052E                       u1081 062D                       u1161 024C  
                     u1170 0257                       u1227 053E                       u1171 0256  
                     u1180 0261                       u1237 054F                       u1181 0260  
                     u1190 026B                       u1247 055E                       u1095 0637  
                     u1191 026A                       u1257 06CE                       _TMR0 0001  
                     _TXIE 0464                       _TXIF 0064          ?_Lcd_Write_String 0070  
                     _main 001F                       _ughh 0045                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 06D7  
        ___bmul@multiplier 0076                      ??_isr 0070                initADC@IRCF 0075  
                    ?_main 0070            __end_of___awdiv 0528                      _ANSEL 0188  
          ___awdiv@divisor 0022                      _CONTX 0044            __end_of___lwdiv 0626  
                    i1l203 0396                      i1l220 0405                      i1l214 0401  
          ___awdiv@counter 0026                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    u80_20 033E                      u80_21 033D                      u81_20 0343  
                    u81_21 0342    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    u90_20 03AA                      u82_20 0357                      u90_21 03A9  
                    u82_21 0356                      u91_20 03B8                      u83_20 035E  
                    u91_21 03B7                      u83_21 035D                      u92_20 03C6  
                    u84_20 0365                      u92_21 03C5                      u84_21 0364  
                    u93_20 03D3                      u85_20 0374                      u93_21 03D2  
                    u85_21 0373                      u94_20 03E1                      u86_20 037D  
                    u94_21 03E0                      u86_21 037C                      u95_20 03EF  
                    u87_20 038C                      u79_20 0331                      u95_21 03EE  
                    u87_21 038B                      u79_21 0330                      u96_20 03FD  
                    u88_20 039A                      u96_21 03FC                      u88_21 0399  
                    u89_20 039F                      u89_21 039E                      _TXREG 0019  
                    _Setup 040C            __end_of_initADC 05E0                      _cont1 0047  
                    _cont2 0046                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0586           __end_of_Lcd_Port 0723  
          __initialization 000F               __end_of_main 032C                     ??_main 002A  
                   ?_Setup 0070                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E           ___awdiv@dividend 0024                     i1l1601 0358  
                   i1l1611 0377                     i1l1603 035E                     i1l1621 039A  
                   i1l1613 037D                     i1l1605 035F                     i1l1631 03AD  
                   i1l1623 039F                     i1l1615 038C                     i1l1607 0365  
                   i1l1641 03C6                     i1l1633 03B2                     i1l1625 03A2  
                   i1l1609 0374                     i1l1617 0391                     i1l1651 03E1  
                   i1l1643 03CD                     i1l1635 03B8                     i1l1627 03A5  
                   i1l1619 0396                     i1l1571 032C                     i1l1661 03F7  
                   i1l1653 03E4                     i1l1645 03D3                     i1l1637 03BB  
                   i1l1629 03AA                     i1l1581 0343                     i1l1573 0331  
                   i1l1663 03FD                     i1l1655 03E9                     i1l1647 03D6  
                   i1l1639 03C0                     i1l1591 034F                     i1l1583 0347  
                   i1l1575 0337                     i1l1665 03FF                     i1l1657 03EF  
                   i1l1649 03DB                     i1l1593 0351                     i1l1585 0348  
                   i1l1577 0338                     i1l1659 03F2                     i1l1667 0401  
                   i1l1595 0352                     i1l1587 034A                     i1l1579 033E  
                   i1l1669 0404                     i1l1589 034E                     i1l1597 0353  
                   i1l1599 0357                  ??_Lcd_Cmd 0074                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0015                     ___bmul 06D7                     ___wmul 0626  
                ??___awdiv 0077                  ??___lwdiv 0077           ___awdiv@quotient 0028  
                ??_initADC 0073                     saved_w 007E            Lcd_Set_Cursor@a 0021  
          Lcd_Set_Cursor@b 0077    __end_of__initialization 001B        ___bmul@multiplicand 0073  
           __pcstackCOMMON 0070              __end_of_Setup 04BF             _Lcd_Set_Cursor 067A  
           _OPTION_REGbits 0081                    ??_Setup 0023                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0036         __size_of_initUSART 001D  
               __pmaintext 001F                    ?___bmul 0073                    ?___wmul 0073  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 06A0  
               ??_Lcd_Init 0020                 ??_Lcd_Port 0073                 __stringtab 0701  
                  _RC_temp 0079             _Lcd_Write_Char 06EC                    _Lcd_Cmd 06BD  
          __size_of___bmul 0015                    ___awdiv 04BF            __size_of___wmul 002B  
                  ___lwdiv 05E0                    _bandera 007A                  _ANSELbits 0188  
          ?_Lcd_Set_Cursor 0077          __end_of_initUSART 06BD                    __ptext1 0626  
                  __ptext2 05E0                    __ptext3 06D7                    __ptext4 04BF  
                  __ptext5 040C                    __ptext6 06A0                    __ptext7 0586  
                  __ptext8 0651                    __ptext9 06EC                    _initADC 0586  
             __size_of_isr 00E0                    clrloop0 0716     __end_of_Lcd_Write_Char 0701  
     end_of_initialization 001B                  _RCSTAbits 0018                  Lcd_Port@a 0073  
                _TRISAbits 0085                  _TRISCbits 0087                  _TRISEbits 0089  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022          Lcd_Write_String@i 0020  
                _TXSTAbits 0098             __end_of___bmul 06EC             __end_of___wmul 0651  
         _Lcd_Write_String 0651                _BAUDCTLbits 0187        start_initialization 000F  
              __end_of_isr 040C          __size_of_Lcd_Init 005E          __size_of_Lcd_Port 0006  
                 ??___bmul 0074                   ??___wmul 0077            Lcd_Write_Char@a 0075  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
                _banderaTX 0043                   ?_Lcd_Cmd 0070                  _main$1182 0034  
                _main$1183 0032           ___lwdiv@dividend 0024           ??_Lcd_Set_Cursor 0020  
                 ?___awdiv 0022                   ?___lwdiv 0022                  __pstrings 0701  
                 ?_initADC 0070                  _initUSART 06A0             __size_of_Setup 00B3  
         ___lwdiv@quotient 0026          interrupt_function 0004             ___wmul@product 0020  
                clear_ram0 0715                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                 _ADCON0bits 001F                __stringbase 0706  
        ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074                 ?_initUSART 0070  
                 _Lcd_Init 0528                   _Lcd_Port 071D   __end_of_Lcd_Write_String 067A  
         __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069           __size_of___lwdiv 0046  
       __end_of__stringtab 0707                   _bandera1 0078           __size_of_initADC 005A  
          ___lwdiv@divisor 0022            ___lwdiv@counter 0028                   __ptext10 067A  
                 __ptext11 0528                   __ptext12 06BD                   __ptext13 071D  
                 __ptext14 032C                   _contador 0036              __size_of_main 030D  
             _var_contador 0048                 _INTCONbits 000B                ??_initUSART 0073  
                 intlevel1 0000                  stringcode 0701         Lcd_Set_Cursor@temp 0022  
                 stringdir 0701                   stringtab 0701  
